var Ie = Object.defineProperty;
var Ee = Object.getOwnPropertySymbols;
var Fe = Object.prototype.hasOwnProperty, Le = Object.prototype.propertyIsEnumerable;
var Be = (q, ee, P) => ee in q ? Ie(q, ee, { enumerable: !0, configurable: !0, writable: !0, value: P }) : q[ee] = P, Ae = (q, ee) => {
  for (var P in ee || (ee = {}))
    Fe.call(ee, P) && Be(q, P, ee[P]);
  if (Ee)
    for (var P of Ee(ee))
      Le.call(ee, P) && Be(q, P, ee[P]);
  return q;
};
var ue = (q, ee, P) => new Promise((I, D) => {
  var S = (c) => {
    try {
      e(P.next(c));
    } catch (r) {
      D(r);
    }
  }, v = (c) => {
    try {
      e(P.throw(c));
    } catch (r) {
      D(r);
    }
  }, e = (c) => c.done ? I(c.value) : Promise.resolve(c.value).then(S, v);
  e((P = P.apply(q, ee)).next());
});
import { defineComponent as je, ref as Ue, onMounted as We, watch as He } from "vue-demi";
import { openBlock as $e, createElementBlock as Ze, createElementVNode as Ve } from "vue";
typeof window.setImmediate == "undefined" && (window.setImmediate = function(q, ...ee) {
  setTimeout(() => q(ee));
});
var we = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {}, Oe = { exports: {} };
function xe(q) {
  throw new Error('Could not dynamically require "' + q + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var Pe = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
var Ne;
function Xe() {
  return Ne || (Ne = 1, function(q, ee) {
    (function(P) {
      q.exports = P();
    })(function() {
      return function P(I, D, S) {
        function v(r, m) {
          if (!D[r]) {
            if (!I[r]) {
              var p = typeof xe == "function" && xe;
              if (!m && p)
                return p(r, !0);
              if (e)
                return e(r, !0);
              var a = new Error("Cannot find module '" + r + "'");
              throw a.code = "MODULE_NOT_FOUND", a;
            }
            var i = D[r] = { exports: {} };
            I[r][0].call(i.exports, function(y) {
              var d = I[r][1][y];
              return v(d || y);
            }, i, i.exports, P, I, D, S);
          }
          return D[r].exports;
        }
        for (var e = typeof xe == "function" && xe, c = 0; c < S.length; c++)
          v(S[c]);
        return v;
      }({ 1: [function(P, I, D) {
        var S = P("./utils"), v = P("./support"), e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        D.encode = function(c) {
          for (var r, m, p, a, i, y, d, h = [], f = 0, g = c.length, w = g, C = S.getTypeOf(c) !== "string"; f < c.length; )
            w = g - f, p = C ? (r = c[f++], m = f < g ? c[f++] : 0, f < g ? c[f++] : 0) : (r = c.charCodeAt(f++), m = f < g ? c.charCodeAt(f++) : 0, f < g ? c.charCodeAt(f++) : 0), a = r >> 2, i = (3 & r) << 4 | m >> 4, y = 1 < w ? (15 & m) << 2 | p >> 6 : 64, d = 2 < w ? 63 & p : 64, h.push(e.charAt(a) + e.charAt(i) + e.charAt(y) + e.charAt(d));
          return h.join("");
        }, D.decode = function(c) {
          var r, m, p, a, i, y, d = 0, h = 0, f = "data:";
          if (c.substr(0, f.length) === f)
            throw new Error("Invalid base64 input, it looks like a data url.");
          var g, w = 3 * (c = c.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
          if (c.charAt(c.length - 1) === e.charAt(64) && w--, c.charAt(c.length - 2) === e.charAt(64) && w--, w % 1 != 0)
            throw new Error("Invalid base64 input, bad content length.");
          for (g = v.uint8array ? new Uint8Array(0 | w) : new Array(0 | w); d < c.length; )
            r = e.indexOf(c.charAt(d++)) << 2 | (a = e.indexOf(c.charAt(d++))) >> 4, m = (15 & a) << 4 | (i = e.indexOf(c.charAt(d++))) >> 2, p = (3 & i) << 6 | (y = e.indexOf(c.charAt(d++))), g[h++] = r, i !== 64 && (g[h++] = m), y !== 64 && (g[h++] = p);
          return g;
        };
      }, { "./support": 30, "./utils": 32 }], 2: [function(P, I, D) {
        var S = P("./external"), v = P("./stream/DataWorker"), e = P("./stream/Crc32Probe"), c = P("./stream/DataLengthProbe");
        function r(m, p, a, i, y) {
          this.compressedSize = m, this.uncompressedSize = p, this.crc32 = a, this.compression = i, this.compressedContent = y;
        }
        r.prototype = { getContentWorker: function() {
          var m = new v(S.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new c("data_length")), p = this;
          return m.on("end", function() {
            if (this.streamInfo.data_length !== p.uncompressedSize)
              throw new Error("Bug : uncompressed data size mismatch");
          }), m;
        }, getCompressedWorker: function() {
          return new v(S.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
        } }, r.createWorkerFrom = function(m, p, a) {
          return m.pipe(new e()).pipe(new c("uncompressedSize")).pipe(p.compressWorker(a)).pipe(new c("compressedSize")).withStreamInfo("compression", p);
        }, I.exports = r;
      }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(P, I, D) {
        var S = P("./stream/GenericWorker");
        D.STORE = { magic: "\0\0", compressWorker: function() {
          return new S("STORE compression");
        }, uncompressWorker: function() {
          return new S("STORE decompression");
        } }, D.DEFLATE = P("./flate");
      }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(P, I, D) {
        var S = P("./utils"), v = function() {
          for (var e, c = [], r = 0; r < 256; r++) {
            e = r;
            for (var m = 0; m < 8; m++)
              e = 1 & e ? 3988292384 ^ e >>> 1 : e >>> 1;
            c[r] = e;
          }
          return c;
        }();
        I.exports = function(e, c) {
          return e !== void 0 && e.length ? S.getTypeOf(e) !== "string" ? function(r, m, p, a) {
            var i = v, y = a + p;
            r ^= -1;
            for (var d = a; d < y; d++)
              r = r >>> 8 ^ i[255 & (r ^ m[d])];
            return -1 ^ r;
          }(0 | c, e, e.length, 0) : function(r, m, p, a) {
            var i = v, y = a + p;
            r ^= -1;
            for (var d = a; d < y; d++)
              r = r >>> 8 ^ i[255 & (r ^ m.charCodeAt(d))];
            return -1 ^ r;
          }(0 | c, e, e.length, 0) : 0;
        };
      }, { "./utils": 32 }], 5: [function(P, I, D) {
        D.base64 = !1, D.binary = !1, D.dir = !1, D.createFolders = !0, D.date = null, D.compression = null, D.compressionOptions = null, D.comment = null, D.unixPermissions = null, D.dosPermissions = null;
      }, {}], 6: [function(P, I, D) {
        var S = null;
        S = typeof Promise != "undefined" ? Promise : P("lie"), I.exports = { Promise: S };
      }, { lie: 37 }], 7: [function(P, I, D) {
        var S = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Uint32Array != "undefined", v = P("pako"), e = P("./utils"), c = P("./stream/GenericWorker"), r = S ? "uint8array" : "array";
        function m(p, a) {
          c.call(this, "FlateWorker/" + p), this._pako = null, this._pakoAction = p, this._pakoOptions = a, this.meta = {};
        }
        D.magic = "\b\0", e.inherits(m, c), m.prototype.processChunk = function(p) {
          this.meta = p.meta, this._pako === null && this._createPako(), this._pako.push(e.transformTo(r, p.data), !1);
        }, m.prototype.flush = function() {
          c.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
        }, m.prototype.cleanUp = function() {
          c.prototype.cleanUp.call(this), this._pako = null;
        }, m.prototype._createPako = function() {
          this._pako = new v[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
          var p = this;
          this._pako.onData = function(a) {
            p.push({ data: a, meta: p.meta });
          };
        }, D.compressWorker = function(p) {
          return new m("Deflate", p);
        }, D.uncompressWorker = function() {
          return new m("Inflate", {});
        };
      }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(P, I, D) {
        function S(i, y) {
          var d, h = "";
          for (d = 0; d < y; d++)
            h += String.fromCharCode(255 & i), i >>>= 8;
          return h;
        }
        function v(i, y, d, h, f, g) {
          var w, C, n = i.file, s = i.compression, t = g !== r.utf8encode, l = e.transformTo("string", g(n.name)), b = e.transformTo("string", r.utf8encode(n.name)), k = n.comment, E = e.transformTo("string", g(k)), _ = e.transformTo("string", r.utf8encode(k)), T = b.length !== n.name.length, o = _.length !== k.length, R = "", V = "", L = "", K = n.dir, W = n.date, Q = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
          y && !d || (Q.crc32 = i.crc32, Q.compressedSize = i.compressedSize, Q.uncompressedSize = i.uncompressedSize);
          var z = 0;
          y && (z |= 8), t || !T && !o || (z |= 2048);
          var O = 0, Y = 0;
          K && (O |= 16), f === "UNIX" ? (Y = 798, O |= function(Z, se) {
            var ce = Z;
            return Z || (ce = se ? 16893 : 33204), (65535 & ce) << 16;
          }(n.unixPermissions, K)) : (Y = 20, O |= function(Z) {
            return 63 & (Z || 0);
          }(n.dosPermissions)), w = W.getUTCHours(), w <<= 6, w |= W.getUTCMinutes(), w <<= 5, w |= W.getUTCSeconds() / 2, C = W.getUTCFullYear() - 1980, C <<= 4, C |= W.getUTCMonth() + 1, C <<= 5, C |= W.getUTCDate(), T && (V = S(1, 1) + S(m(l), 4) + b, R += "up" + S(V.length, 2) + V), o && (L = S(1, 1) + S(m(E), 4) + _, R += "uc" + S(L.length, 2) + L);
          var X = "";
          return X += `
\0`, X += S(z, 2), X += s.magic, X += S(w, 2), X += S(C, 2), X += S(Q.crc32, 4), X += S(Q.compressedSize, 4), X += S(Q.uncompressedSize, 4), X += S(l.length, 2), X += S(R.length, 2), { fileRecord: p.LOCAL_FILE_HEADER + X + l + R, dirRecord: p.CENTRAL_FILE_HEADER + S(Y, 2) + X + S(E.length, 2) + "\0\0\0\0" + S(O, 4) + S(h, 4) + l + R + E };
        }
        var e = P("../utils"), c = P("../stream/GenericWorker"), r = P("../utf8"), m = P("../crc32"), p = P("../signature");
        function a(i, y, d, h) {
          c.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = y, this.zipPlatform = d, this.encodeFileName = h, this.streamFiles = i, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
        }
        e.inherits(a, c), a.prototype.push = function(i) {
          var y = i.meta.percent || 0, d = this.entriesCount, h = this._sources.length;
          this.accumulate ? this.contentBuffer.push(i) : (this.bytesWritten += i.data.length, c.prototype.push.call(this, { data: i.data, meta: { currentFile: this.currentFile, percent: d ? (y + 100 * (d - h - 1)) / d : 100 } }));
        }, a.prototype.openedSource = function(i) {
          this.currentSourceOffset = this.bytesWritten, this.currentFile = i.file.name;
          var y = this.streamFiles && !i.file.dir;
          if (y) {
            var d = v(i, y, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
            this.push({ data: d.fileRecord, meta: { percent: 0 } });
          } else
            this.accumulate = !0;
        }, a.prototype.closedSource = function(i) {
          this.accumulate = !1;
          var y = this.streamFiles && !i.file.dir, d = v(i, y, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          if (this.dirRecords.push(d.dirRecord), y)
            this.push({ data: function(h) {
              return p.DATA_DESCRIPTOR + S(h.crc32, 4) + S(h.compressedSize, 4) + S(h.uncompressedSize, 4);
            }(i), meta: { percent: 100 } });
          else
            for (this.push({ data: d.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
              this.push(this.contentBuffer.shift());
          this.currentFile = null;
        }, a.prototype.flush = function() {
          for (var i = this.bytesWritten, y = 0; y < this.dirRecords.length; y++)
            this.push({ data: this.dirRecords[y], meta: { percent: 100 } });
          var d = this.bytesWritten - i, h = function(f, g, w, C, n) {
            var s = e.transformTo("string", n(C));
            return p.CENTRAL_DIRECTORY_END + "\0\0\0\0" + S(f, 2) + S(f, 2) + S(g, 4) + S(w, 4) + S(s.length, 2) + s;
          }(this.dirRecords.length, d, i, this.zipComment, this.encodeFileName);
          this.push({ data: h, meta: { percent: 100 } });
        }, a.prototype.prepareNextSource = function() {
          this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
        }, a.prototype.registerPrevious = function(i) {
          this._sources.push(i);
          var y = this;
          return i.on("data", function(d) {
            y.processChunk(d);
          }), i.on("end", function() {
            y.closedSource(y.previous.streamInfo), y._sources.length ? y.prepareNextSource() : y.end();
          }), i.on("error", function(d) {
            y.error(d);
          }), this;
        }, a.prototype.resume = function() {
          return !!c.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
        }, a.prototype.error = function(i) {
          var y = this._sources;
          if (!c.prototype.error.call(this, i))
            return !1;
          for (var d = 0; d < y.length; d++)
            try {
              y[d].error(i);
            } catch (h) {
            }
          return !0;
        }, a.prototype.lock = function() {
          c.prototype.lock.call(this);
          for (var i = this._sources, y = 0; y < i.length; y++)
            i[y].lock();
        }, I.exports = a;
      }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(P, I, D) {
        var S = P("../compressions"), v = P("./ZipFileWorker");
        D.generateWorker = function(e, c, r) {
          var m = new v(c.streamFiles, r, c.platform, c.encodeFileName), p = 0;
          try {
            e.forEach(function(a, i) {
              p++;
              var y = function(g, w) {
                var C = g || w, n = S[C];
                if (!n)
                  throw new Error(C + " is not a valid compression method !");
                return n;
              }(i.options.compression, c.compression), d = i.options.compressionOptions || c.compressionOptions || {}, h = i.dir, f = i.date;
              i._compressWorker(y, d).withStreamInfo("file", { name: a, dir: h, date: f, comment: i.comment || "", unixPermissions: i.unixPermissions, dosPermissions: i.dosPermissions }).pipe(m);
            }), m.entriesCount = p;
          } catch (a) {
            m.error(a);
          }
          return m;
        };
      }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(P, I, D) {
        function S() {
          if (!(this instanceof S))
            return new S();
          if (arguments.length)
            throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
          this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
            var v = new S();
            for (var e in this)
              typeof this[e] != "function" && (v[e] = this[e]);
            return v;
          };
        }
        (S.prototype = P("./object")).loadAsync = P("./load"), S.support = P("./support"), S.defaults = P("./defaults"), S.version = "3.10.1", S.loadAsync = function(v, e) {
          return new S().loadAsync(v, e);
        }, S.external = P("./external"), I.exports = S;
      }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(P, I, D) {
        var S = P("./utils"), v = P("./external"), e = P("./utf8"), c = P("./zipEntries"), r = P("./stream/Crc32Probe"), m = P("./nodejsUtils");
        function p(a) {
          return new v.Promise(function(i, y) {
            var d = a.decompressed.getContentWorker().pipe(new r());
            d.on("error", function(h) {
              y(h);
            }).on("end", function() {
              d.streamInfo.crc32 !== a.decompressed.crc32 ? y(new Error("Corrupted zip : CRC32 mismatch")) : i();
            }).resume();
          });
        }
        I.exports = function(a, i) {
          var y = this;
          return i = S.extend(i || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: e.utf8decode }), m.isNode && m.isStream(a) ? v.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : S.prepareContent("the loaded zip file", a, !0, i.optimizedBinaryString, i.base64).then(function(d) {
            var h = new c(i);
            return h.load(d), h;
          }).then(function(d) {
            var h = [v.Promise.resolve(d)], f = d.files;
            if (i.checkCRC32)
              for (var g = 0; g < f.length; g++)
                h.push(p(f[g]));
            return v.Promise.all(h);
          }).then(function(d) {
            for (var h = d.shift(), f = h.files, g = 0; g < f.length; g++) {
              var w = f[g], C = w.fileNameStr, n = S.resolve(w.fileNameStr);
              y.file(n, w.decompressed, { binary: !0, optimizedBinaryString: !0, date: w.date, dir: w.dir, comment: w.fileCommentStr.length ? w.fileCommentStr : null, unixPermissions: w.unixPermissions, dosPermissions: w.dosPermissions, createFolders: i.createFolders }), w.dir || (y.file(n).unsafeOriginalName = C);
            }
            return h.zipComment.length && (y.comment = h.zipComment), y;
          });
        };
      }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(P, I, D) {
        var S = P("../utils"), v = P("../stream/GenericWorker");
        function e(c, r) {
          v.call(this, "Nodejs stream input adapter for " + c), this._upstreamEnded = !1, this._bindStream(r);
        }
        S.inherits(e, v), e.prototype._bindStream = function(c) {
          var r = this;
          (this._stream = c).pause(), c.on("data", function(m) {
            r.push({ data: m, meta: { percent: 0 } });
          }).on("error", function(m) {
            r.isPaused ? this.generatedError = m : r.error(m);
          }).on("end", function() {
            r.isPaused ? r._upstreamEnded = !0 : r.end();
          });
        }, e.prototype.pause = function() {
          return !!v.prototype.pause.call(this) && (this._stream.pause(), !0);
        }, e.prototype.resume = function() {
          return !!v.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
        }, I.exports = e;
      }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(P, I, D) {
        var S = P("readable-stream").Readable;
        function v(e, c, r) {
          S.call(this, c), this._helper = e;
          var m = this;
          e.on("data", function(p, a) {
            m.push(p) || m._helper.pause(), r && r(a);
          }).on("error", function(p) {
            m.emit("error", p);
          }).on("end", function() {
            m.push(null);
          });
        }
        P("../utils").inherits(v, S), v.prototype._read = function() {
          this._helper.resume();
        }, I.exports = v;
      }, { "../utils": 32, "readable-stream": 16 }], 14: [function(P, I, D) {
        I.exports = { isNode: typeof Buffer != "undefined", newBufferFrom: function(S, v) {
          if (Buffer.from && Buffer.from !== Uint8Array.from)
            return Buffer.from(S, v);
          if (typeof S == "number")
            throw new Error('The "data" argument must not be a number');
          return new Buffer(S, v);
        }, allocBuffer: function(S) {
          if (Buffer.alloc)
            return Buffer.alloc(S);
          var v = new Buffer(S);
          return v.fill(0), v;
        }, isBuffer: function(S) {
          return Buffer.isBuffer(S);
        }, isStream: function(S) {
          return S && typeof S.on == "function" && typeof S.pause == "function" && typeof S.resume == "function";
        } };
      }, {}], 15: [function(P, I, D) {
        function S(n, s, t) {
          var l, b = e.getTypeOf(s), k = e.extend(t || {}, m);
          k.date = k.date || /* @__PURE__ */ new Date(), k.compression !== null && (k.compression = k.compression.toUpperCase()), typeof k.unixPermissions == "string" && (k.unixPermissions = parseInt(k.unixPermissions, 8)), k.unixPermissions && 16384 & k.unixPermissions && (k.dir = !0), k.dosPermissions && 16 & k.dosPermissions && (k.dir = !0), k.dir && (n = f(n)), k.createFolders && (l = h(n)) && g.call(this, l, !0);
          var E = b === "string" && k.binary === !1 && k.base64 === !1;
          t && t.binary !== void 0 || (k.binary = !E), (s instanceof p && s.uncompressedSize === 0 || k.dir || !s || s.length === 0) && (k.base64 = !1, k.binary = !0, s = "", k.compression = "STORE", b = "string");
          var _ = null;
          _ = s instanceof p || s instanceof c ? s : y.isNode && y.isStream(s) ? new d(n, s) : e.prepareContent(n, s, k.binary, k.optimizedBinaryString, k.base64);
          var T = new a(n, _, k);
          this.files[n] = T;
        }
        var v = P("./utf8"), e = P("./utils"), c = P("./stream/GenericWorker"), r = P("./stream/StreamHelper"), m = P("./defaults"), p = P("./compressedObject"), a = P("./zipObject"), i = P("./generate"), y = P("./nodejsUtils"), d = P("./nodejs/NodejsStreamInputAdapter"), h = function(n) {
          n.slice(-1) === "/" && (n = n.substring(0, n.length - 1));
          var s = n.lastIndexOf("/");
          return 0 < s ? n.substring(0, s) : "";
        }, f = function(n) {
          return n.slice(-1) !== "/" && (n += "/"), n;
        }, g = function(n, s) {
          return s = s !== void 0 ? s : m.createFolders, n = f(n), this.files[n] || S.call(this, n, null, { dir: !0, createFolders: s }), this.files[n];
        };
        function w(n) {
          return Object.prototype.toString.call(n) === "[object RegExp]";
        }
        var C = { load: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, forEach: function(n) {
          var s, t, l;
          for (s in this.files)
            l = this.files[s], (t = s.slice(this.root.length, s.length)) && s.slice(0, this.root.length) === this.root && n(t, l);
        }, filter: function(n) {
          var s = [];
          return this.forEach(function(t, l) {
            n(t, l) && s.push(l);
          }), s;
        }, file: function(n, s, t) {
          if (arguments.length !== 1)
            return n = this.root + n, S.call(this, n, s, t), this;
          if (w(n)) {
            var l = n;
            return this.filter(function(k, E) {
              return !E.dir && l.test(k);
            });
          }
          var b = this.files[this.root + n];
          return b && !b.dir ? b : null;
        }, folder: function(n) {
          if (!n)
            return this;
          if (w(n))
            return this.filter(function(b, k) {
              return k.dir && n.test(b);
            });
          var s = this.root + n, t = g.call(this, s), l = this.clone();
          return l.root = t.name, l;
        }, remove: function(n) {
          n = this.root + n;
          var s = this.files[n];
          if (s || (n.slice(-1) !== "/" && (n += "/"), s = this.files[n]), s && !s.dir)
            delete this.files[n];
          else
            for (var t = this.filter(function(b, k) {
              return k.name.slice(0, n.length) === n;
            }), l = 0; l < t.length; l++)
              delete this.files[t[l].name];
          return this;
        }, generate: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, generateInternalStream: function(n) {
          var s, t = {};
          try {
            if ((t = e.extend(n || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: v.utf8encode })).type = t.type.toLowerCase(), t.compression = t.compression.toUpperCase(), t.type === "binarystring" && (t.type = "string"), !t.type)
              throw new Error("No output type specified.");
            e.checkSupport(t.type), t.platform !== "darwin" && t.platform !== "freebsd" && t.platform !== "linux" && t.platform !== "sunos" || (t.platform = "UNIX"), t.platform === "win32" && (t.platform = "DOS");
            var l = t.comment || this.comment || "";
            s = i.generateWorker(this, t, l);
          } catch (b) {
            (s = new c("error")).error(b);
          }
          return new r(s, t.type || "string", t.mimeType);
        }, generateAsync: function(n, s) {
          return this.generateInternalStream(n).accumulate(s);
        }, generateNodeStream: function(n, s) {
          return (n = n || {}).type || (n.type = "nodebuffer"), this.generateInternalStream(n).toNodejsStream(s);
        } };
        I.exports = C;
      }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(P, I, D) {
        I.exports = P("stream");
      }, { stream: void 0 }], 17: [function(P, I, D) {
        var S = P("./DataReader");
        function v(e) {
          S.call(this, e);
          for (var c = 0; c < this.data.length; c++)
            e[c] = 255 & e[c];
        }
        P("../utils").inherits(v, S), v.prototype.byteAt = function(e) {
          return this.data[this.zero + e];
        }, v.prototype.lastIndexOfSignature = function(e) {
          for (var c = e.charCodeAt(0), r = e.charCodeAt(1), m = e.charCodeAt(2), p = e.charCodeAt(3), a = this.length - 4; 0 <= a; --a)
            if (this.data[a] === c && this.data[a + 1] === r && this.data[a + 2] === m && this.data[a + 3] === p)
              return a - this.zero;
          return -1;
        }, v.prototype.readAndCheckSignature = function(e) {
          var c = e.charCodeAt(0), r = e.charCodeAt(1), m = e.charCodeAt(2), p = e.charCodeAt(3), a = this.readData(4);
          return c === a[0] && r === a[1] && m === a[2] && p === a[3];
        }, v.prototype.readData = function(e) {
          if (this.checkOffset(e), e === 0)
            return [];
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, c;
        }, I.exports = v;
      }, { "../utils": 32, "./DataReader": 18 }], 18: [function(P, I, D) {
        var S = P("../utils");
        function v(e) {
          this.data = e, this.length = e.length, this.index = 0, this.zero = 0;
        }
        v.prototype = { checkOffset: function(e) {
          this.checkIndex(this.index + e);
        }, checkIndex: function(e) {
          if (this.length < this.zero + e || e < 0)
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e + "). Corrupted zip ?");
        }, setIndex: function(e) {
          this.checkIndex(e), this.index = e;
        }, skip: function(e) {
          this.setIndex(this.index + e);
        }, byteAt: function() {
        }, readInt: function(e) {
          var c, r = 0;
          for (this.checkOffset(e), c = this.index + e - 1; c >= this.index; c--)
            r = (r << 8) + this.byteAt(c);
          return this.index += e, r;
        }, readString: function(e) {
          return S.transformTo("string", this.readData(e));
        }, readData: function() {
        }, lastIndexOfSignature: function() {
        }, readAndCheckSignature: function() {
        }, readDate: function() {
          var e = this.readInt(4);
          return new Date(Date.UTC(1980 + (e >> 25 & 127), (e >> 21 & 15) - 1, e >> 16 & 31, e >> 11 & 31, e >> 5 & 63, (31 & e) << 1));
        } }, I.exports = v;
      }, { "../utils": 32 }], 19: [function(P, I, D) {
        var S = P("./Uint8ArrayReader");
        function v(e) {
          S.call(this, e);
        }
        P("../utils").inherits(v, S), v.prototype.readData = function(e) {
          this.checkOffset(e);
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, c;
        }, I.exports = v;
      }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(P, I, D) {
        var S = P("./DataReader");
        function v(e) {
          S.call(this, e);
        }
        P("../utils").inherits(v, S), v.prototype.byteAt = function(e) {
          return this.data.charCodeAt(this.zero + e);
        }, v.prototype.lastIndexOfSignature = function(e) {
          return this.data.lastIndexOf(e) - this.zero;
        }, v.prototype.readAndCheckSignature = function(e) {
          return e === this.readData(4);
        }, v.prototype.readData = function(e) {
          this.checkOffset(e);
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, c;
        }, I.exports = v;
      }, { "../utils": 32, "./DataReader": 18 }], 21: [function(P, I, D) {
        var S = P("./ArrayReader");
        function v(e) {
          S.call(this, e);
        }
        P("../utils").inherits(v, S), v.prototype.readData = function(e) {
          if (this.checkOffset(e), e === 0)
            return new Uint8Array(0);
          var c = this.data.subarray(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, c;
        }, I.exports = v;
      }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(P, I, D) {
        var S = P("../utils"), v = P("../support"), e = P("./ArrayReader"), c = P("./StringReader"), r = P("./NodeBufferReader"), m = P("./Uint8ArrayReader");
        I.exports = function(p) {
          var a = S.getTypeOf(p);
          return S.checkSupport(a), a !== "string" || v.uint8array ? a === "nodebuffer" ? new r(p) : v.uint8array ? new m(S.transformTo("uint8array", p)) : new e(S.transformTo("array", p)) : new c(p);
        };
      }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(P, I, D) {
        D.LOCAL_FILE_HEADER = "PK", D.CENTRAL_FILE_HEADER = "PK", D.CENTRAL_DIRECTORY_END = "PK", D.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", D.ZIP64_CENTRAL_DIRECTORY_END = "PK", D.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 24: [function(P, I, D) {
        var S = P("./GenericWorker"), v = P("../utils");
        function e(c) {
          S.call(this, "ConvertWorker to " + c), this.destType = c;
        }
        v.inherits(e, S), e.prototype.processChunk = function(c) {
          this.push({ data: v.transformTo(this.destType, c.data), meta: c.meta });
        }, I.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(P, I, D) {
        var S = P("./GenericWorker"), v = P("../crc32");
        function e() {
          S.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
        }
        P("../utils").inherits(e, S), e.prototype.processChunk = function(c) {
          this.streamInfo.crc32 = v(c.data, this.streamInfo.crc32 || 0), this.push(c);
        }, I.exports = e;
      }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(P, I, D) {
        var S = P("../utils"), v = P("./GenericWorker");
        function e(c) {
          v.call(this, "DataLengthProbe for " + c), this.propName = c, this.withStreamInfo(c, 0);
        }
        S.inherits(e, v), e.prototype.processChunk = function(c) {
          if (c) {
            var r = this.streamInfo[this.propName] || 0;
            this.streamInfo[this.propName] = r + c.data.length;
          }
          v.prototype.processChunk.call(this, c);
        }, I.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(P, I, D) {
        var S = P("../utils"), v = P("./GenericWorker");
        function e(c) {
          v.call(this, "DataWorker");
          var r = this;
          this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, c.then(function(m) {
            r.dataIsReady = !0, r.data = m, r.max = m && m.length || 0, r.type = S.getTypeOf(m), r.isPaused || r._tickAndRepeat();
          }, function(m) {
            r.error(m);
          });
        }
        S.inherits(e, v), e.prototype.cleanUp = function() {
          v.prototype.cleanUp.call(this), this.data = null;
        }, e.prototype.resume = function() {
          return !!v.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, S.delay(this._tickAndRepeat, [], this)), !0);
        }, e.prototype._tickAndRepeat = function() {
          this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (S.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
        }, e.prototype._tick = function() {
          if (this.isPaused || this.isFinished)
            return !1;
          var c = null, r = Math.min(this.max, this.index + 16384);
          if (this.index >= this.max)
            return this.end();
          switch (this.type) {
            case "string":
              c = this.data.substring(this.index, r);
              break;
            case "uint8array":
              c = this.data.subarray(this.index, r);
              break;
            case "array":
            case "nodebuffer":
              c = this.data.slice(this.index, r);
          }
          return this.index = r, this.push({ data: c, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
        }, I.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(P, I, D) {
        function S(v) {
          this.name = v || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
        }
        S.prototype = { push: function(v) {
          this.emit("data", v);
        }, end: function() {
          if (this.isFinished)
            return !1;
          this.flush();
          try {
            this.emit("end"), this.cleanUp(), this.isFinished = !0;
          } catch (v) {
            this.emit("error", v);
          }
          return !0;
        }, error: function(v) {
          return !this.isFinished && (this.isPaused ? this.generatedError = v : (this.isFinished = !0, this.emit("error", v), this.previous && this.previous.error(v), this.cleanUp()), !0);
        }, on: function(v, e) {
          return this._listeners[v].push(e), this;
        }, cleanUp: function() {
          this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
        }, emit: function(v, e) {
          if (this._listeners[v])
            for (var c = 0; c < this._listeners[v].length; c++)
              this._listeners[v][c].call(this, e);
        }, pipe: function(v) {
          return v.registerPrevious(this);
        }, registerPrevious: function(v) {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.streamInfo = v.streamInfo, this.mergeStreamInfo(), this.previous = v;
          var e = this;
          return v.on("data", function(c) {
            e.processChunk(c);
          }), v.on("end", function() {
            e.end();
          }), v.on("error", function(c) {
            e.error(c);
          }), this;
        }, pause: function() {
          return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
        }, resume: function() {
          if (!this.isPaused || this.isFinished)
            return !1;
          var v = this.isPaused = !1;
          return this.generatedError && (this.error(this.generatedError), v = !0), this.previous && this.previous.resume(), !v;
        }, flush: function() {
        }, processChunk: function(v) {
          this.push(v);
        }, withStreamInfo: function(v, e) {
          return this.extraStreamInfo[v] = e, this.mergeStreamInfo(), this;
        }, mergeStreamInfo: function() {
          for (var v in this.extraStreamInfo)
            Object.prototype.hasOwnProperty.call(this.extraStreamInfo, v) && (this.streamInfo[v] = this.extraStreamInfo[v]);
        }, lock: function() {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.isLocked = !0, this.previous && this.previous.lock();
        }, toString: function() {
          var v = "Worker " + this.name;
          return this.previous ? this.previous + " -> " + v : v;
        } }, I.exports = S;
      }, {}], 29: [function(P, I, D) {
        var S = P("../utils"), v = P("./ConvertWorker"), e = P("./GenericWorker"), c = P("../base64"), r = P("../support"), m = P("../external"), p = null;
        if (r.nodestream)
          try {
            p = P("../nodejs/NodejsStreamOutputAdapter");
          } catch (y) {
          }
        function a(y, d) {
          return new m.Promise(function(h, f) {
            var g = [], w = y._internalType, C = y._outputType, n = y._mimeType;
            y.on("data", function(s, t) {
              g.push(s), d && d(t);
            }).on("error", function(s) {
              g = [], f(s);
            }).on("end", function() {
              try {
                var s = function(t, l, b) {
                  switch (t) {
                    case "blob":
                      return S.newBlob(S.transformTo("arraybuffer", l), b);
                    case "base64":
                      return c.encode(l);
                    default:
                      return S.transformTo(t, l);
                  }
                }(C, function(t, l) {
                  var b, k = 0, E = null, _ = 0;
                  for (b = 0; b < l.length; b++)
                    _ += l[b].length;
                  switch (t) {
                    case "string":
                      return l.join("");
                    case "array":
                      return Array.prototype.concat.apply([], l);
                    case "uint8array":
                      for (E = new Uint8Array(_), b = 0; b < l.length; b++)
                        E.set(l[b], k), k += l[b].length;
                      return E;
                    case "nodebuffer":
                      return Buffer.concat(l);
                    default:
                      throw new Error("concat : unsupported type '" + t + "'");
                  }
                }(w, g), n);
                h(s);
              } catch (t) {
                f(t);
              }
              g = [];
            }).resume();
          });
        }
        function i(y, d, h) {
          var f = d;
          switch (d) {
            case "blob":
            case "arraybuffer":
              f = "uint8array";
              break;
            case "base64":
              f = "string";
          }
          try {
            this._internalType = f, this._outputType = d, this._mimeType = h, S.checkSupport(f), this._worker = y.pipe(new v(f)), y.lock();
          } catch (g) {
            this._worker = new e("error"), this._worker.error(g);
          }
        }
        i.prototype = { accumulate: function(y) {
          return a(this, y);
        }, on: function(y, d) {
          var h = this;
          return y === "data" ? this._worker.on(y, function(f) {
            d.call(h, f.data, f.meta);
          }) : this._worker.on(y, function() {
            S.delay(d, arguments, h);
          }), this;
        }, resume: function() {
          return S.delay(this._worker.resume, [], this._worker), this;
        }, pause: function() {
          return this._worker.pause(), this;
        }, toNodejsStream: function(y) {
          if (S.checkSupport("nodestream"), this._outputType !== "nodebuffer")
            throw new Error(this._outputType + " is not supported by this method");
          return new p(this, { objectMode: this._outputType !== "nodebuffer" }, y);
        } }, I.exports = i;
      }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(P, I, D) {
        if (D.base64 = !0, D.array = !0, D.string = !0, D.arraybuffer = typeof ArrayBuffer != "undefined" && typeof Uint8Array != "undefined", D.nodebuffer = typeof Buffer != "undefined", D.uint8array = typeof Uint8Array != "undefined", typeof ArrayBuffer == "undefined")
          D.blob = !1;
        else {
          var S = new ArrayBuffer(0);
          try {
            D.blob = new Blob([S], { type: "application/zip" }).size === 0;
          } catch (e) {
            try {
              var v = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              v.append(S), D.blob = v.getBlob("application/zip").size === 0;
            } catch (c) {
              D.blob = !1;
            }
          }
        }
        try {
          D.nodestream = !!P("readable-stream").Readable;
        } catch (e) {
          D.nodestream = !1;
        }
      }, { "readable-stream": 16 }], 31: [function(P, I, D) {
        for (var S = P("./utils"), v = P("./support"), e = P("./nodejsUtils"), c = P("./stream/GenericWorker"), r = new Array(256), m = 0; m < 256; m++)
          r[m] = 252 <= m ? 6 : 248 <= m ? 5 : 240 <= m ? 4 : 224 <= m ? 3 : 192 <= m ? 2 : 1;
        r[254] = r[254] = 1;
        function p() {
          c.call(this, "utf-8 decode"), this.leftOver = null;
        }
        function a() {
          c.call(this, "utf-8 encode");
        }
        D.utf8encode = function(i) {
          return v.nodebuffer ? e.newBufferFrom(i, "utf-8") : function(y) {
            var d, h, f, g, w, C = y.length, n = 0;
            for (g = 0; g < C; g++)
              (64512 & (h = y.charCodeAt(g))) == 55296 && g + 1 < C && (64512 & (f = y.charCodeAt(g + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (f - 56320), g++), n += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;
            for (d = v.uint8array ? new Uint8Array(n) : new Array(n), g = w = 0; w < n; g++)
              (64512 & (h = y.charCodeAt(g))) == 55296 && g + 1 < C && (64512 & (f = y.charCodeAt(g + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (f - 56320), g++), h < 128 ? d[w++] = h : (h < 2048 ? d[w++] = 192 | h >>> 6 : (h < 65536 ? d[w++] = 224 | h >>> 12 : (d[w++] = 240 | h >>> 18, d[w++] = 128 | h >>> 12 & 63), d[w++] = 128 | h >>> 6 & 63), d[w++] = 128 | 63 & h);
            return d;
          }(i);
        }, D.utf8decode = function(i) {
          return v.nodebuffer ? S.transformTo("nodebuffer", i).toString("utf-8") : function(y) {
            var d, h, f, g, w = y.length, C = new Array(2 * w);
            for (d = h = 0; d < w; )
              if ((f = y[d++]) < 128)
                C[h++] = f;
              else if (4 < (g = r[f]))
                C[h++] = 65533, d += g - 1;
              else {
                for (f &= g === 2 ? 31 : g === 3 ? 15 : 7; 1 < g && d < w; )
                  f = f << 6 | 63 & y[d++], g--;
                1 < g ? C[h++] = 65533 : f < 65536 ? C[h++] = f : (f -= 65536, C[h++] = 55296 | f >> 10 & 1023, C[h++] = 56320 | 1023 & f);
              }
            return C.length !== h && (C.subarray ? C = C.subarray(0, h) : C.length = h), S.applyFromCharCode(C);
          }(i = S.transformTo(v.uint8array ? "uint8array" : "array", i));
        }, S.inherits(p, c), p.prototype.processChunk = function(i) {
          var y = S.transformTo(v.uint8array ? "uint8array" : "array", i.data);
          if (this.leftOver && this.leftOver.length) {
            if (v.uint8array) {
              var d = y;
              (y = new Uint8Array(d.length + this.leftOver.length)).set(this.leftOver, 0), y.set(d, this.leftOver.length);
            } else
              y = this.leftOver.concat(y);
            this.leftOver = null;
          }
          var h = function(g, w) {
            var C;
            for ((w = w || g.length) > g.length && (w = g.length), C = w - 1; 0 <= C && (192 & g[C]) == 128; )
              C--;
            return C < 0 || C === 0 ? w : C + r[g[C]] > w ? C : w;
          }(y), f = y;
          h !== y.length && (v.uint8array ? (f = y.subarray(0, h), this.leftOver = y.subarray(h, y.length)) : (f = y.slice(0, h), this.leftOver = y.slice(h, y.length))), this.push({ data: D.utf8decode(f), meta: i.meta });
        }, p.prototype.flush = function() {
          this.leftOver && this.leftOver.length && (this.push({ data: D.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
        }, D.Utf8DecodeWorker = p, S.inherits(a, c), a.prototype.processChunk = function(i) {
          this.push({ data: D.utf8encode(i.data), meta: i.meta });
        }, D.Utf8EncodeWorker = a;
      }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(P, I, D) {
        var S = P("./support"), v = P("./base64"), e = P("./nodejsUtils"), c = P("./external");
        function r(d) {
          return d;
        }
        function m(d, h) {
          for (var f = 0; f < d.length; ++f)
            h[f] = 255 & d.charCodeAt(f);
          return h;
        }
        P("setimmediate"), D.newBlob = function(d, h) {
          D.checkSupport("blob");
          try {
            return new Blob([d], { type: h });
          } catch (g) {
            try {
              var f = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              return f.append(d), f.getBlob(h);
            } catch (w) {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        var p = { stringifyByChunk: function(d, h, f) {
          var g = [], w = 0, C = d.length;
          if (C <= f)
            return String.fromCharCode.apply(null, d);
          for (; w < C; )
            h === "array" || h === "nodebuffer" ? g.push(String.fromCharCode.apply(null, d.slice(w, Math.min(w + f, C)))) : g.push(String.fromCharCode.apply(null, d.subarray(w, Math.min(w + f, C)))), w += f;
          return g.join("");
        }, stringifyByChar: function(d) {
          for (var h = "", f = 0; f < d.length; f++)
            h += String.fromCharCode(d[f]);
          return h;
        }, applyCanBeUsed: { uint8array: function() {
          try {
            return S.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
          } catch (d) {
            return !1;
          }
        }(), nodebuffer: function() {
          try {
            return S.nodebuffer && String.fromCharCode.apply(null, e.allocBuffer(1)).length === 1;
          } catch (d) {
            return !1;
          }
        }() } };
        function a(d) {
          var h = 65536, f = D.getTypeOf(d), g = !0;
          if (f === "uint8array" ? g = p.applyCanBeUsed.uint8array : f === "nodebuffer" && (g = p.applyCanBeUsed.nodebuffer), g)
            for (; 1 < h; )
              try {
                return p.stringifyByChunk(d, f, h);
              } catch (w) {
                h = Math.floor(h / 2);
              }
          return p.stringifyByChar(d);
        }
        function i(d, h) {
          for (var f = 0; f < d.length; f++)
            h[f] = d[f];
          return h;
        }
        D.applyFromCharCode = a;
        var y = {};
        y.string = { string: r, array: function(d) {
          return m(d, new Array(d.length));
        }, arraybuffer: function(d) {
          return y.string.uint8array(d).buffer;
        }, uint8array: function(d) {
          return m(d, new Uint8Array(d.length));
        }, nodebuffer: function(d) {
          return m(d, e.allocBuffer(d.length));
        } }, y.array = { string: a, array: r, arraybuffer: function(d) {
          return new Uint8Array(d).buffer;
        }, uint8array: function(d) {
          return new Uint8Array(d);
        }, nodebuffer: function(d) {
          return e.newBufferFrom(d);
        } }, y.arraybuffer = { string: function(d) {
          return a(new Uint8Array(d));
        }, array: function(d) {
          return i(new Uint8Array(d), new Array(d.byteLength));
        }, arraybuffer: r, uint8array: function(d) {
          return new Uint8Array(d);
        }, nodebuffer: function(d) {
          return e.newBufferFrom(new Uint8Array(d));
        } }, y.uint8array = { string: a, array: function(d) {
          return i(d, new Array(d.length));
        }, arraybuffer: function(d) {
          return d.buffer;
        }, uint8array: r, nodebuffer: function(d) {
          return e.newBufferFrom(d);
        } }, y.nodebuffer = { string: a, array: function(d) {
          return i(d, new Array(d.length));
        }, arraybuffer: function(d) {
          return y.nodebuffer.uint8array(d).buffer;
        }, uint8array: function(d) {
          return i(d, new Uint8Array(d.length));
        }, nodebuffer: r }, D.transformTo = function(d, h) {
          if (h = h || "", !d)
            return h;
          D.checkSupport(d);
          var f = D.getTypeOf(h);
          return y[f][d](h);
        }, D.resolve = function(d) {
          for (var h = d.split("/"), f = [], g = 0; g < h.length; g++) {
            var w = h[g];
            w === "." || w === "" && g !== 0 && g !== h.length - 1 || (w === ".." ? f.pop() : f.push(w));
          }
          return f.join("/");
        }, D.getTypeOf = function(d) {
          return typeof d == "string" ? "string" : Object.prototype.toString.call(d) === "[object Array]" ? "array" : S.nodebuffer && e.isBuffer(d) ? "nodebuffer" : S.uint8array && d instanceof Uint8Array ? "uint8array" : S.arraybuffer && d instanceof ArrayBuffer ? "arraybuffer" : void 0;
        }, D.checkSupport = function(d) {
          if (!S[d.toLowerCase()])
            throw new Error(d + " is not supported by this platform");
        }, D.MAX_VALUE_16BITS = 65535, D.MAX_VALUE_32BITS = -1, D.pretty = function(d) {
          var h, f, g = "";
          for (f = 0; f < (d || "").length; f++)
            g += "\\x" + ((h = d.charCodeAt(f)) < 16 ? "0" : "") + h.toString(16).toUpperCase();
          return g;
        }, D.delay = function(d, h, f) {
          setImmediate(function() {
            d.apply(f || null, h || []);
          });
        }, D.inherits = function(d, h) {
          function f() {
          }
          f.prototype = h.prototype, d.prototype = new f();
        }, D.extend = function() {
          var d, h, f = {};
          for (d = 0; d < arguments.length; d++)
            for (h in arguments[d])
              Object.prototype.hasOwnProperty.call(arguments[d], h) && f[h] === void 0 && (f[h] = arguments[d][h]);
          return f;
        }, D.prepareContent = function(d, h, f, g, w) {
          return c.Promise.resolve(h).then(function(C) {
            return S.blob && (C instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(C)) !== -1) && typeof FileReader != "undefined" ? new c.Promise(function(n, s) {
              var t = new FileReader();
              t.onload = function(l) {
                n(l.target.result);
              }, t.onerror = function(l) {
                s(l.target.error);
              }, t.readAsArrayBuffer(C);
            }) : C;
          }).then(function(C) {
            var n = D.getTypeOf(C);
            return n ? (n === "arraybuffer" ? C = D.transformTo("uint8array", C) : n === "string" && (w ? C = v.decode(C) : f && g !== !0 && (C = function(s) {
              return m(s, S.uint8array ? new Uint8Array(s.length) : new Array(s.length));
            }(C))), C) : c.Promise.reject(new Error("Can't read the data of '" + d + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
          });
        };
      }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(P, I, D) {
        var S = P("./reader/readerFor"), v = P("./utils"), e = P("./signature"), c = P("./zipEntry"), r = P("./support");
        function m(p) {
          this.files = [], this.loadOptions = p;
        }
        m.prototype = { checkSignature: function(p) {
          if (!this.reader.readAndCheckSignature(p)) {
            this.reader.index -= 4;
            var a = this.reader.readString(4);
            throw new Error("Corrupted zip or bug: unexpected signature (" + v.pretty(a) + ", expected " + v.pretty(p) + ")");
          }
        }, isSignature: function(p, a) {
          var i = this.reader.index;
          this.reader.setIndex(p);
          var y = this.reader.readString(4) === a;
          return this.reader.setIndex(i), y;
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
          var p = this.reader.readData(this.zipCommentLength), a = r.uint8array ? "uint8array" : "array", i = v.transformTo(a, p);
          this.zipComment = this.loadOptions.decodeFileName(i);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
          for (var p, a, i, y = this.zip64EndOfCentralSize - 44; 0 < y; )
            p = this.reader.readInt(2), a = this.reader.readInt(4), i = this.reader.readData(a), this.zip64ExtensibleData[p] = { id: p, length: a, value: i };
        }, readBlockZip64EndOfCentralLocator: function() {
          if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
            throw new Error("Multi-volumes zip are not supported");
        }, readLocalFiles: function() {
          var p, a;
          for (p = 0; p < this.files.length; p++)
            a = this.files[p], this.reader.setIndex(a.localHeaderOffset), this.checkSignature(e.LOCAL_FILE_HEADER), a.readLocalPart(this.reader), a.handleUTF8(), a.processAttributes();
        }, readCentralDir: function() {
          var p;
          for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(e.CENTRAL_FILE_HEADER); )
            (p = new c({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(p);
          if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
            throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
        }, readEndOfCentral: function() {
          var p = this.reader.lastIndexOfSignature(e.CENTRAL_DIRECTORY_END);
          if (p < 0)
            throw this.isSignature(0, e.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
          this.reader.setIndex(p);
          var a = p;
          if (this.checkSignature(e.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === v.MAX_VALUE_16BITS || this.diskWithCentralDirStart === v.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === v.MAX_VALUE_16BITS || this.centralDirRecords === v.MAX_VALUE_16BITS || this.centralDirSize === v.MAX_VALUE_32BITS || this.centralDirOffset === v.MAX_VALUE_32BITS) {
            if (this.zip64 = !0, (p = this.reader.lastIndexOfSignature(e.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
            if (this.reader.setIndex(p), this.checkSignature(e.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, e.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(e.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(e.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
          }
          var i = this.centralDirOffset + this.centralDirSize;
          this.zip64 && (i += 20, i += 12 + this.zip64EndOfCentralSize);
          var y = a - i;
          if (0 < y)
            this.isSignature(a, e.CENTRAL_FILE_HEADER) || (this.reader.zero = y);
          else if (y < 0)
            throw new Error("Corrupted zip: missing " + Math.abs(y) + " bytes.");
        }, prepareReader: function(p) {
          this.reader = S(p);
        }, load: function(p) {
          this.prepareReader(p), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
        } }, I.exports = m;
      }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(P, I, D) {
        var S = P("./reader/readerFor"), v = P("./utils"), e = P("./compressedObject"), c = P("./crc32"), r = P("./utf8"), m = P("./compressions"), p = P("./support");
        function a(i, y) {
          this.options = i, this.loadOptions = y;
        }
        a.prototype = { isEncrypted: function() {
          return (1 & this.bitFlag) == 1;
        }, useUTF8: function() {
          return (2048 & this.bitFlag) == 2048;
        }, readLocalPart: function(i) {
          var y, d;
          if (i.skip(22), this.fileNameLength = i.readInt(2), d = i.readInt(2), this.fileName = i.readData(this.fileNameLength), i.skip(d), this.compressedSize === -1 || this.uncompressedSize === -1)
            throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
          if ((y = function(h) {
            for (var f in m)
              if (Object.prototype.hasOwnProperty.call(m, f) && m[f].magic === h)
                return m[f];
            return null;
          }(this.compressionMethod)) === null)
            throw new Error("Corrupted zip : compression " + v.pretty(this.compressionMethod) + " unknown (inner file : " + v.transformTo("string", this.fileName) + ")");
          this.decompressed = new e(this.compressedSize, this.uncompressedSize, this.crc32, y, i.readData(this.compressedSize));
        }, readCentralPart: function(i) {
          this.versionMadeBy = i.readInt(2), i.skip(2), this.bitFlag = i.readInt(2), this.compressionMethod = i.readString(2), this.date = i.readDate(), this.crc32 = i.readInt(4), this.compressedSize = i.readInt(4), this.uncompressedSize = i.readInt(4);
          var y = i.readInt(2);
          if (this.extraFieldsLength = i.readInt(2), this.fileCommentLength = i.readInt(2), this.diskNumberStart = i.readInt(2), this.internalFileAttributes = i.readInt(2), this.externalFileAttributes = i.readInt(4), this.localHeaderOffset = i.readInt(4), this.isEncrypted())
            throw new Error("Encrypted zip are not supported");
          i.skip(y), this.readExtraFields(i), this.parseZIP64ExtraField(i), this.fileComment = i.readData(this.fileCommentLength);
        }, processAttributes: function() {
          this.unixPermissions = null, this.dosPermissions = null;
          var i = this.versionMadeBy >> 8;
          this.dir = !!(16 & this.externalFileAttributes), i == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), i == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
        }, parseZIP64ExtraField: function() {
          if (this.extraFields[1]) {
            var i = S(this.extraFields[1].value);
            this.uncompressedSize === v.MAX_VALUE_32BITS && (this.uncompressedSize = i.readInt(8)), this.compressedSize === v.MAX_VALUE_32BITS && (this.compressedSize = i.readInt(8)), this.localHeaderOffset === v.MAX_VALUE_32BITS && (this.localHeaderOffset = i.readInt(8)), this.diskNumberStart === v.MAX_VALUE_32BITS && (this.diskNumberStart = i.readInt(4));
          }
        }, readExtraFields: function(i) {
          var y, d, h, f = i.index + this.extraFieldsLength;
          for (this.extraFields || (this.extraFields = {}); i.index + 4 < f; )
            y = i.readInt(2), d = i.readInt(2), h = i.readData(d), this.extraFields[y] = { id: y, length: d, value: h };
          i.setIndex(f);
        }, handleUTF8: function() {
          var i = p.uint8array ? "uint8array" : "array";
          if (this.useUTF8())
            this.fileNameStr = r.utf8decode(this.fileName), this.fileCommentStr = r.utf8decode(this.fileComment);
          else {
            var y = this.findExtraFieldUnicodePath();
            if (y !== null)
              this.fileNameStr = y;
            else {
              var d = v.transformTo(i, this.fileName);
              this.fileNameStr = this.loadOptions.decodeFileName(d);
            }
            var h = this.findExtraFieldUnicodeComment();
            if (h !== null)
              this.fileCommentStr = h;
            else {
              var f = v.transformTo(i, this.fileComment);
              this.fileCommentStr = this.loadOptions.decodeFileName(f);
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var i = this.extraFields[28789];
          if (i) {
            var y = S(i.value);
            return y.readInt(1) !== 1 || c(this.fileName) !== y.readInt(4) ? null : r.utf8decode(y.readData(i.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var i = this.extraFields[25461];
          if (i) {
            var y = S(i.value);
            return y.readInt(1) !== 1 || c(this.fileComment) !== y.readInt(4) ? null : r.utf8decode(y.readData(i.length - 5));
          }
          return null;
        } }, I.exports = a;
      }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(P, I, D) {
        function S(y, d, h) {
          this.name = y, this.dir = h.dir, this.date = h.date, this.comment = h.comment, this.unixPermissions = h.unixPermissions, this.dosPermissions = h.dosPermissions, this._data = d, this._dataBinary = h.binary, this.options = { compression: h.compression, compressionOptions: h.compressionOptions };
        }
        var v = P("./stream/StreamHelper"), e = P("./stream/DataWorker"), c = P("./utf8"), r = P("./compressedObject"), m = P("./stream/GenericWorker");
        S.prototype = { internalStream: function(y) {
          var d = null, h = "string";
          try {
            if (!y)
              throw new Error("No output type specified.");
            var f = (h = y.toLowerCase()) === "string" || h === "text";
            h !== "binarystring" && h !== "text" || (h = "string"), d = this._decompressWorker();
            var g = !this._dataBinary;
            g && !f && (d = d.pipe(new c.Utf8EncodeWorker())), !g && f && (d = d.pipe(new c.Utf8DecodeWorker()));
          } catch (w) {
            (d = new m("error")).error(w);
          }
          return new v(d, h, "");
        }, async: function(y, d) {
          return this.internalStream(y).accumulate(d);
        }, nodeStream: function(y, d) {
          return this.internalStream(y || "nodebuffer").toNodejsStream(d);
        }, _compressWorker: function(y, d) {
          if (this._data instanceof r && this._data.compression.magic === y.magic)
            return this._data.getCompressedWorker();
          var h = this._decompressWorker();
          return this._dataBinary || (h = h.pipe(new c.Utf8EncodeWorker())), r.createWorkerFrom(h, y, d);
        }, _decompressWorker: function() {
          return this._data instanceof r ? this._data.getContentWorker() : this._data instanceof m ? this._data : new e(this._data);
        } };
        for (var p = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], a = function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, i = 0; i < p.length; i++)
          S.prototype[p[i]] = a;
        I.exports = S;
      }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(P, I, D) {
        (function(S) {
          var v, e, c = S.MutationObserver || S.WebKitMutationObserver;
          if (c) {
            var r = 0, m = new c(y), p = S.document.createTextNode("");
            m.observe(p, { characterData: !0 }), v = function() {
              p.data = r = ++r % 2;
            };
          } else if (S.setImmediate || S.MessageChannel === void 0)
            v = "document" in S && "onreadystatechange" in S.document.createElement("script") ? function() {
              var d = S.document.createElement("script");
              d.onreadystatechange = function() {
                y(), d.onreadystatechange = null, d.parentNode.removeChild(d), d = null;
              }, S.document.documentElement.appendChild(d);
            } : function() {
              setTimeout(y, 0);
            };
          else {
            var a = new S.MessageChannel();
            a.port1.onmessage = y, v = function() {
              a.port2.postMessage(0);
            };
          }
          var i = [];
          function y() {
            var d, h;
            e = !0;
            for (var f = i.length; f; ) {
              for (h = i, i = [], d = -1; ++d < f; )
                h[d]();
              f = i.length;
            }
            e = !1;
          }
          I.exports = function(d) {
            i.push(d) !== 1 || e || v();
          };
        }).call(this, typeof we != "undefined" ? we : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
      }, {}], 37: [function(P, I, D) {
        var S = P("immediate");
        function v() {
        }
        var e = {}, c = ["REJECTED"], r = ["FULFILLED"], m = ["PENDING"];
        function p(f) {
          if (typeof f != "function")
            throw new TypeError("resolver must be a function");
          this.state = m, this.queue = [], this.outcome = void 0, f !== v && d(this, f);
        }
        function a(f, g, w) {
          this.promise = f, typeof g == "function" && (this.onFulfilled = g, this.callFulfilled = this.otherCallFulfilled), typeof w == "function" && (this.onRejected = w, this.callRejected = this.otherCallRejected);
        }
        function i(f, g, w) {
          S(function() {
            var C;
            try {
              C = g(w);
            } catch (n) {
              return e.reject(f, n);
            }
            C === f ? e.reject(f, new TypeError("Cannot resolve promise with itself")) : e.resolve(f, C);
          });
        }
        function y(f) {
          var g = f && f.then;
          if (f && (typeof f == "object" || typeof f == "function") && typeof g == "function")
            return function() {
              g.apply(f, arguments);
            };
        }
        function d(f, g) {
          var w = !1;
          function C(t) {
            w || (w = !0, e.reject(f, t));
          }
          function n(t) {
            w || (w = !0, e.resolve(f, t));
          }
          var s = h(function() {
            g(n, C);
          });
          s.status === "error" && C(s.value);
        }
        function h(f, g) {
          var w = {};
          try {
            w.value = f(g), w.status = "success";
          } catch (C) {
            w.status = "error", w.value = C;
          }
          return w;
        }
        (I.exports = p).prototype.finally = function(f) {
          if (typeof f != "function")
            return this;
          var g = this.constructor;
          return this.then(function(w) {
            return g.resolve(f()).then(function() {
              return w;
            });
          }, function(w) {
            return g.resolve(f()).then(function() {
              throw w;
            });
          });
        }, p.prototype.catch = function(f) {
          return this.then(null, f);
        }, p.prototype.then = function(f, g) {
          if (typeof f != "function" && this.state === r || typeof g != "function" && this.state === c)
            return this;
          var w = new this.constructor(v);
          return this.state !== m ? i(w, this.state === r ? f : g, this.outcome) : this.queue.push(new a(w, f, g)), w;
        }, a.prototype.callFulfilled = function(f) {
          e.resolve(this.promise, f);
        }, a.prototype.otherCallFulfilled = function(f) {
          i(this.promise, this.onFulfilled, f);
        }, a.prototype.callRejected = function(f) {
          e.reject(this.promise, f);
        }, a.prototype.otherCallRejected = function(f) {
          i(this.promise, this.onRejected, f);
        }, e.resolve = function(f, g) {
          var w = h(y, g);
          if (w.status === "error")
            return e.reject(f, w.value);
          var C = w.value;
          if (C)
            d(f, C);
          else {
            f.state = r, f.outcome = g;
            for (var n = -1, s = f.queue.length; ++n < s; )
              f.queue[n].callFulfilled(g);
          }
          return f;
        }, e.reject = function(f, g) {
          f.state = c, f.outcome = g;
          for (var w = -1, C = f.queue.length; ++w < C; )
            f.queue[w].callRejected(g);
          return f;
        }, p.resolve = function(f) {
          return f instanceof this ? f : e.resolve(new this(v), f);
        }, p.reject = function(f) {
          var g = new this(v);
          return e.reject(g, f);
        }, p.all = function(f) {
          var g = this;
          if (Object.prototype.toString.call(f) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var w = f.length, C = !1;
          if (!w)
            return this.resolve([]);
          for (var n = new Array(w), s = 0, t = -1, l = new this(v); ++t < w; )
            b(f[t], t);
          return l;
          function b(k, E) {
            g.resolve(k).then(function(_) {
              n[E] = _, ++s !== w || C || (C = !0, e.resolve(l, n));
            }, function(_) {
              C || (C = !0, e.reject(l, _));
            });
          }
        }, p.race = function(f) {
          var g = this;
          if (Object.prototype.toString.call(f) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var w = f.length, C = !1;
          if (!w)
            return this.resolve([]);
          for (var n = -1, s = new this(v); ++n < w; )
            t = f[n], g.resolve(t).then(function(l) {
              C || (C = !0, e.resolve(s, l));
            }, function(l) {
              C || (C = !0, e.reject(s, l));
            });
          var t;
          return s;
        };
      }, { immediate: 36 }], 38: [function(P, I, D) {
        var S = {};
        (0, P("./lib/utils/common").assign)(S, P("./lib/deflate"), P("./lib/inflate"), P("./lib/zlib/constants")), I.exports = S;
      }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(P, I, D) {
        var S = P("./zlib/deflate"), v = P("./utils/common"), e = P("./utils/strings"), c = P("./zlib/messages"), r = P("./zlib/zstream"), m = Object.prototype.toString, p = 0, a = -1, i = 0, y = 8;
        function d(f) {
          if (!(this instanceof d))
            return new d(f);
          this.options = v.assign({ level: a, method: y, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: i, to: "" }, f || {});
          var g = this.options;
          g.raw && 0 < g.windowBits ? g.windowBits = -g.windowBits : g.gzip && 0 < g.windowBits && g.windowBits < 16 && (g.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
          var w = S.deflateInit2(this.strm, g.level, g.method, g.windowBits, g.memLevel, g.strategy);
          if (w !== p)
            throw new Error(c[w]);
          if (g.header && S.deflateSetHeader(this.strm, g.header), g.dictionary) {
            var C;
            if (C = typeof g.dictionary == "string" ? e.string2buf(g.dictionary) : m.call(g.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(g.dictionary) : g.dictionary, (w = S.deflateSetDictionary(this.strm, C)) !== p)
              throw new Error(c[w]);
            this._dict_set = !0;
          }
        }
        function h(f, g) {
          var w = new d(g);
          if (w.push(f, !0), w.err)
            throw w.msg || c[w.err];
          return w.result;
        }
        d.prototype.push = function(f, g) {
          var w, C, n = this.strm, s = this.options.chunkSize;
          if (this.ended)
            return !1;
          C = g === ~~g ? g : g === !0 ? 4 : 0, typeof f == "string" ? n.input = e.string2buf(f) : m.call(f) === "[object ArrayBuffer]" ? n.input = new Uint8Array(f) : n.input = f, n.next_in = 0, n.avail_in = n.input.length;
          do {
            if (n.avail_out === 0 && (n.output = new v.Buf8(s), n.next_out = 0, n.avail_out = s), (w = S.deflate(n, C)) !== 1 && w !== p)
              return this.onEnd(w), !(this.ended = !0);
            n.avail_out !== 0 && (n.avail_in !== 0 || C !== 4 && C !== 2) || (this.options.to === "string" ? this.onData(e.buf2binstring(v.shrinkBuf(n.output, n.next_out))) : this.onData(v.shrinkBuf(n.output, n.next_out)));
          } while ((0 < n.avail_in || n.avail_out === 0) && w !== 1);
          return C === 4 ? (w = S.deflateEnd(this.strm), this.onEnd(w), this.ended = !0, w === p) : C !== 2 || (this.onEnd(p), !(n.avail_out = 0));
        }, d.prototype.onData = function(f) {
          this.chunks.push(f);
        }, d.prototype.onEnd = function(f) {
          f === p && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = v.flattenChunks(this.chunks)), this.chunks = [], this.err = f, this.msg = this.strm.msg;
        }, D.Deflate = d, D.deflate = h, D.deflateRaw = function(f, g) {
          return (g = g || {}).raw = !0, h(f, g);
        }, D.gzip = function(f, g) {
          return (g = g || {}).gzip = !0, h(f, g);
        };
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(P, I, D) {
        var S = P("./zlib/inflate"), v = P("./utils/common"), e = P("./utils/strings"), c = P("./zlib/constants"), r = P("./zlib/messages"), m = P("./zlib/zstream"), p = P("./zlib/gzheader"), a = Object.prototype.toString;
        function i(d) {
          if (!(this instanceof i))
            return new i(d);
          this.options = v.assign({ chunkSize: 16384, windowBits: 0, to: "" }, d || {});
          var h = this.options;
          h.raw && 0 <= h.windowBits && h.windowBits < 16 && (h.windowBits = -h.windowBits, h.windowBits === 0 && (h.windowBits = -15)), !(0 <= h.windowBits && h.windowBits < 16) || d && d.windowBits || (h.windowBits += 32), 15 < h.windowBits && h.windowBits < 48 && !(15 & h.windowBits) && (h.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new m(), this.strm.avail_out = 0;
          var f = S.inflateInit2(this.strm, h.windowBits);
          if (f !== c.Z_OK)
            throw new Error(r[f]);
          this.header = new p(), S.inflateGetHeader(this.strm, this.header);
        }
        function y(d, h) {
          var f = new i(h);
          if (f.push(d, !0), f.err)
            throw f.msg || r[f.err];
          return f.result;
        }
        i.prototype.push = function(d, h) {
          var f, g, w, C, n, s, t = this.strm, l = this.options.chunkSize, b = this.options.dictionary, k = !1;
          if (this.ended)
            return !1;
          g = h === ~~h ? h : h === !0 ? c.Z_FINISH : c.Z_NO_FLUSH, typeof d == "string" ? t.input = e.binstring2buf(d) : a.call(d) === "[object ArrayBuffer]" ? t.input = new Uint8Array(d) : t.input = d, t.next_in = 0, t.avail_in = t.input.length;
          do {
            if (t.avail_out === 0 && (t.output = new v.Buf8(l), t.next_out = 0, t.avail_out = l), (f = S.inflate(t, c.Z_NO_FLUSH)) === c.Z_NEED_DICT && b && (s = typeof b == "string" ? e.string2buf(b) : a.call(b) === "[object ArrayBuffer]" ? new Uint8Array(b) : b, f = S.inflateSetDictionary(this.strm, s)), f === c.Z_BUF_ERROR && k === !0 && (f = c.Z_OK, k = !1), f !== c.Z_STREAM_END && f !== c.Z_OK)
              return this.onEnd(f), !(this.ended = !0);
            t.next_out && (t.avail_out !== 0 && f !== c.Z_STREAM_END && (t.avail_in !== 0 || g !== c.Z_FINISH && g !== c.Z_SYNC_FLUSH) || (this.options.to === "string" ? (w = e.utf8border(t.output, t.next_out), C = t.next_out - w, n = e.buf2string(t.output, w), t.next_out = C, t.avail_out = l - C, C && v.arraySet(t.output, t.output, w, C, 0), this.onData(n)) : this.onData(v.shrinkBuf(t.output, t.next_out)))), t.avail_in === 0 && t.avail_out === 0 && (k = !0);
          } while ((0 < t.avail_in || t.avail_out === 0) && f !== c.Z_STREAM_END);
          return f === c.Z_STREAM_END && (g = c.Z_FINISH), g === c.Z_FINISH ? (f = S.inflateEnd(this.strm), this.onEnd(f), this.ended = !0, f === c.Z_OK) : g !== c.Z_SYNC_FLUSH || (this.onEnd(c.Z_OK), !(t.avail_out = 0));
        }, i.prototype.onData = function(d) {
          this.chunks.push(d);
        }, i.prototype.onEnd = function(d) {
          d === c.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = v.flattenChunks(this.chunks)), this.chunks = [], this.err = d, this.msg = this.strm.msg;
        }, D.Inflate = i, D.inflate = y, D.inflateRaw = function(d, h) {
          return (h = h || {}).raw = !0, y(d, h);
        }, D.ungzip = y;
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(P, I, D) {
        var S = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
        D.assign = function(c) {
          for (var r = Array.prototype.slice.call(arguments, 1); r.length; ) {
            var m = r.shift();
            if (m) {
              if (typeof m != "object")
                throw new TypeError(m + "must be non-object");
              for (var p in m)
                m.hasOwnProperty(p) && (c[p] = m[p]);
            }
          }
          return c;
        }, D.shrinkBuf = function(c, r) {
          return c.length === r ? c : c.subarray ? c.subarray(0, r) : (c.length = r, c);
        };
        var v = { arraySet: function(c, r, m, p, a) {
          if (r.subarray && c.subarray)
            c.set(r.subarray(m, m + p), a);
          else
            for (var i = 0; i < p; i++)
              c[a + i] = r[m + i];
        }, flattenChunks: function(c) {
          var r, m, p, a, i, y;
          for (r = p = 0, m = c.length; r < m; r++)
            p += c[r].length;
          for (y = new Uint8Array(p), r = a = 0, m = c.length; r < m; r++)
            i = c[r], y.set(i, a), a += i.length;
          return y;
        } }, e = { arraySet: function(c, r, m, p, a) {
          for (var i = 0; i < p; i++)
            c[a + i] = r[m + i];
        }, flattenChunks: function(c) {
          return [].concat.apply([], c);
        } };
        D.setTyped = function(c) {
          c ? (D.Buf8 = Uint8Array, D.Buf16 = Uint16Array, D.Buf32 = Int32Array, D.assign(D, v)) : (D.Buf8 = Array, D.Buf16 = Array, D.Buf32 = Array, D.assign(D, e));
        }, D.setTyped(S);
      }, {}], 42: [function(P, I, D) {
        var S = P("./common"), v = !0, e = !0;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (p) {
          v = !1;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (p) {
          e = !1;
        }
        for (var c = new S.Buf8(256), r = 0; r < 256; r++)
          c[r] = 252 <= r ? 6 : 248 <= r ? 5 : 240 <= r ? 4 : 224 <= r ? 3 : 192 <= r ? 2 : 1;
        function m(p, a) {
          if (a < 65537 && (p.subarray && e || !p.subarray && v))
            return String.fromCharCode.apply(null, S.shrinkBuf(p, a));
          for (var i = "", y = 0; y < a; y++)
            i += String.fromCharCode(p[y]);
          return i;
        }
        c[254] = c[254] = 1, D.string2buf = function(p) {
          var a, i, y, d, h, f = p.length, g = 0;
          for (d = 0; d < f; d++)
            (64512 & (i = p.charCodeAt(d))) == 55296 && d + 1 < f && (64512 & (y = p.charCodeAt(d + 1))) == 56320 && (i = 65536 + (i - 55296 << 10) + (y - 56320), d++), g += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
          for (a = new S.Buf8(g), d = h = 0; h < g; d++)
            (64512 & (i = p.charCodeAt(d))) == 55296 && d + 1 < f && (64512 & (y = p.charCodeAt(d + 1))) == 56320 && (i = 65536 + (i - 55296 << 10) + (y - 56320), d++), i < 128 ? a[h++] = i : (i < 2048 ? a[h++] = 192 | i >>> 6 : (i < 65536 ? a[h++] = 224 | i >>> 12 : (a[h++] = 240 | i >>> 18, a[h++] = 128 | i >>> 12 & 63), a[h++] = 128 | i >>> 6 & 63), a[h++] = 128 | 63 & i);
          return a;
        }, D.buf2binstring = function(p) {
          return m(p, p.length);
        }, D.binstring2buf = function(p) {
          for (var a = new S.Buf8(p.length), i = 0, y = a.length; i < y; i++)
            a[i] = p.charCodeAt(i);
          return a;
        }, D.buf2string = function(p, a) {
          var i, y, d, h, f = a || p.length, g = new Array(2 * f);
          for (i = y = 0; i < f; )
            if ((d = p[i++]) < 128)
              g[y++] = d;
            else if (4 < (h = c[d]))
              g[y++] = 65533, i += h - 1;
            else {
              for (d &= h === 2 ? 31 : h === 3 ? 15 : 7; 1 < h && i < f; )
                d = d << 6 | 63 & p[i++], h--;
              1 < h ? g[y++] = 65533 : d < 65536 ? g[y++] = d : (d -= 65536, g[y++] = 55296 | d >> 10 & 1023, g[y++] = 56320 | 1023 & d);
            }
          return m(g, y);
        }, D.utf8border = function(p, a) {
          var i;
          for ((a = a || p.length) > p.length && (a = p.length), i = a - 1; 0 <= i && (192 & p[i]) == 128; )
            i--;
          return i < 0 || i === 0 ? a : i + c[p[i]] > a ? i : a;
        };
      }, { "./common": 41 }], 43: [function(P, I, D) {
        I.exports = function(S, v, e, c) {
          for (var r = 65535 & S | 0, m = S >>> 16 & 65535 | 0, p = 0; e !== 0; ) {
            for (e -= p = 2e3 < e ? 2e3 : e; m = m + (r = r + v[c++] | 0) | 0, --p; )
              ;
            r %= 65521, m %= 65521;
          }
          return r | m << 16 | 0;
        };
      }, {}], 44: [function(P, I, D) {
        I.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 45: [function(P, I, D) {
        var S = function() {
          for (var v, e = [], c = 0; c < 256; c++) {
            v = c;
            for (var r = 0; r < 8; r++)
              v = 1 & v ? 3988292384 ^ v >>> 1 : v >>> 1;
            e[c] = v;
          }
          return e;
        }();
        I.exports = function(v, e, c, r) {
          var m = S, p = r + c;
          v ^= -1;
          for (var a = r; a < p; a++)
            v = v >>> 8 ^ m[255 & (v ^ e[a])];
          return -1 ^ v;
        };
      }, {}], 46: [function(P, I, D) {
        var S, v = P("../utils/common"), e = P("./trees"), c = P("./adler32"), r = P("./crc32"), m = P("./messages"), p = 0, a = 4, i = 0, y = -2, d = -1, h = 4, f = 2, g = 8, w = 9, C = 286, n = 30, s = 19, t = 2 * C + 1, l = 15, b = 3, k = 258, E = k + b + 1, _ = 42, T = 113, o = 1, R = 2, V = 3, L = 4;
        function K(u, F) {
          return u.msg = m[F], F;
        }
        function W(u) {
          return (u << 1) - (4 < u ? 9 : 0);
        }
        function Q(u) {
          for (var F = u.length; 0 <= --F; )
            u[F] = 0;
        }
        function z(u) {
          var F = u.state, M = F.pending;
          M > u.avail_out && (M = u.avail_out), M !== 0 && (v.arraySet(u.output, F.pending_buf, F.pending_out, M, u.next_out), u.next_out += M, F.pending_out += M, u.total_out += M, u.avail_out -= M, F.pending -= M, F.pending === 0 && (F.pending_out = 0));
        }
        function O(u, F) {
          e._tr_flush_block(u, 0 <= u.block_start ? u.block_start : -1, u.strstart - u.block_start, F), u.block_start = u.strstart, z(u.strm);
        }
        function Y(u, F) {
          u.pending_buf[u.pending++] = F;
        }
        function X(u, F) {
          u.pending_buf[u.pending++] = F >>> 8 & 255, u.pending_buf[u.pending++] = 255 & F;
        }
        function Z(u, F) {
          var M, A, x = u.max_chain_length, B = u.strstart, j = u.prev_length, U = u.nice_match, N = u.strstart > u.w_size - E ? u.strstart - (u.w_size - E) : 0, H = u.window, G = u.w_mask, $ = u.prev, J = u.strstart + k, ae = H[B + j - 1], re = H[B + j];
          u.prev_length >= u.good_match && (x >>= 2), U > u.lookahead && (U = u.lookahead);
          do
            if (H[(M = F) + j] === re && H[M + j - 1] === ae && H[M] === H[B] && H[++M] === H[B + 1]) {
              B += 2, M++;
              do
                ;
              while (H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && H[++B] === H[++M] && B < J);
              if (A = k - (J - B), B = J - k, j < A) {
                if (u.match_start = F, U <= (j = A))
                  break;
                ae = H[B + j - 1], re = H[B + j];
              }
            }
          while ((F = $[F & G]) > N && --x != 0);
          return j <= u.lookahead ? j : u.lookahead;
        }
        function se(u) {
          var F, M, A, x, B, j, U, N, H, G, $ = u.w_size;
          do {
            if (x = u.window_size - u.lookahead - u.strstart, u.strstart >= $ + ($ - E)) {
              for (v.arraySet(u.window, u.window, $, $, 0), u.match_start -= $, u.strstart -= $, u.block_start -= $, F = M = u.hash_size; A = u.head[--F], u.head[F] = $ <= A ? A - $ : 0, --M; )
                ;
              for (F = M = $; A = u.prev[--F], u.prev[F] = $ <= A ? A - $ : 0, --M; )
                ;
              x += $;
            }
            if (u.strm.avail_in === 0)
              break;
            if (j = u.strm, U = u.window, N = u.strstart + u.lookahead, H = x, G = void 0, G = j.avail_in, H < G && (G = H), M = G === 0 ? 0 : (j.avail_in -= G, v.arraySet(U, j.input, j.next_in, G, N), j.state.wrap === 1 ? j.adler = c(j.adler, U, G, N) : j.state.wrap === 2 && (j.adler = r(j.adler, U, G, N)), j.next_in += G, j.total_in += G, G), u.lookahead += M, u.lookahead + u.insert >= b)
              for (B = u.strstart - u.insert, u.ins_h = u.window[B], u.ins_h = (u.ins_h << u.hash_shift ^ u.window[B + 1]) & u.hash_mask; u.insert && (u.ins_h = (u.ins_h << u.hash_shift ^ u.window[B + b - 1]) & u.hash_mask, u.prev[B & u.w_mask] = u.head[u.ins_h], u.head[u.ins_h] = B, B++, u.insert--, !(u.lookahead + u.insert < b)); )
                ;
          } while (u.lookahead < E && u.strm.avail_in !== 0);
        }
        function ce(u, F) {
          for (var M, A; ; ) {
            if (u.lookahead < E) {
              if (se(u), u.lookahead < E && F === p)
                return o;
              if (u.lookahead === 0)
                break;
            }
            if (M = 0, u.lookahead >= b && (u.ins_h = (u.ins_h << u.hash_shift ^ u.window[u.strstart + b - 1]) & u.hash_mask, M = u.prev[u.strstart & u.w_mask] = u.head[u.ins_h], u.head[u.ins_h] = u.strstart), M !== 0 && u.strstart - M <= u.w_size - E && (u.match_length = Z(u, M)), u.match_length >= b)
              if (A = e._tr_tally(u, u.strstart - u.match_start, u.match_length - b), u.lookahead -= u.match_length, u.match_length <= u.max_lazy_match && u.lookahead >= b) {
                for (u.match_length--; u.strstart++, u.ins_h = (u.ins_h << u.hash_shift ^ u.window[u.strstart + b - 1]) & u.hash_mask, M = u.prev[u.strstart & u.w_mask] = u.head[u.ins_h], u.head[u.ins_h] = u.strstart, --u.match_length != 0; )
                  ;
                u.strstart++;
              } else
                u.strstart += u.match_length, u.match_length = 0, u.ins_h = u.window[u.strstart], u.ins_h = (u.ins_h << u.hash_shift ^ u.window[u.strstart + 1]) & u.hash_mask;
            else
              A = e._tr_tally(u, 0, u.window[u.strstart]), u.lookahead--, u.strstart++;
            if (A && (O(u, !1), u.strm.avail_out === 0))
              return o;
          }
          return u.insert = u.strstart < b - 1 ? u.strstart : b - 1, F === a ? (O(u, !0), u.strm.avail_out === 0 ? V : L) : u.last_lit && (O(u, !1), u.strm.avail_out === 0) ? o : R;
        }
        function te(u, F) {
          for (var M, A, x; ; ) {
            if (u.lookahead < E) {
              if (se(u), u.lookahead < E && F === p)
                return o;
              if (u.lookahead === 0)
                break;
            }
            if (M = 0, u.lookahead >= b && (u.ins_h = (u.ins_h << u.hash_shift ^ u.window[u.strstart + b - 1]) & u.hash_mask, M = u.prev[u.strstart & u.w_mask] = u.head[u.ins_h], u.head[u.ins_h] = u.strstart), u.prev_length = u.match_length, u.prev_match = u.match_start, u.match_length = b - 1, M !== 0 && u.prev_length < u.max_lazy_match && u.strstart - M <= u.w_size - E && (u.match_length = Z(u, M), u.match_length <= 5 && (u.strategy === 1 || u.match_length === b && 4096 < u.strstart - u.match_start) && (u.match_length = b - 1)), u.prev_length >= b && u.match_length <= u.prev_length) {
              for (x = u.strstart + u.lookahead - b, A = e._tr_tally(u, u.strstart - 1 - u.prev_match, u.prev_length - b), u.lookahead -= u.prev_length - 1, u.prev_length -= 2; ++u.strstart <= x && (u.ins_h = (u.ins_h << u.hash_shift ^ u.window[u.strstart + b - 1]) & u.hash_mask, M = u.prev[u.strstart & u.w_mask] = u.head[u.ins_h], u.head[u.ins_h] = u.strstart), --u.prev_length != 0; )
                ;
              if (u.match_available = 0, u.match_length = b - 1, u.strstart++, A && (O(u, !1), u.strm.avail_out === 0))
                return o;
            } else if (u.match_available) {
              if ((A = e._tr_tally(u, 0, u.window[u.strstart - 1])) && O(u, !1), u.strstart++, u.lookahead--, u.strm.avail_out === 0)
                return o;
            } else
              u.match_available = 1, u.strstart++, u.lookahead--;
          }
          return u.match_available && (A = e._tr_tally(u, 0, u.window[u.strstart - 1]), u.match_available = 0), u.insert = u.strstart < b - 1 ? u.strstart : b - 1, F === a ? (O(u, !0), u.strm.avail_out === 0 ? V : L) : u.last_lit && (O(u, !1), u.strm.avail_out === 0) ? o : R;
        }
        function ne(u, F, M, A, x) {
          this.good_length = u, this.max_lazy = F, this.nice_length = M, this.max_chain = A, this.func = x;
        }
        function le() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = g, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new v.Buf16(2 * t), this.dyn_dtree = new v.Buf16(2 * (2 * n + 1)), this.bl_tree = new v.Buf16(2 * (2 * s + 1)), Q(this.dyn_ltree), Q(this.dyn_dtree), Q(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new v.Buf16(l + 1), this.heap = new v.Buf16(2 * C + 1), Q(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new v.Buf16(2 * C + 1), Q(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function ie(u) {
          var F;
          return u && u.state ? (u.total_in = u.total_out = 0, u.data_type = f, (F = u.state).pending = 0, F.pending_out = 0, F.wrap < 0 && (F.wrap = -F.wrap), F.status = F.wrap ? _ : T, u.adler = F.wrap === 2 ? 0 : 1, F.last_flush = p, e._tr_init(F), i) : K(u, y);
        }
        function fe(u) {
          var F = ie(u);
          return F === i && function(M) {
            M.window_size = 2 * M.w_size, Q(M.head), M.max_lazy_match = S[M.level].max_lazy, M.good_match = S[M.level].good_length, M.nice_match = S[M.level].nice_length, M.max_chain_length = S[M.level].max_chain, M.strstart = 0, M.block_start = 0, M.lookahead = 0, M.insert = 0, M.match_length = M.prev_length = b - 1, M.match_available = 0, M.ins_h = 0;
          }(u.state), F;
        }
        function he(u, F, M, A, x, B) {
          if (!u)
            return y;
          var j = 1;
          if (F === d && (F = 6), A < 0 ? (j = 0, A = -A) : 15 < A && (j = 2, A -= 16), x < 1 || w < x || M !== g || A < 8 || 15 < A || F < 0 || 9 < F || B < 0 || h < B)
            return K(u, y);
          A === 8 && (A = 9);
          var U = new le();
          return (u.state = U).strm = u, U.wrap = j, U.gzhead = null, U.w_bits = A, U.w_size = 1 << U.w_bits, U.w_mask = U.w_size - 1, U.hash_bits = x + 7, U.hash_size = 1 << U.hash_bits, U.hash_mask = U.hash_size - 1, U.hash_shift = ~~((U.hash_bits + b - 1) / b), U.window = new v.Buf8(2 * U.w_size), U.head = new v.Buf16(U.hash_size), U.prev = new v.Buf16(U.w_size), U.lit_bufsize = 1 << x + 6, U.pending_buf_size = 4 * U.lit_bufsize, U.pending_buf = new v.Buf8(U.pending_buf_size), U.d_buf = 1 * U.lit_bufsize, U.l_buf = 3 * U.lit_bufsize, U.level = F, U.strategy = B, U.method = M, fe(u);
        }
        S = [new ne(0, 0, 0, 0, function(u, F) {
          var M = 65535;
          for (M > u.pending_buf_size - 5 && (M = u.pending_buf_size - 5); ; ) {
            if (u.lookahead <= 1) {
              if (se(u), u.lookahead === 0 && F === p)
                return o;
              if (u.lookahead === 0)
                break;
            }
            u.strstart += u.lookahead, u.lookahead = 0;
            var A = u.block_start + M;
            if ((u.strstart === 0 || u.strstart >= A) && (u.lookahead = u.strstart - A, u.strstart = A, O(u, !1), u.strm.avail_out === 0) || u.strstart - u.block_start >= u.w_size - E && (O(u, !1), u.strm.avail_out === 0))
              return o;
          }
          return u.insert = 0, F === a ? (O(u, !0), u.strm.avail_out === 0 ? V : L) : (u.strstart > u.block_start && (O(u, !1), u.strm.avail_out), o);
        }), new ne(4, 4, 8, 4, ce), new ne(4, 5, 16, 8, ce), new ne(4, 6, 32, 32, ce), new ne(4, 4, 16, 16, te), new ne(8, 16, 32, 32, te), new ne(8, 16, 128, 128, te), new ne(8, 32, 128, 256, te), new ne(32, 128, 258, 1024, te), new ne(32, 258, 258, 4096, te)], D.deflateInit = function(u, F) {
          return he(u, F, g, 15, 8, 0);
        }, D.deflateInit2 = he, D.deflateReset = fe, D.deflateResetKeep = ie, D.deflateSetHeader = function(u, F) {
          return u && u.state ? u.state.wrap !== 2 ? y : (u.state.gzhead = F, i) : y;
        }, D.deflate = function(u, F) {
          var M, A, x, B;
          if (!u || !u.state || 5 < F || F < 0)
            return u ? K(u, y) : y;
          if (A = u.state, !u.output || !u.input && u.avail_in !== 0 || A.status === 666 && F !== a)
            return K(u, u.avail_out === 0 ? -5 : y);
          if (A.strm = u, M = A.last_flush, A.last_flush = F, A.status === _)
            if (A.wrap === 2)
              u.adler = 0, Y(A, 31), Y(A, 139), Y(A, 8), A.gzhead ? (Y(A, (A.gzhead.text ? 1 : 0) + (A.gzhead.hcrc ? 2 : 0) + (A.gzhead.extra ? 4 : 0) + (A.gzhead.name ? 8 : 0) + (A.gzhead.comment ? 16 : 0)), Y(A, 255 & A.gzhead.time), Y(A, A.gzhead.time >> 8 & 255), Y(A, A.gzhead.time >> 16 & 255), Y(A, A.gzhead.time >> 24 & 255), Y(A, A.level === 9 ? 2 : 2 <= A.strategy || A.level < 2 ? 4 : 0), Y(A, 255 & A.gzhead.os), A.gzhead.extra && A.gzhead.extra.length && (Y(A, 255 & A.gzhead.extra.length), Y(A, A.gzhead.extra.length >> 8 & 255)), A.gzhead.hcrc && (u.adler = r(u.adler, A.pending_buf, A.pending, 0)), A.gzindex = 0, A.status = 69) : (Y(A, 0), Y(A, 0), Y(A, 0), Y(A, 0), Y(A, 0), Y(A, A.level === 9 ? 2 : 2 <= A.strategy || A.level < 2 ? 4 : 0), Y(A, 3), A.status = T);
            else {
              var j = g + (A.w_bits - 8 << 4) << 8;
              j |= (2 <= A.strategy || A.level < 2 ? 0 : A.level < 6 ? 1 : A.level === 6 ? 2 : 3) << 6, A.strstart !== 0 && (j |= 32), j += 31 - j % 31, A.status = T, X(A, j), A.strstart !== 0 && (X(A, u.adler >>> 16), X(A, 65535 & u.adler)), u.adler = 1;
            }
          if (A.status === 69)
            if (A.gzhead.extra) {
              for (x = A.pending; A.gzindex < (65535 & A.gzhead.extra.length) && (A.pending !== A.pending_buf_size || (A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), z(u), x = A.pending, A.pending !== A.pending_buf_size)); )
                Y(A, 255 & A.gzhead.extra[A.gzindex]), A.gzindex++;
              A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), A.gzindex === A.gzhead.extra.length && (A.gzindex = 0, A.status = 73);
            } else
              A.status = 73;
          if (A.status === 73)
            if (A.gzhead.name) {
              x = A.pending;
              do {
                if (A.pending === A.pending_buf_size && (A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), z(u), x = A.pending, A.pending === A.pending_buf_size)) {
                  B = 1;
                  break;
                }
                B = A.gzindex < A.gzhead.name.length ? 255 & A.gzhead.name.charCodeAt(A.gzindex++) : 0, Y(A, B);
              } while (B !== 0);
              A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), B === 0 && (A.gzindex = 0, A.status = 91);
            } else
              A.status = 91;
          if (A.status === 91)
            if (A.gzhead.comment) {
              x = A.pending;
              do {
                if (A.pending === A.pending_buf_size && (A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), z(u), x = A.pending, A.pending === A.pending_buf_size)) {
                  B = 1;
                  break;
                }
                B = A.gzindex < A.gzhead.comment.length ? 255 & A.gzhead.comment.charCodeAt(A.gzindex++) : 0, Y(A, B);
              } while (B !== 0);
              A.gzhead.hcrc && A.pending > x && (u.adler = r(u.adler, A.pending_buf, A.pending - x, x)), B === 0 && (A.status = 103);
            } else
              A.status = 103;
          if (A.status === 103 && (A.gzhead.hcrc ? (A.pending + 2 > A.pending_buf_size && z(u), A.pending + 2 <= A.pending_buf_size && (Y(A, 255 & u.adler), Y(A, u.adler >> 8 & 255), u.adler = 0, A.status = T)) : A.status = T), A.pending !== 0) {
            if (z(u), u.avail_out === 0)
              return A.last_flush = -1, i;
          } else if (u.avail_in === 0 && W(F) <= W(M) && F !== a)
            return K(u, -5);
          if (A.status === 666 && u.avail_in !== 0)
            return K(u, -5);
          if (u.avail_in !== 0 || A.lookahead !== 0 || F !== p && A.status !== 666) {
            var U = A.strategy === 2 ? function(N, H) {
              for (var G; ; ) {
                if (N.lookahead === 0 && (se(N), N.lookahead === 0)) {
                  if (H === p)
                    return o;
                  break;
                }
                if (N.match_length = 0, G = e._tr_tally(N, 0, N.window[N.strstart]), N.lookahead--, N.strstart++, G && (O(N, !1), N.strm.avail_out === 0))
                  return o;
              }
              return N.insert = 0, H === a ? (O(N, !0), N.strm.avail_out === 0 ? V : L) : N.last_lit && (O(N, !1), N.strm.avail_out === 0) ? o : R;
            }(A, F) : A.strategy === 3 ? function(N, H) {
              for (var G, $, J, ae, re = N.window; ; ) {
                if (N.lookahead <= k) {
                  if (se(N), N.lookahead <= k && H === p)
                    return o;
                  if (N.lookahead === 0)
                    break;
                }
                if (N.match_length = 0, N.lookahead >= b && 0 < N.strstart && ($ = re[J = N.strstart - 1]) === re[++J] && $ === re[++J] && $ === re[++J]) {
                  ae = N.strstart + k;
                  do
                    ;
                  while ($ === re[++J] && $ === re[++J] && $ === re[++J] && $ === re[++J] && $ === re[++J] && $ === re[++J] && $ === re[++J] && $ === re[++J] && J < ae);
                  N.match_length = k - (ae - J), N.match_length > N.lookahead && (N.match_length = N.lookahead);
                }
                if (N.match_length >= b ? (G = e._tr_tally(N, 1, N.match_length - b), N.lookahead -= N.match_length, N.strstart += N.match_length, N.match_length = 0) : (G = e._tr_tally(N, 0, N.window[N.strstart]), N.lookahead--, N.strstart++), G && (O(N, !1), N.strm.avail_out === 0))
                  return o;
              }
              return N.insert = 0, H === a ? (O(N, !0), N.strm.avail_out === 0 ? V : L) : N.last_lit && (O(N, !1), N.strm.avail_out === 0) ? o : R;
            }(A, F) : S[A.level].func(A, F);
            if (U !== V && U !== L || (A.status = 666), U === o || U === V)
              return u.avail_out === 0 && (A.last_flush = -1), i;
            if (U === R && (F === 1 ? e._tr_align(A) : F !== 5 && (e._tr_stored_block(A, 0, 0, !1), F === 3 && (Q(A.head), A.lookahead === 0 && (A.strstart = 0, A.block_start = 0, A.insert = 0))), z(u), u.avail_out === 0))
              return A.last_flush = -1, i;
          }
          return F !== a ? i : A.wrap <= 0 ? 1 : (A.wrap === 2 ? (Y(A, 255 & u.adler), Y(A, u.adler >> 8 & 255), Y(A, u.adler >> 16 & 255), Y(A, u.adler >> 24 & 255), Y(A, 255 & u.total_in), Y(A, u.total_in >> 8 & 255), Y(A, u.total_in >> 16 & 255), Y(A, u.total_in >> 24 & 255)) : (X(A, u.adler >>> 16), X(A, 65535 & u.adler)), z(u), 0 < A.wrap && (A.wrap = -A.wrap), A.pending !== 0 ? i : 1);
        }, D.deflateEnd = function(u) {
          var F;
          return u && u.state ? (F = u.state.status) !== _ && F !== 69 && F !== 73 && F !== 91 && F !== 103 && F !== T && F !== 666 ? K(u, y) : (u.state = null, F === T ? K(u, -3) : i) : y;
        }, D.deflateSetDictionary = function(u, F) {
          var M, A, x, B, j, U, N, H, G = F.length;
          if (!u || !u.state || (B = (M = u.state).wrap) === 2 || B === 1 && M.status !== _ || M.lookahead)
            return y;
          for (B === 1 && (u.adler = c(u.adler, F, G, 0)), M.wrap = 0, G >= M.w_size && (B === 0 && (Q(M.head), M.strstart = 0, M.block_start = 0, M.insert = 0), H = new v.Buf8(M.w_size), v.arraySet(H, F, G - M.w_size, M.w_size, 0), F = H, G = M.w_size), j = u.avail_in, U = u.next_in, N = u.input, u.avail_in = G, u.next_in = 0, u.input = F, se(M); M.lookahead >= b; ) {
            for (A = M.strstart, x = M.lookahead - (b - 1); M.ins_h = (M.ins_h << M.hash_shift ^ M.window[A + b - 1]) & M.hash_mask, M.prev[A & M.w_mask] = M.head[M.ins_h], M.head[M.ins_h] = A, A++, --x; )
              ;
            M.strstart = A, M.lookahead = b - 1, se(M);
          }
          return M.strstart += M.lookahead, M.block_start = M.strstart, M.insert = M.lookahead, M.lookahead = 0, M.match_length = M.prev_length = b - 1, M.match_available = 0, u.next_in = U, u.input = N, u.avail_in = j, M.wrap = B, i;
        }, D.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(P, I, D) {
        I.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
        };
      }, {}], 48: [function(P, I, D) {
        I.exports = function(S, v) {
          var e, c, r, m, p, a, i, y, d, h, f, g, w, C, n, s, t, l, b, k, E, _, T, o, R;
          e = S.state, c = S.next_in, o = S.input, r = c + (S.avail_in - 5), m = S.next_out, R = S.output, p = m - (v - S.avail_out), a = m + (S.avail_out - 257), i = e.dmax, y = e.wsize, d = e.whave, h = e.wnext, f = e.window, g = e.hold, w = e.bits, C = e.lencode, n = e.distcode, s = (1 << e.lenbits) - 1, t = (1 << e.distbits) - 1;
          e:
            do {
              w < 15 && (g += o[c++] << w, w += 8, g += o[c++] << w, w += 8), l = C[g & s];
              t:
                for (; ; ) {
                  if (g >>>= b = l >>> 24, w -= b, (b = l >>> 16 & 255) === 0)
                    R[m++] = 65535 & l;
                  else {
                    if (!(16 & b)) {
                      if (!(64 & b)) {
                        l = C[(65535 & l) + (g & (1 << b) - 1)];
                        continue t;
                      }
                      if (32 & b) {
                        e.mode = 12;
                        break e;
                      }
                      S.msg = "invalid literal/length code", e.mode = 30;
                      break e;
                    }
                    k = 65535 & l, (b &= 15) && (w < b && (g += o[c++] << w, w += 8), k += g & (1 << b) - 1, g >>>= b, w -= b), w < 15 && (g += o[c++] << w, w += 8, g += o[c++] << w, w += 8), l = n[g & t];
                    r:
                      for (; ; ) {
                        if (g >>>= b = l >>> 24, w -= b, !(16 & (b = l >>> 16 & 255))) {
                          if (!(64 & b)) {
                            l = n[(65535 & l) + (g & (1 << b) - 1)];
                            continue r;
                          }
                          S.msg = "invalid distance code", e.mode = 30;
                          break e;
                        }
                        if (E = 65535 & l, w < (b &= 15) && (g += o[c++] << w, (w += 8) < b && (g += o[c++] << w, w += 8)), i < (E += g & (1 << b) - 1)) {
                          S.msg = "invalid distance too far back", e.mode = 30;
                          break e;
                        }
                        if (g >>>= b, w -= b, (b = m - p) < E) {
                          if (d < (b = E - b) && e.sane) {
                            S.msg = "invalid distance too far back", e.mode = 30;
                            break e;
                          }
                          if (T = f, (_ = 0) === h) {
                            if (_ += y - b, b < k) {
                              for (k -= b; R[m++] = f[_++], --b; )
                                ;
                              _ = m - E, T = R;
                            }
                          } else if (h < b) {
                            if (_ += y + h - b, (b -= h) < k) {
                              for (k -= b; R[m++] = f[_++], --b; )
                                ;
                              if (_ = 0, h < k) {
                                for (k -= b = h; R[m++] = f[_++], --b; )
                                  ;
                                _ = m - E, T = R;
                              }
                            }
                          } else if (_ += h - b, b < k) {
                            for (k -= b; R[m++] = f[_++], --b; )
                              ;
                            _ = m - E, T = R;
                          }
                          for (; 2 < k; )
                            R[m++] = T[_++], R[m++] = T[_++], R[m++] = T[_++], k -= 3;
                          k && (R[m++] = T[_++], 1 < k && (R[m++] = T[_++]));
                        } else {
                          for (_ = m - E; R[m++] = R[_++], R[m++] = R[_++], R[m++] = R[_++], 2 < (k -= 3); )
                            ;
                          k && (R[m++] = R[_++], 1 < k && (R[m++] = R[_++]));
                        }
                        break;
                      }
                  }
                  break;
                }
            } while (c < r && m < a);
          c -= k = w >> 3, g &= (1 << (w -= k << 3)) - 1, S.next_in = c, S.next_out = m, S.avail_in = c < r ? r - c + 5 : 5 - (c - r), S.avail_out = m < a ? a - m + 257 : 257 - (m - a), e.hold = g, e.bits = w;
        };
      }, {}], 49: [function(P, I, D) {
        var S = P("../utils/common"), v = P("./adler32"), e = P("./crc32"), c = P("./inffast"), r = P("./inftrees"), m = 1, p = 2, a = 0, i = -2, y = 1, d = 852, h = 592;
        function f(_) {
          return (_ >>> 24 & 255) + (_ >>> 8 & 65280) + ((65280 & _) << 8) + ((255 & _) << 24);
        }
        function g() {
          this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new S.Buf16(320), this.work = new S.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function w(_) {
          var T;
          return _ && _.state ? (T = _.state, _.total_in = _.total_out = T.total = 0, _.msg = "", T.wrap && (_.adler = 1 & T.wrap), T.mode = y, T.last = 0, T.havedict = 0, T.dmax = 32768, T.head = null, T.hold = 0, T.bits = 0, T.lencode = T.lendyn = new S.Buf32(d), T.distcode = T.distdyn = new S.Buf32(h), T.sane = 1, T.back = -1, a) : i;
        }
        function C(_) {
          var T;
          return _ && _.state ? ((T = _.state).wsize = 0, T.whave = 0, T.wnext = 0, w(_)) : i;
        }
        function n(_, T) {
          var o, R;
          return _ && _.state ? (R = _.state, T < 0 ? (o = 0, T = -T) : (o = 1 + (T >> 4), T < 48 && (T &= 15)), T && (T < 8 || 15 < T) ? i : (R.window !== null && R.wbits !== T && (R.window = null), R.wrap = o, R.wbits = T, C(_))) : i;
        }
        function s(_, T) {
          var o, R;
          return _ ? (R = new g(), (_.state = R).window = null, (o = n(_, T)) !== a && (_.state = null), o) : i;
        }
        var t, l, b = !0;
        function k(_) {
          if (b) {
            var T;
            for (t = new S.Buf32(512), l = new S.Buf32(32), T = 0; T < 144; )
              _.lens[T++] = 8;
            for (; T < 256; )
              _.lens[T++] = 9;
            for (; T < 280; )
              _.lens[T++] = 7;
            for (; T < 288; )
              _.lens[T++] = 8;
            for (r(m, _.lens, 0, 288, t, 0, _.work, { bits: 9 }), T = 0; T < 32; )
              _.lens[T++] = 5;
            r(p, _.lens, 0, 32, l, 0, _.work, { bits: 5 }), b = !1;
          }
          _.lencode = t, _.lenbits = 9, _.distcode = l, _.distbits = 5;
        }
        function E(_, T, o, R) {
          var V, L = _.state;
          return L.window === null && (L.wsize = 1 << L.wbits, L.wnext = 0, L.whave = 0, L.window = new S.Buf8(L.wsize)), R >= L.wsize ? (S.arraySet(L.window, T, o - L.wsize, L.wsize, 0), L.wnext = 0, L.whave = L.wsize) : (R < (V = L.wsize - L.wnext) && (V = R), S.arraySet(L.window, T, o - R, V, L.wnext), (R -= V) ? (S.arraySet(L.window, T, o - R, R, 0), L.wnext = R, L.whave = L.wsize) : (L.wnext += V, L.wnext === L.wsize && (L.wnext = 0), L.whave < L.wsize && (L.whave += V))), 0;
        }
        D.inflateReset = C, D.inflateReset2 = n, D.inflateResetKeep = w, D.inflateInit = function(_) {
          return s(_, 15);
        }, D.inflateInit2 = s, D.inflate = function(_, T) {
          var o, R, V, L, K, W, Q, z, O, Y, X, Z, se, ce, te, ne, le, ie, fe, he, u, F, M, A, x = 0, B = new S.Buf8(4), j = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!_ || !_.state || !_.output || !_.input && _.avail_in !== 0)
            return i;
          (o = _.state).mode === 12 && (o.mode = 13), K = _.next_out, V = _.output, Q = _.avail_out, L = _.next_in, R = _.input, W = _.avail_in, z = o.hold, O = o.bits, Y = W, X = Q, F = a;
          e:
            for (; ; )
              switch (o.mode) {
                case y:
                  if (o.wrap === 0) {
                    o.mode = 13;
                    break;
                  }
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (2 & o.wrap && z === 35615) {
                    B[o.check = 0] = 255 & z, B[1] = z >>> 8 & 255, o.check = e(o.check, B, 2, 0), O = z = 0, o.mode = 2;
                    break;
                  }
                  if (o.flags = 0, o.head && (o.head.done = !1), !(1 & o.wrap) || (((255 & z) << 8) + (z >> 8)) % 31) {
                    _.msg = "incorrect header check", o.mode = 30;
                    break;
                  }
                  if ((15 & z) != 8) {
                    _.msg = "unknown compression method", o.mode = 30;
                    break;
                  }
                  if (O -= 4, u = 8 + (15 & (z >>>= 4)), o.wbits === 0)
                    o.wbits = u;
                  else if (u > o.wbits) {
                    _.msg = "invalid window size", o.mode = 30;
                    break;
                  }
                  o.dmax = 1 << u, _.adler = o.check = 1, o.mode = 512 & z ? 10 : 12, O = z = 0;
                  break;
                case 2:
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (o.flags = z, (255 & o.flags) != 8) {
                    _.msg = "unknown compression method", o.mode = 30;
                    break;
                  }
                  if (57344 & o.flags) {
                    _.msg = "unknown header flags set", o.mode = 30;
                    break;
                  }
                  o.head && (o.head.text = z >> 8 & 1), 512 & o.flags && (B[0] = 255 & z, B[1] = z >>> 8 & 255, o.check = e(o.check, B, 2, 0)), O = z = 0, o.mode = 3;
                case 3:
                  for (; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  o.head && (o.head.time = z), 512 & o.flags && (B[0] = 255 & z, B[1] = z >>> 8 & 255, B[2] = z >>> 16 & 255, B[3] = z >>> 24 & 255, o.check = e(o.check, B, 4, 0)), O = z = 0, o.mode = 4;
                case 4:
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  o.head && (o.head.xflags = 255 & z, o.head.os = z >> 8), 512 & o.flags && (B[0] = 255 & z, B[1] = z >>> 8 & 255, o.check = e(o.check, B, 2, 0)), O = z = 0, o.mode = 5;
                case 5:
                  if (1024 & o.flags) {
                    for (; O < 16; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    o.length = z, o.head && (o.head.extra_len = z), 512 & o.flags && (B[0] = 255 & z, B[1] = z >>> 8 & 255, o.check = e(o.check, B, 2, 0)), O = z = 0;
                  } else
                    o.head && (o.head.extra = null);
                  o.mode = 6;
                case 6:
                  if (1024 & o.flags && (W < (Z = o.length) && (Z = W), Z && (o.head && (u = o.head.extra_len - o.length, o.head.extra || (o.head.extra = new Array(o.head.extra_len)), S.arraySet(o.head.extra, R, L, Z, u)), 512 & o.flags && (o.check = e(o.check, R, Z, L)), W -= Z, L += Z, o.length -= Z), o.length))
                    break e;
                  o.length = 0, o.mode = 7;
                case 7:
                  if (2048 & o.flags) {
                    if (W === 0)
                      break e;
                    for (Z = 0; u = R[L + Z++], o.head && u && o.length < 65536 && (o.head.name += String.fromCharCode(u)), u && Z < W; )
                      ;
                    if (512 & o.flags && (o.check = e(o.check, R, Z, L)), W -= Z, L += Z, u)
                      break e;
                  } else
                    o.head && (o.head.name = null);
                  o.length = 0, o.mode = 8;
                case 8:
                  if (4096 & o.flags) {
                    if (W === 0)
                      break e;
                    for (Z = 0; u = R[L + Z++], o.head && u && o.length < 65536 && (o.head.comment += String.fromCharCode(u)), u && Z < W; )
                      ;
                    if (512 & o.flags && (o.check = e(o.check, R, Z, L)), W -= Z, L += Z, u)
                      break e;
                  } else
                    o.head && (o.head.comment = null);
                  o.mode = 9;
                case 9:
                  if (512 & o.flags) {
                    for (; O < 16; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (z !== (65535 & o.check)) {
                      _.msg = "header crc mismatch", o.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  o.head && (o.head.hcrc = o.flags >> 9 & 1, o.head.done = !0), _.adler = o.check = 0, o.mode = 12;
                  break;
                case 10:
                  for (; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  _.adler = o.check = f(z), O = z = 0, o.mode = 11;
                case 11:
                  if (o.havedict === 0)
                    return _.next_out = K, _.avail_out = Q, _.next_in = L, _.avail_in = W, o.hold = z, o.bits = O, 2;
                  _.adler = o.check = 1, o.mode = 12;
                case 12:
                  if (T === 5 || T === 6)
                    break e;
                case 13:
                  if (o.last) {
                    z >>>= 7 & O, O -= 7 & O, o.mode = 27;
                    break;
                  }
                  for (; O < 3; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  switch (o.last = 1 & z, O -= 1, 3 & (z >>>= 1)) {
                    case 0:
                      o.mode = 14;
                      break;
                    case 1:
                      if (k(o), o.mode = 20, T !== 6)
                        break;
                      z >>>= 2, O -= 2;
                      break e;
                    case 2:
                      o.mode = 17;
                      break;
                    case 3:
                      _.msg = "invalid block type", o.mode = 30;
                  }
                  z >>>= 2, O -= 2;
                  break;
                case 14:
                  for (z >>>= 7 & O, O -= 7 & O; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if ((65535 & z) != (z >>> 16 ^ 65535)) {
                    _.msg = "invalid stored block lengths", o.mode = 30;
                    break;
                  }
                  if (o.length = 65535 & z, O = z = 0, o.mode = 15, T === 6)
                    break e;
                case 15:
                  o.mode = 16;
                case 16:
                  if (Z = o.length) {
                    if (W < Z && (Z = W), Q < Z && (Z = Q), Z === 0)
                      break e;
                    S.arraySet(V, R, L, Z, K), W -= Z, L += Z, Q -= Z, K += Z, o.length -= Z;
                    break;
                  }
                  o.mode = 12;
                  break;
                case 17:
                  for (; O < 14; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (o.nlen = 257 + (31 & z), z >>>= 5, O -= 5, o.ndist = 1 + (31 & z), z >>>= 5, O -= 5, o.ncode = 4 + (15 & z), z >>>= 4, O -= 4, 286 < o.nlen || 30 < o.ndist) {
                    _.msg = "too many length or distance symbols", o.mode = 30;
                    break;
                  }
                  o.have = 0, o.mode = 18;
                case 18:
                  for (; o.have < o.ncode; ) {
                    for (; O < 3; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    o.lens[j[o.have++]] = 7 & z, z >>>= 3, O -= 3;
                  }
                  for (; o.have < 19; )
                    o.lens[j[o.have++]] = 0;
                  if (o.lencode = o.lendyn, o.lenbits = 7, M = { bits: o.lenbits }, F = r(0, o.lens, 0, 19, o.lencode, 0, o.work, M), o.lenbits = M.bits, F) {
                    _.msg = "invalid code lengths set", o.mode = 30;
                    break;
                  }
                  o.have = 0, o.mode = 19;
                case 19:
                  for (; o.have < o.nlen + o.ndist; ) {
                    for (; ne = (x = o.lencode[z & (1 << o.lenbits) - 1]) >>> 16 & 255, le = 65535 & x, !((te = x >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (le < 16)
                      z >>>= te, O -= te, o.lens[o.have++] = le;
                    else {
                      if (le === 16) {
                        for (A = te + 2; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        if (z >>>= te, O -= te, o.have === 0) {
                          _.msg = "invalid bit length repeat", o.mode = 30;
                          break;
                        }
                        u = o.lens[o.have - 1], Z = 3 + (3 & z), z >>>= 2, O -= 2;
                      } else if (le === 17) {
                        for (A = te + 3; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        O -= te, u = 0, Z = 3 + (7 & (z >>>= te)), z >>>= 3, O -= 3;
                      } else {
                        for (A = te + 7; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        O -= te, u = 0, Z = 11 + (127 & (z >>>= te)), z >>>= 7, O -= 7;
                      }
                      if (o.have + Z > o.nlen + o.ndist) {
                        _.msg = "invalid bit length repeat", o.mode = 30;
                        break;
                      }
                      for (; Z--; )
                        o.lens[o.have++] = u;
                    }
                  }
                  if (o.mode === 30)
                    break;
                  if (o.lens[256] === 0) {
                    _.msg = "invalid code -- missing end-of-block", o.mode = 30;
                    break;
                  }
                  if (o.lenbits = 9, M = { bits: o.lenbits }, F = r(m, o.lens, 0, o.nlen, o.lencode, 0, o.work, M), o.lenbits = M.bits, F) {
                    _.msg = "invalid literal/lengths set", o.mode = 30;
                    break;
                  }
                  if (o.distbits = 6, o.distcode = o.distdyn, M = { bits: o.distbits }, F = r(p, o.lens, o.nlen, o.ndist, o.distcode, 0, o.work, M), o.distbits = M.bits, F) {
                    _.msg = "invalid distances set", o.mode = 30;
                    break;
                  }
                  if (o.mode = 20, T === 6)
                    break e;
                case 20:
                  o.mode = 21;
                case 21:
                  if (6 <= W && 258 <= Q) {
                    _.next_out = K, _.avail_out = Q, _.next_in = L, _.avail_in = W, o.hold = z, o.bits = O, c(_, X), K = _.next_out, V = _.output, Q = _.avail_out, L = _.next_in, R = _.input, W = _.avail_in, z = o.hold, O = o.bits, o.mode === 12 && (o.back = -1);
                    break;
                  }
                  for (o.back = 0; ne = (x = o.lencode[z & (1 << o.lenbits) - 1]) >>> 16 & 255, le = 65535 & x, !((te = x >>> 24) <= O); ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (ne && !(240 & ne)) {
                    for (ie = te, fe = ne, he = le; ne = (x = o.lencode[he + ((z & (1 << ie + fe) - 1) >> ie)]) >>> 16 & 255, le = 65535 & x, !(ie + (te = x >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    z >>>= ie, O -= ie, o.back += ie;
                  }
                  if (z >>>= te, O -= te, o.back += te, o.length = le, ne === 0) {
                    o.mode = 26;
                    break;
                  }
                  if (32 & ne) {
                    o.back = -1, o.mode = 12;
                    break;
                  }
                  if (64 & ne) {
                    _.msg = "invalid literal/length code", o.mode = 30;
                    break;
                  }
                  o.extra = 15 & ne, o.mode = 22;
                case 22:
                  if (o.extra) {
                    for (A = o.extra; O < A; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    o.length += z & (1 << o.extra) - 1, z >>>= o.extra, O -= o.extra, o.back += o.extra;
                  }
                  o.was = o.length, o.mode = 23;
                case 23:
                  for (; ne = (x = o.distcode[z & (1 << o.distbits) - 1]) >>> 16 & 255, le = 65535 & x, !((te = x >>> 24) <= O); ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (!(240 & ne)) {
                    for (ie = te, fe = ne, he = le; ne = (x = o.distcode[he + ((z & (1 << ie + fe) - 1) >> ie)]) >>> 16 & 255, le = 65535 & x, !(ie + (te = x >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    z >>>= ie, O -= ie, o.back += ie;
                  }
                  if (z >>>= te, O -= te, o.back += te, 64 & ne) {
                    _.msg = "invalid distance code", o.mode = 30;
                    break;
                  }
                  o.offset = le, o.extra = 15 & ne, o.mode = 24;
                case 24:
                  if (o.extra) {
                    for (A = o.extra; O < A; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    o.offset += z & (1 << o.extra) - 1, z >>>= o.extra, O -= o.extra, o.back += o.extra;
                  }
                  if (o.offset > o.dmax) {
                    _.msg = "invalid distance too far back", o.mode = 30;
                    break;
                  }
                  o.mode = 25;
                case 25:
                  if (Q === 0)
                    break e;
                  if (Z = X - Q, o.offset > Z) {
                    if ((Z = o.offset - Z) > o.whave && o.sane) {
                      _.msg = "invalid distance too far back", o.mode = 30;
                      break;
                    }
                    se = Z > o.wnext ? (Z -= o.wnext, o.wsize - Z) : o.wnext - Z, Z > o.length && (Z = o.length), ce = o.window;
                  } else
                    ce = V, se = K - o.offset, Z = o.length;
                  for (Q < Z && (Z = Q), Q -= Z, o.length -= Z; V[K++] = ce[se++], --Z; )
                    ;
                  o.length === 0 && (o.mode = 21);
                  break;
                case 26:
                  if (Q === 0)
                    break e;
                  V[K++] = o.length, Q--, o.mode = 21;
                  break;
                case 27:
                  if (o.wrap) {
                    for (; O < 32; ) {
                      if (W === 0)
                        break e;
                      W--, z |= R[L++] << O, O += 8;
                    }
                    if (X -= Q, _.total_out += X, o.total += X, X && (_.adler = o.check = o.flags ? e(o.check, V, X, K - X) : v(o.check, V, X, K - X)), X = Q, (o.flags ? z : f(z)) !== o.check) {
                      _.msg = "incorrect data check", o.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  o.mode = 28;
                case 28:
                  if (o.wrap && o.flags) {
                    for (; O < 32; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (z !== (4294967295 & o.total)) {
                      _.msg = "incorrect length check", o.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  o.mode = 29;
                case 29:
                  F = 1;
                  break e;
                case 30:
                  F = -3;
                  break e;
                case 31:
                  return -4;
                case 32:
                default:
                  return i;
              }
          return _.next_out = K, _.avail_out = Q, _.next_in = L, _.avail_in = W, o.hold = z, o.bits = O, (o.wsize || X !== _.avail_out && o.mode < 30 && (o.mode < 27 || T !== 4)) && E(_, _.output, _.next_out, X - _.avail_out) ? (o.mode = 31, -4) : (Y -= _.avail_in, X -= _.avail_out, _.total_in += Y, _.total_out += X, o.total += X, o.wrap && X && (_.adler = o.check = o.flags ? e(o.check, V, X, _.next_out - X) : v(o.check, V, X, _.next_out - X)), _.data_type = o.bits + (o.last ? 64 : 0) + (o.mode === 12 ? 128 : 0) + (o.mode === 20 || o.mode === 15 ? 256 : 0), (Y == 0 && X === 0 || T === 4) && F === a && (F = -5), F);
        }, D.inflateEnd = function(_) {
          if (!_ || !_.state)
            return i;
          var T = _.state;
          return T.window && (T.window = null), _.state = null, a;
        }, D.inflateGetHeader = function(_, T) {
          var o;
          return _ && _.state && 2 & (o = _.state).wrap ? ((o.head = T).done = !1, a) : i;
        }, D.inflateSetDictionary = function(_, T) {
          var o, R = T.length;
          return _ && _.state ? (o = _.state).wrap !== 0 && o.mode !== 11 ? i : o.mode === 11 && v(1, T, R, 0) !== o.check ? -3 : E(_, T, R, R) ? (o.mode = 31, -4) : (o.havedict = 1, a) : i;
        }, D.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(P, I, D) {
        var S = P("../utils/common"), v = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], e = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], c = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], r = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        I.exports = function(m, p, a, i, y, d, h, f) {
          var g, w, C, n, s, t, l, b, k, E = f.bits, _ = 0, T = 0, o = 0, R = 0, V = 0, L = 0, K = 0, W = 0, Q = 0, z = 0, O = null, Y = 0, X = new S.Buf16(16), Z = new S.Buf16(16), se = null, ce = 0;
          for (_ = 0; _ <= 15; _++)
            X[_] = 0;
          for (T = 0; T < i; T++)
            X[p[a + T]]++;
          for (V = E, R = 15; 1 <= R && X[R] === 0; R--)
            ;
          if (R < V && (V = R), R === 0)
            return y[d++] = 20971520, y[d++] = 20971520, f.bits = 1, 0;
          for (o = 1; o < R && X[o] === 0; o++)
            ;
          for (V < o && (V = o), _ = W = 1; _ <= 15; _++)
            if (W <<= 1, (W -= X[_]) < 0)
              return -1;
          if (0 < W && (m === 0 || R !== 1))
            return -1;
          for (Z[1] = 0, _ = 1; _ < 15; _++)
            Z[_ + 1] = Z[_] + X[_];
          for (T = 0; T < i; T++)
            p[a + T] !== 0 && (h[Z[p[a + T]]++] = T);
          if (t = m === 0 ? (O = se = h, 19) : m === 1 ? (O = v, Y -= 257, se = e, ce -= 257, 256) : (O = c, se = r, -1), _ = o, s = d, K = T = z = 0, C = -1, n = (Q = 1 << (L = V)) - 1, m === 1 && 852 < Q || m === 2 && 592 < Q)
            return 1;
          for (; ; ) {
            for (l = _ - K, k = h[T] < t ? (b = 0, h[T]) : h[T] > t ? (b = se[ce + h[T]], O[Y + h[T]]) : (b = 96, 0), g = 1 << _ - K, o = w = 1 << L; y[s + (z >> K) + (w -= g)] = l << 24 | b << 16 | k | 0, w !== 0; )
              ;
            for (g = 1 << _ - 1; z & g; )
              g >>= 1;
            if (g !== 0 ? (z &= g - 1, z += g) : z = 0, T++, --X[_] == 0) {
              if (_ === R)
                break;
              _ = p[a + h[T]];
            }
            if (V < _ && (z & n) !== C) {
              for (K === 0 && (K = V), s += o, W = 1 << (L = _ - K); L + K < R && !((W -= X[L + K]) <= 0); )
                L++, W <<= 1;
              if (Q += 1 << L, m === 1 && 852 < Q || m === 2 && 592 < Q)
                return 1;
              y[C = z & n] = V << 24 | L << 16 | s - d | 0;
            }
          }
          return z !== 0 && (y[s + z] = _ - K << 24 | 64 << 16 | 0), f.bits = V, 0;
        };
      }, { "../utils/common": 41 }], 51: [function(P, I, D) {
        I.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 52: [function(P, I, D) {
        var S = P("../utils/common"), v = 0, e = 1;
        function c(x) {
          for (var B = x.length; 0 <= --B; )
            x[B] = 0;
        }
        var r = 0, m = 29, p = 256, a = p + 1 + m, i = 30, y = 19, d = 2 * a + 1, h = 15, f = 16, g = 7, w = 256, C = 16, n = 17, s = 18, t = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], l = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], k = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], E = new Array(2 * (a + 2));
        c(E);
        var _ = new Array(2 * i);
        c(_);
        var T = new Array(512);
        c(T);
        var o = new Array(256);
        c(o);
        var R = new Array(m);
        c(R);
        var V, L, K, W = new Array(i);
        function Q(x, B, j, U, N) {
          this.static_tree = x, this.extra_bits = B, this.extra_base = j, this.elems = U, this.max_length = N, this.has_stree = x && x.length;
        }
        function z(x, B) {
          this.dyn_tree = x, this.max_code = 0, this.stat_desc = B;
        }
        function O(x) {
          return x < 256 ? T[x] : T[256 + (x >>> 7)];
        }
        function Y(x, B) {
          x.pending_buf[x.pending++] = 255 & B, x.pending_buf[x.pending++] = B >>> 8 & 255;
        }
        function X(x, B, j) {
          x.bi_valid > f - j ? (x.bi_buf |= B << x.bi_valid & 65535, Y(x, x.bi_buf), x.bi_buf = B >> f - x.bi_valid, x.bi_valid += j - f) : (x.bi_buf |= B << x.bi_valid & 65535, x.bi_valid += j);
        }
        function Z(x, B, j) {
          X(x, j[2 * B], j[2 * B + 1]);
        }
        function se(x, B) {
          for (var j = 0; j |= 1 & x, x >>>= 1, j <<= 1, 0 < --B; )
            ;
          return j >>> 1;
        }
        function ce(x, B, j) {
          var U, N, H = new Array(h + 1), G = 0;
          for (U = 1; U <= h; U++)
            H[U] = G = G + j[U - 1] << 1;
          for (N = 0; N <= B; N++) {
            var $ = x[2 * N + 1];
            $ !== 0 && (x[2 * N] = se(H[$]++, $));
          }
        }
        function te(x) {
          var B;
          for (B = 0; B < a; B++)
            x.dyn_ltree[2 * B] = 0;
          for (B = 0; B < i; B++)
            x.dyn_dtree[2 * B] = 0;
          for (B = 0; B < y; B++)
            x.bl_tree[2 * B] = 0;
          x.dyn_ltree[2 * w] = 1, x.opt_len = x.static_len = 0, x.last_lit = x.matches = 0;
        }
        function ne(x) {
          8 < x.bi_valid ? Y(x, x.bi_buf) : 0 < x.bi_valid && (x.pending_buf[x.pending++] = x.bi_buf), x.bi_buf = 0, x.bi_valid = 0;
        }
        function le(x, B, j, U) {
          var N = 2 * B, H = 2 * j;
          return x[N] < x[H] || x[N] === x[H] && U[B] <= U[j];
        }
        function ie(x, B, j) {
          for (var U = x.heap[j], N = j << 1; N <= x.heap_len && (N < x.heap_len && le(B, x.heap[N + 1], x.heap[N], x.depth) && N++, !le(B, U, x.heap[N], x.depth)); )
            x.heap[j] = x.heap[N], j = N, N <<= 1;
          x.heap[j] = U;
        }
        function fe(x, B, j) {
          var U, N, H, G, $ = 0;
          if (x.last_lit !== 0)
            for (; U = x.pending_buf[x.d_buf + 2 * $] << 8 | x.pending_buf[x.d_buf + 2 * $ + 1], N = x.pending_buf[x.l_buf + $], $++, U === 0 ? Z(x, N, B) : (Z(x, (H = o[N]) + p + 1, B), (G = t[H]) !== 0 && X(x, N -= R[H], G), Z(x, H = O(--U), j), (G = l[H]) !== 0 && X(x, U -= W[H], G)), $ < x.last_lit; )
              ;
          Z(x, w, B);
        }
        function he(x, B) {
          var j, U, N, H = B.dyn_tree, G = B.stat_desc.static_tree, $ = B.stat_desc.has_stree, J = B.stat_desc.elems, ae = -1;
          for (x.heap_len = 0, x.heap_max = d, j = 0; j < J; j++)
            H[2 * j] !== 0 ? (x.heap[++x.heap_len] = ae = j, x.depth[j] = 0) : H[2 * j + 1] = 0;
          for (; x.heap_len < 2; )
            H[2 * (N = x.heap[++x.heap_len] = ae < 2 ? ++ae : 0)] = 1, x.depth[N] = 0, x.opt_len--, $ && (x.static_len -= G[2 * N + 1]);
          for (B.max_code = ae, j = x.heap_len >> 1; 1 <= j; j--)
            ie(x, H, j);
          for (N = J; j = x.heap[1], x.heap[1] = x.heap[x.heap_len--], ie(x, H, 1), U = x.heap[1], x.heap[--x.heap_max] = j, x.heap[--x.heap_max] = U, H[2 * N] = H[2 * j] + H[2 * U], x.depth[N] = (x.depth[j] >= x.depth[U] ? x.depth[j] : x.depth[U]) + 1, H[2 * j + 1] = H[2 * U + 1] = N, x.heap[1] = N++, ie(x, H, 1), 2 <= x.heap_len; )
            ;
          x.heap[--x.heap_max] = x.heap[1], function(re, de) {
            var be, pe, ye, oe, _e, Se, me = de.dyn_tree, Te = de.max_code, Re = de.stat_desc.static_tree, ze = de.stat_desc.has_stree, Me = de.stat_desc.extra_bits, De = de.stat_desc.extra_base, ve = de.stat_desc.max_length, ke = 0;
            for (oe = 0; oe <= h; oe++)
              re.bl_count[oe] = 0;
            for (me[2 * re.heap[re.heap_max] + 1] = 0, be = re.heap_max + 1; be < d; be++)
              ve < (oe = me[2 * me[2 * (pe = re.heap[be]) + 1] + 1] + 1) && (oe = ve, ke++), me[2 * pe + 1] = oe, Te < pe || (re.bl_count[oe]++, _e = 0, De <= pe && (_e = Me[pe - De]), Se = me[2 * pe], re.opt_len += Se * (oe + _e), ze && (re.static_len += Se * (Re[2 * pe + 1] + _e)));
            if (ke !== 0) {
              do {
                for (oe = ve - 1; re.bl_count[oe] === 0; )
                  oe--;
                re.bl_count[oe]--, re.bl_count[oe + 1] += 2, re.bl_count[ve]--, ke -= 2;
              } while (0 < ke);
              for (oe = ve; oe !== 0; oe--)
                for (pe = re.bl_count[oe]; pe !== 0; )
                  Te < (ye = re.heap[--be]) || (me[2 * ye + 1] !== oe && (re.opt_len += (oe - me[2 * ye + 1]) * me[2 * ye], me[2 * ye + 1] = oe), pe--);
            }
          }(x, B), ce(H, ae, x.bl_count);
        }
        function u(x, B, j) {
          var U, N, H = -1, G = B[1], $ = 0, J = 7, ae = 4;
          for (G === 0 && (J = 138, ae = 3), B[2 * (j + 1) + 1] = 65535, U = 0; U <= j; U++)
            N = G, G = B[2 * (U + 1) + 1], ++$ < J && N === G || ($ < ae ? x.bl_tree[2 * N] += $ : N !== 0 ? (N !== H && x.bl_tree[2 * N]++, x.bl_tree[2 * C]++) : $ <= 10 ? x.bl_tree[2 * n]++ : x.bl_tree[2 * s]++, H = N, ae = ($ = 0) === G ? (J = 138, 3) : N === G ? (J = 6, 3) : (J = 7, 4));
        }
        function F(x, B, j) {
          var U, N, H = -1, G = B[1], $ = 0, J = 7, ae = 4;
          for (G === 0 && (J = 138, ae = 3), U = 0; U <= j; U++)
            if (N = G, G = B[2 * (U + 1) + 1], !(++$ < J && N === G)) {
              if ($ < ae)
                for (; Z(x, N, x.bl_tree), --$ != 0; )
                  ;
              else
                N !== 0 ? (N !== H && (Z(x, N, x.bl_tree), $--), Z(x, C, x.bl_tree), X(x, $ - 3, 2)) : $ <= 10 ? (Z(x, n, x.bl_tree), X(x, $ - 3, 3)) : (Z(x, s, x.bl_tree), X(x, $ - 11, 7));
              H = N, ae = ($ = 0) === G ? (J = 138, 3) : N === G ? (J = 6, 3) : (J = 7, 4);
            }
        }
        c(W);
        var M = !1;
        function A(x, B, j, U) {
          X(x, (r << 1) + (U ? 1 : 0), 3), function(N, H, G, $) {
            ne(N), $ && (Y(N, G), Y(N, ~G)), S.arraySet(N.pending_buf, N.window, H, G, N.pending), N.pending += G;
          }(x, B, j, !0);
        }
        D._tr_init = function(x) {
          M || (function() {
            var B, j, U, N, H, G = new Array(h + 1);
            for (N = U = 0; N < m - 1; N++)
              for (R[N] = U, B = 0; B < 1 << t[N]; B++)
                o[U++] = N;
            for (o[U - 1] = N, N = H = 0; N < 16; N++)
              for (W[N] = H, B = 0; B < 1 << l[N]; B++)
                T[H++] = N;
            for (H >>= 7; N < i; N++)
              for (W[N] = H << 7, B = 0; B < 1 << l[N] - 7; B++)
                T[256 + H++] = N;
            for (j = 0; j <= h; j++)
              G[j] = 0;
            for (B = 0; B <= 143; )
              E[2 * B + 1] = 8, B++, G[8]++;
            for (; B <= 255; )
              E[2 * B + 1] = 9, B++, G[9]++;
            for (; B <= 279; )
              E[2 * B + 1] = 7, B++, G[7]++;
            for (; B <= 287; )
              E[2 * B + 1] = 8, B++, G[8]++;
            for (ce(E, a + 1, G), B = 0; B < i; B++)
              _[2 * B + 1] = 5, _[2 * B] = se(B, 5);
            V = new Q(E, t, p + 1, a, h), L = new Q(_, l, 0, i, h), K = new Q(new Array(0), b, 0, y, g);
          }(), M = !0), x.l_desc = new z(x.dyn_ltree, V), x.d_desc = new z(x.dyn_dtree, L), x.bl_desc = new z(x.bl_tree, K), x.bi_buf = 0, x.bi_valid = 0, te(x);
        }, D._tr_stored_block = A, D._tr_flush_block = function(x, B, j, U) {
          var N, H, G = 0;
          0 < x.level ? (x.strm.data_type === 2 && (x.strm.data_type = function($) {
            var J, ae = 4093624447;
            for (J = 0; J <= 31; J++, ae >>>= 1)
              if (1 & ae && $.dyn_ltree[2 * J] !== 0)
                return v;
            if ($.dyn_ltree[18] !== 0 || $.dyn_ltree[20] !== 0 || $.dyn_ltree[26] !== 0)
              return e;
            for (J = 32; J < p; J++)
              if ($.dyn_ltree[2 * J] !== 0)
                return e;
            return v;
          }(x)), he(x, x.l_desc), he(x, x.d_desc), G = function($) {
            var J;
            for (u($, $.dyn_ltree, $.l_desc.max_code), u($, $.dyn_dtree, $.d_desc.max_code), he($, $.bl_desc), J = y - 1; 3 <= J && $.bl_tree[2 * k[J] + 1] === 0; J--)
              ;
            return $.opt_len += 3 * (J + 1) + 5 + 5 + 4, J;
          }(x), N = x.opt_len + 3 + 7 >>> 3, (H = x.static_len + 3 + 7 >>> 3) <= N && (N = H)) : N = H = j + 5, j + 4 <= N && B !== -1 ? A(x, B, j, U) : x.strategy === 4 || H === N ? (X(x, 2 + (U ? 1 : 0), 3), fe(x, E, _)) : (X(x, 4 + (U ? 1 : 0), 3), function($, J, ae, re) {
            var de;
            for (X($, J - 257, 5), X($, ae - 1, 5), X($, re - 4, 4), de = 0; de < re; de++)
              X($, $.bl_tree[2 * k[de] + 1], 3);
            F($, $.dyn_ltree, J - 1), F($, $.dyn_dtree, ae - 1);
          }(x, x.l_desc.max_code + 1, x.d_desc.max_code + 1, G + 1), fe(x, x.dyn_ltree, x.dyn_dtree)), te(x), U && ne(x);
        }, D._tr_tally = function(x, B, j) {
          return x.pending_buf[x.d_buf + 2 * x.last_lit] = B >>> 8 & 255, x.pending_buf[x.d_buf + 2 * x.last_lit + 1] = 255 & B, x.pending_buf[x.l_buf + x.last_lit] = 255 & j, x.last_lit++, B === 0 ? x.dyn_ltree[2 * j]++ : (x.matches++, B--, x.dyn_ltree[2 * (o[j] + p + 1)]++, x.dyn_dtree[2 * O(B)]++), x.last_lit === x.lit_bufsize - 1;
        }, D._tr_align = function(x) {
          X(x, 2, 3), Z(x, w, E), function(B) {
            B.bi_valid === 16 ? (Y(B, B.bi_buf), B.bi_buf = 0, B.bi_valid = 0) : 8 <= B.bi_valid && (B.pending_buf[B.pending++] = 255 & B.bi_buf, B.bi_buf >>= 8, B.bi_valid -= 8);
          }(x);
        };
      }, { "../utils/common": 41 }], 53: [function(P, I, D) {
        I.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, {}], 54: [function(P, I, D) {
        (function(S) {
          (function(v, e) {
            if (!v.setImmediate) {
              var c, r, m, p, a = 1, i = {}, y = !1, d = v.document, h = Object.getPrototypeOf && Object.getPrototypeOf(v);
              h = h && h.setTimeout ? h : v, c = {}.toString.call(v.process) === "[object process]" ? function(C) {
                process.nextTick(function() {
                  g(C);
                });
              } : function() {
                if (v.postMessage && !v.importScripts) {
                  var C = !0, n = v.onmessage;
                  return v.onmessage = function() {
                    C = !1;
                  }, v.postMessage("", "*"), v.onmessage = n, C;
                }
              }() ? (p = "setImmediate$" + Math.random() + "$", v.addEventListener ? v.addEventListener("message", w, !1) : v.attachEvent("onmessage", w), function(C) {
                v.postMessage(p + C, "*");
              }) : v.MessageChannel ? ((m = new MessageChannel()).port1.onmessage = function(C) {
                g(C.data);
              }, function(C) {
                m.port2.postMessage(C);
              }) : d && "onreadystatechange" in d.createElement("script") ? (r = d.documentElement, function(C) {
                var n = d.createElement("script");
                n.onreadystatechange = function() {
                  g(C), n.onreadystatechange = null, r.removeChild(n), n = null;
                }, r.appendChild(n);
              }) : function(C) {
                setTimeout(g, 0, C);
              }, h.setImmediate = function(C) {
                typeof C != "function" && (C = new Function("" + C));
                for (var n = new Array(arguments.length - 1), s = 0; s < n.length; s++)
                  n[s] = arguments[s + 1];
                var t = { callback: C, args: n };
                return i[a] = t, c(a), a++;
              }, h.clearImmediate = f;
            }
            function f(C) {
              delete i[C];
            }
            function g(C) {
              if (y)
                setTimeout(g, 0, C);
              else {
                var n = i[C];
                if (n) {
                  y = !0;
                  try {
                    (function(s) {
                      var t = s.callback, l = s.args;
                      switch (l.length) {
                        case 0:
                          t();
                          break;
                        case 1:
                          t(l[0]);
                          break;
                        case 2:
                          t(l[0], l[1]);
                          break;
                        case 3:
                          t(l[0], l[1], l[2]);
                          break;
                        default:
                          t.apply(e, l);
                      }
                    })(n);
                  } finally {
                    f(C), y = !1;
                  }
                }
              }
            }
            function w(C) {
              C.source === v && typeof C.data == "string" && C.data.indexOf(p) === 0 && g(+C.data.slice(p.length));
            }
          })(typeof self == "undefined" ? S === void 0 ? this : S : self);
        }).call(this, typeof we != "undefined" ? we : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
      }, {}] }, {}, [10])(10);
    });
  }(Pe)), Pe.exports;
}
(function(q, ee) {
  (function(P, I) {
    q.exports = I(Xe());
  })(globalThis, (P) => (() => {
    var I = { 438: (v, e, c) => {
      c.r(e), c.d(e, { default: () => g });
      var r = c(537), m = c.n(r), p = c(645), a = c.n(p), i = c(806), y = c.n(i), d = new URL(c(583), c.b), h = a()(m()), f = y()(d);
      h.push([v.id, `@namespace "http://www.w3.org/1998/Math/MathML";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:"";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(${f})}`, "", { version: 3, sources: ["webpack://./src/mathml.scss"], names: [], mappings: "AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA", sourcesContent: [`@namespace "http://www.w3.org/1998/Math/MathML";\r
\r
math {\r
    display: inline-block;\r
    line-height: initial;\r
}\r
\r
mfrac {\r
    display: inline-block;\r
    vertical-align: -50%;\r
    text-align: center;\r
\r
    &>:first-child {\r
        border-bottom: solid thin currentColor;\r
    }\r
\r
    &>* {\r
        display: block;\r
    }\r
}\r
\r
msub {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: sub;\r
    }\r
}\r
\r
msup {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: super;\r
    }\r
}\r
\r
munder, mover, munderover {\r
    display: inline-flex;\r
    flex-flow: column nowrap;\r
    vertical-align: middle;\r
    text-align: center;\r
\r
    &>:not(:first-child) {\r
        font-size: smaller;\r
    }\r
}\r
\r
munderover {\r
    &>:last-child { order: -1; }\r
}\r
\r
mroot, msqrt {\r
    position: relative;\r
    display: inline-block;\r
    border-top: solid thin currentColor;  \r
    margin-top: 0.5px;\r
    vertical-align: middle;  \r
    margin-left: 1ch; \r
\r
    &:before {\r
        content: "";\r
        display: inline-block;\r
        position: absolute;\r
        width: 1ch;\r
        left: -1ch;\r
        top: -1px;\r
        bottom: 0;\r
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E");\r
    }\r
}`], sourceRoot: "" }]);
      const g = h.toString();
    }, 645: (v) => {
      v.exports = function(e) {
        var c = [];
        return c.toString = function() {
          return this.map(function(r) {
            var m = "", p = r[5] !== void 0;
            return r[4] && (m += "@supports (".concat(r[4], ") {")), r[2] && (m += "@media ".concat(r[2], " {")), p && (m += "@layer".concat(r[5].length > 0 ? " ".concat(r[5]) : "", " {")), m += e(r), p && (m += "}"), r[2] && (m += "}"), r[4] && (m += "}"), m;
          }).join("");
        }, c.i = function(r, m, p, a, i) {
          typeof r == "string" && (r = [[null, r, void 0]]);
          var y = {};
          if (p)
            for (var d = 0; d < this.length; d++) {
              var h = this[d][0];
              h != null && (y[h] = !0);
            }
          for (var f = 0; f < r.length; f++) {
            var g = [].concat(r[f]);
            p && y[g[0]] || (i !== void 0 && (g[5] === void 0 || (g[1] = "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {").concat(g[1], "}")), g[5] = i), m && (g[2] && (g[1] = "@media ".concat(g[2], " {").concat(g[1], "}")), g[2] = m), a && (g[4] ? (g[1] = "@supports (".concat(g[4], ") {").concat(g[1], "}"), g[4] = a) : g[4] = "".concat(a)), c.push(g));
          }
        }, c;
      };
    }, 806: (v) => {
      v.exports = function(e, c) {
        return c || (c = {}), e && (e = String(e.__esModule ? e.default : e), /^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), c.hash && (e += c.hash), /["'() \t\n]|(%20)/.test(e) || c.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e);
      };
    }, 537: (v) => {
      v.exports = function(e) {
        var c = e[1], r = e[3];
        if (!r)
          return c;
        if (typeof btoa == "function") {
          var m = btoa(unescape(encodeURIComponent(JSON.stringify(r)))), p = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(m), a = "/*# ".concat(p, " */");
          return [c].concat([a]).join(`
`);
        }
        return [c].join(`
`);
      };
    }, 522: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.OpenXmlPackage = void 0;
      const r = c(626), m = c(472), p = c(593), a = c(461);
      class i {
        constructor(d, h) {
          this._zip = d, this.options = h, this.xmlParser = new m.XmlParser();
        }
        get(d) {
          return this._zip.files[function(h) {
            return h.startsWith("/") ? h.substr(1) : h;
          }(d)];
        }
        update(d, h) {
          this._zip.file(d, h);
        }
        static load(d, h) {
          return ue(this, null, function* () {
            const f = yield r.loadAsync(d);
            return new i(f, h);
          });
        }
        save(d = "blob") {
          return this._zip.generateAsync({ type: d });
        }
        load(d, h = "string") {
          var f, g;
          return (g = (f = this.get(d)) === null || f === void 0 ? void 0 : f.async(h)) !== null && g !== void 0 ? g : Promise.resolve(null);
        }
        loadRelationships(d = null) {
          return ue(this, null, function* () {
            let h = "_rels/.rels";
            if (d != null) {
              const [g, w] = (0, p.splitPath)(d);
              h = `${g}_rels/${w}.rels`;
            }
            const f = yield this.load(h);
            return f ? (0, a.parseRelationships)(this.parseXmlDocument(f).firstElementChild, this.xmlParser) : null;
          });
        }
        parseXmlDocument(d) {
          return (0, m.parseXmlString)(d, this.options.trimXmlDeclaration);
        }
      }
      e.OpenXmlPackage = i;
    }, 530: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.Part = void 0;
      const r = c(472);
      e.Part = class {
        constructor(m, p) {
          this._package = m, this.path = p;
        }
        load() {
          return ue(this, null, function* () {
            this.rels = yield this._package.loadRelationships(this.path);
            const m = yield this._package.load(this.path), p = this._package.parseXmlDocument(m);
            this._package.options.keepOrigin && (this._xmlDocument = p), this.parseXml(p.firstElementChild);
          });
        }
        save() {
          this._package.update(this.path, (0, r.serializeXmlString)(this._xmlDocument));
        }
        parseXml(m) {
        }
      };
    }, 461: (v, e) => {
      var c;
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseRelationships = e.RelationshipTypes = void 0, function(r) {
        r.OfficeDocument = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument", r.FontTable = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable", r.Image = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image", r.Numbering = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering", r.Styles = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles", r.StylesWithEffects = "http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects", r.Theme = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme", r.Settings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings", r.WebSettings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings", r.Hyperlink = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink", r.Footnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes", r.Endnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes", r.Footer = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer", r.Header = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/header", r.ExtendedProperties = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties", r.CoreProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties", r.CustomProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties";
      }(c || (e.RelationshipTypes = c = {})), e.parseRelationships = function(r, m) {
        return m.elements(r).map((p) => ({ id: m.attr(p, "Id"), type: m.attr(p, "Type"), target: m.attr(p, "Target"), targetMode: m.attr(p, "TargetMode") }));
      };
    }, 168: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.DocumentParser = e.autos = void 0;
      const r = c(120), m = c(109), p = c(59), a = c(472), i = c(488), y = c(172), d = c(149), h = c(320);
      e.autos = { shd: "inherit", color: "black", borderColor: "black", highlight: "transparent" };
      const f = [], g = { oMath: r.DomType.MmlMath, oMathPara: r.DomType.MmlMathParagraph, f: r.DomType.MmlFraction, func: r.DomType.MmlFunction, fName: r.DomType.MmlFunctionName, num: r.DomType.MmlNumerator, den: r.DomType.MmlDenominator, rad: r.DomType.MmlRadical, deg: r.DomType.MmlDegree, e: r.DomType.MmlBase, sSup: r.DomType.MmlSuperscript, sSub: r.DomType.MmlSubscript, sPre: r.DomType.MmlPreSubSuper, sup: r.DomType.MmlSuperArgument, sub: r.DomType.MmlSubArgument, d: r.DomType.MmlDelimiter, nary: r.DomType.MmlNary, eqArr: r.DomType.MmlEquationArray, lim: r.DomType.MmlLimit, limLow: r.DomType.MmlLimitLower, m: r.DomType.MmlMatrix, mr: r.DomType.MmlMatrixRow, box: r.DomType.MmlBox, bar: r.DomType.MmlBar, groupChr: r.DomType.MmlGroupChar };
      e.DocumentParser = class {
        constructor(s) {
          this.options = Object.assign({ ignoreWidth: !1, debug: !1 }, s);
        }
        parseNotes(s, t, l) {
          var b = [];
          for (let k of a.default.elements(s, t)) {
            const E = new l();
            E.id = a.default.attr(k, "id"), E.noteType = a.default.attr(k, "type"), E.children = this.parseBodyElements(k), b.push(E);
          }
          return b;
        }
        parseDocumentFile(s) {
          var t = a.default.element(s, "body"), l = a.default.element(s, "background"), b = a.default.element(t, "sectPr");
          return { type: r.DomType.Document, children: this.parseBodyElements(t), props: b ? (0, p.parseSectionProperties)(b, a.default) : {}, cssStyle: l ? this.parseBackground(l) : {} };
        }
        parseBackground(s) {
          var t = {}, l = C.colorAttr(s, "color");
          return l && (t["background-color"] = l), t;
        }
        parseBodyElements(s) {
          var t = [];
          for (let l of a.default.elements(s))
            switch (l.localName) {
              case "p":
                t.push(this.parseParagraph(l));
                break;
              case "tbl":
                t.push(this.parseTable(l));
                break;
              case "sdt":
                t.push(...this.parseSdt(l, (b) => this.parseBodyElements(b)));
            }
          return t;
        }
        parseStylesFile(s) {
          var t = [];
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "style":
                t.push(this.parseStyle(l));
                break;
              case "docDefaults":
                t.push(this.parseDefaultStyles(l));
            }
          }), t;
        }
        parseDefaultStyles(s) {
          var t = { id: null, name: null, target: null, basedOn: null, styles: [] };
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "rPrDefault":
                var b = a.default.element(l, "rPr");
                b && t.styles.push({ target: "span", values: this.parseDefaultProperties(b, {}) });
                break;
              case "pPrDefault":
                var k = a.default.element(l, "pPr");
                k && t.styles.push({ target: "p", values: this.parseDefaultProperties(k, {}) });
            }
          }), t;
        }
        parseStyle(s) {
          var t = { id: a.default.attr(s, "styleId"), isDefault: a.default.boolAttr(s, "default"), name: null, target: null, basedOn: null, styles: [], linked: null };
          switch (a.default.attr(s, "type")) {
            case "paragraph":
              t.target = "p";
              break;
            case "table":
              t.target = "table";
              break;
            case "character":
              t.target = "span";
          }
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "basedOn":
                t.basedOn = a.default.attr(l, "val");
                break;
              case "name":
                t.name = a.default.attr(l, "val");
                break;
              case "link":
                t.linked = a.default.attr(l, "val");
                break;
              case "next":
                t.next = a.default.attr(l, "val");
                break;
              case "aliases":
                t.aliases = a.default.attr(l, "val").split(",");
                break;
              case "pPr":
                t.styles.push({ target: "p", values: this.parseDefaultProperties(l, {}) }), t.paragraphProps = (0, m.parseParagraphProperties)(l, a.default);
                break;
              case "rPr":
                t.styles.push({ target: "span", values: this.parseDefaultProperties(l, {}) }), t.runProps = (0, i.parseRunProperties)(l, a.default);
                break;
              case "tblPr":
              case "tcPr":
                t.styles.push({ target: "td", values: this.parseDefaultProperties(l, {}) });
                break;
              case "tblStylePr":
                for (let b of this.parseTableStyle(l))
                  t.styles.push(b);
                break;
              case "rsid":
              case "qFormat":
              case "hidden":
              case "semiHidden":
              case "unhideWhenUsed":
              case "autoRedefine":
              case "uiPriority":
                break;
              default:
                this.options.debug && console.warn(`DOCX: Unknown style element: ${l.localName}`);
            }
          }), t;
        }
        parseTableStyle(s) {
          var t = [], l = a.default.attr(s, "type"), b = "", k = "";
          switch (l) {
            case "firstRow":
              k = ".first-row", b = "tr.first-row td";
              break;
            case "lastRow":
              k = ".last-row", b = "tr.last-row td";
              break;
            case "firstCol":
              k = ".first-col", b = "td.first-col";
              break;
            case "lastCol":
              k = ".last-col", b = "td.last-col";
              break;
            case "band1Vert":
              k = ":not(.no-vband)", b = "td.odd-col";
              break;
            case "band2Vert":
              k = ":not(.no-vband)", b = "td.even-col";
              break;
            case "band1Horz":
              k = ":not(.no-hband)", b = "tr.odd-row";
              break;
            case "band2Horz":
              k = ":not(.no-hband)", b = "tr.even-row";
              break;
            default:
              return [];
          }
          return C.foreach(s, (E) => {
            switch (E.localName) {
              case "pPr":
                t.push({ target: `${b} p`, mod: k, values: this.parseDefaultProperties(E, {}) });
                break;
              case "rPr":
                t.push({ target: `${b} span`, mod: k, values: this.parseDefaultProperties(E, {}) });
                break;
              case "tblPr":
              case "tcPr":
                t.push({ target: b, mod: k, values: this.parseDefaultProperties(E, {}) });
            }
          }), t;
        }
        parseNumberingFile(s) {
          var t = [], l = {}, b = [];
          return C.foreach(s, (k) => {
            switch (k.localName) {
              case "abstractNum":
                this.parseAbstractNumbering(k, b).forEach((T) => t.push(T));
                break;
              case "numPicBullet":
                b.push(this.parseNumberingPicBullet(k));
                break;
              case "num":
                var E = a.default.attr(k, "numId"), _ = a.default.elementAttr(k, "abstractNumId", "val");
                l[_] = E;
            }
          }), t.forEach((k) => k.id = l[k.id]), t;
        }
        parseNumberingPicBullet(s) {
          var t = a.default.element(s, "pict"), l = t && a.default.element(t, "shape"), b = l && a.default.element(l, "imagedata");
          return b ? { id: a.default.intAttr(s, "numPicBulletId"), src: a.default.attr(b, "id"), style: a.default.attr(l, "style") } : null;
        }
        parseAbstractNumbering(s, t) {
          var l = [], b = a.default.attr(s, "abstractNumId");
          return C.foreach(s, (k) => {
            k.localName === "lvl" && l.push(this.parseNumberingLevel(b, k, t));
          }), l;
        }
        parseNumberingLevel(s, t, l) {
          var b = { id: s, level: a.default.intAttr(t, "ilvl"), start: 1, pStyleName: void 0, pStyle: {}, rStyle: {}, suff: "tab" };
          return C.foreach(t, (k) => {
            switch (k.localName) {
              case "start":
                b.start = a.default.intAttr(k, "val");
                break;
              case "pPr":
                this.parseDefaultProperties(k, b.pStyle);
                break;
              case "rPr":
                this.parseDefaultProperties(k, b.rStyle);
                break;
              case "lvlPicBulletId":
                var E = a.default.intAttr(k, "val");
                b.bullet = l.find((_) => _.id == E);
                break;
              case "lvlText":
                b.levelText = a.default.attr(k, "val");
                break;
              case "pStyle":
                b.pStyleName = a.default.attr(k, "val");
                break;
              case "numFmt":
                b.format = a.default.attr(k, "val");
                break;
              case "suff":
                b.suff = a.default.attr(k, "val");
            }
          }), b;
        }
        parseSdt(s, t) {
          const l = a.default.element(s, "sdtContent");
          return l ? t(l) : [];
        }
        parseInserted(s, t) {
          var l, b;
          return { type: r.DomType.Inserted, children: (b = (l = t(s)) === null || l === void 0 ? void 0 : l.children) !== null && b !== void 0 ? b : [] };
        }
        parseDeleted(s, t) {
          var l, b;
          return { type: r.DomType.Deleted, children: (b = (l = t(s)) === null || l === void 0 ? void 0 : l.children) !== null && b !== void 0 ? b : [] };
        }
        parseParagraph(s) {
          var t = { type: r.DomType.Paragraph, children: [] };
          for (let l of a.default.elements(s))
            switch (l.localName) {
              case "pPr":
                this.parseParagraphProperties(l, t);
                break;
              case "r":
                t.children.push(this.parseRun(l, t));
                break;
              case "hyperlink":
                t.children.push(this.parseHyperlink(l, t));
                break;
              case "bookmarkStart":
                t.children.push((0, y.parseBookmarkStart)(l, a.default));
                break;
              case "bookmarkEnd":
                t.children.push((0, y.parseBookmarkEnd)(l, a.default));
                break;
              case "oMath":
              case "oMathPara":
                t.children.push(this.parseMathElement(l));
                break;
              case "sdt":
                t.children.push(...this.parseSdt(l, (b) => this.parseParagraph(b).children));
                break;
              case "ins":
                t.children.push(this.parseInserted(l, (b) => this.parseParagraph(b)));
                break;
              case "del":
                t.children.push(this.parseDeleted(l, (b) => this.parseParagraph(b)));
            }
          return t;
        }
        parseParagraphProperties(s, t) {
          this.parseDefaultProperties(s, t.cssStyle = {}, null, (l) => {
            if ((0, m.parseParagraphProperty)(l, t, a.default))
              return !0;
            switch (l.localName) {
              case "pStyle":
                t.styleName = a.default.attr(l, "val");
                break;
              case "cnfStyle":
                t.className = n.classNameOfCnfStyle(l);
                break;
              case "framePr":
                this.parseFrame(l, t);
                break;
              case "rPr":
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseFrame(s, t) {
          a.default.attr(s, "dropCap") == "drop" && (t.cssStyle.float = "left");
        }
        parseHyperlink(s, t) {
          var l = { type: r.DomType.Hyperlink, parent: t, children: [] }, b = a.default.attr(s, "anchor"), k = a.default.attr(s, "id");
          return b && (l.href = "#" + b), k && (l.id = k), C.foreach(s, (E) => {
            E.localName === "r" && l.children.push(this.parseRun(E, l));
          }), l;
        }
        parseRun(s, t) {
          var l = { type: r.DomType.Run, parent: t, children: [] };
          return C.foreach(s, (b) => {
            switch ((b = this.checkAlternateContent(b)).localName) {
              case "t":
                l.children.push({ type: r.DomType.Text, text: b.textContent });
                break;
              case "delText":
                l.children.push({ type: r.DomType.DeletedText, text: b.textContent });
                break;
              case "fldSimple":
                l.children.push({ type: r.DomType.SimpleField, instruction: a.default.attr(b, "instr"), lock: a.default.boolAttr(b, "lock", !1), dirty: a.default.boolAttr(b, "dirty", !1) });
                break;
              case "instrText":
                l.fieldRun = !0, l.children.push({ type: r.DomType.Instruction, text: b.textContent });
                break;
              case "fldChar":
                l.fieldRun = !0, l.children.push({ type: r.DomType.ComplexField, charType: a.default.attr(b, "fldCharType"), lock: a.default.boolAttr(b, "lock", !1), dirty: a.default.boolAttr(b, "dirty", !1) });
                break;
              case "noBreakHyphen":
                l.children.push({ type: r.DomType.NoBreakHyphen });
                break;
              case "br":
                l.children.push({ type: r.DomType.Break, break: a.default.attr(b, "type") || "textWrapping" });
                break;
              case "lastRenderedPageBreak":
                l.children.push({ type: r.DomType.Break, break: "lastRenderedPageBreak" });
                break;
              case "sym":
                l.children.push({ type: r.DomType.Symbol, font: a.default.attr(b, "font"), char: a.default.attr(b, "char") });
                break;
              case "tab":
                l.children.push({ type: r.DomType.Tab });
                break;
              case "footnoteReference":
                l.children.push({ type: r.DomType.FootnoteReference, id: a.default.attr(b, "id") });
                break;
              case "endnoteReference":
                l.children.push({ type: r.DomType.EndnoteReference, id: a.default.attr(b, "id") });
                break;
              case "drawing":
                let k = this.parseDrawing(b);
                k && (l.children = [k]);
                break;
              case "pict":
                l.children.push(this.parseVmlPicture(b));
                break;
              case "rPr":
                this.parseRunProperties(b, l);
            }
          }), l;
        }
        parseMathElement(s) {
          const t = `${s.localName}Pr`, l = { type: g[s.localName], children: [] };
          for (const k of a.default.elements(s))
            if (g[k.localName])
              l.children.push(this.parseMathElement(k));
            else if (k.localName == "r") {
              var b = this.parseRun(k);
              b.type = r.DomType.MmlRun, l.children.push(b);
            } else
              k.localName == t && (l.props = this.parseMathProperies(k));
          return l;
        }
        parseMathProperies(s) {
          const t = {};
          for (const l of a.default.elements(s))
            switch (l.localName) {
              case "chr":
                t.char = a.default.attr(l, "val");
                break;
              case "vertJc":
                t.verticalJustification = a.default.attr(l, "val");
                break;
              case "pos":
                t.position = a.default.attr(l, "val");
                break;
              case "degHide":
                t.hideDegree = a.default.boolAttr(l, "val");
                break;
              case "begChr":
                t.beginChar = a.default.attr(l, "val");
                break;
              case "endChr":
                t.endChar = a.default.attr(l, "val");
            }
          return t;
        }
        parseRunProperties(s, t) {
          this.parseDefaultProperties(s, t.cssStyle = {}, null, (l) => {
            switch (l.localName) {
              case "rStyle":
                t.styleName = a.default.attr(l, "val");
                break;
              case "vertAlign":
                t.verticalAlign = n.valueOfVertAlign(l, !0);
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseVmlPicture(s) {
          const t = { type: r.DomType.VmlPicture, children: [] };
          for (const l of a.default.elements(s)) {
            const b = (0, h.parseVmlElement)(l, this);
            b && t.children.push(b);
          }
          return t;
        }
        checkAlternateContent(s) {
          var t;
          if (s.localName != "AlternateContent")
            return s;
          var l = a.default.element(s, "Choice");
          if (l) {
            var b = a.default.attr(l, "Requires"), k = s.lookupNamespaceURI(b);
            if (f.includes(k))
              return l.firstElementChild;
          }
          return (t = a.default.element(s, "Fallback")) === null || t === void 0 ? void 0 : t.firstElementChild;
        }
        parseDrawing(s) {
          for (var t of a.default.elements(s))
            switch (t.localName) {
              case "inline":
              case "anchor":
                return this.parseDrawingWrapper(t);
            }
        }
        parseDrawingWrapper(s) {
          var t, l = { type: r.DomType.Drawing, children: [], cssStyle: {} }, b = s.localName == "anchor";
          let k = null, E = a.default.boolAttr(s, "simplePos"), _ = { relative: "page", align: "left", offset: "0" }, T = { relative: "page", align: "top", offset: "0" };
          for (var o of a.default.elements(s))
            switch (o.localName) {
              case "simplePos":
                E && (_.offset = a.default.lengthAttr(o, "x", d.LengthUsage.Emu), T.offset = a.default.lengthAttr(o, "y", d.LengthUsage.Emu));
                break;
              case "extent":
                l.cssStyle.width = a.default.lengthAttr(o, "cx", d.LengthUsage.Emu), l.cssStyle.height = a.default.lengthAttr(o, "cy", d.LengthUsage.Emu);
                break;
              case "positionH":
              case "positionV":
                if (!E) {
                  let K = o.localName == "positionH" ? _ : T;
                  var R = a.default.element(o, "align"), V = a.default.element(o, "posOffset");
                  K.relative = (t = a.default.attr(o, "relativeFrom")) !== null && t !== void 0 ? t : K.relative, R && (K.align = R.textContent), V && (K.offset = C.sizeValue(V, d.LengthUsage.Emu));
                }
                break;
              case "wrapTopAndBottom":
                k = "wrapTopAndBottom";
                break;
              case "wrapNone":
                k = "wrapNone";
                break;
              case "graphic":
                var L = this.parseGraphic(o);
                L && l.children.push(L);
            }
          return k == "wrapTopAndBottom" ? (l.cssStyle.display = "block", _.align && (l.cssStyle["text-align"] = _.align, l.cssStyle.width = "100%")) : k == "wrapNone" ? (l.cssStyle.display = "block", l.cssStyle.position = "relative", l.cssStyle.width = "0px", l.cssStyle.height = "0px", _.offset && (l.cssStyle.left = _.offset), T.offset && (l.cssStyle.top = T.offset)) : !b || _.align != "left" && _.align != "right" || (l.cssStyle.float = _.align), l;
        }
        parseGraphic(s) {
          var t = a.default.element(s, "graphicData");
          for (let l of a.default.elements(t))
            if (l.localName === "pic")
              return this.parsePicture(l);
          return null;
        }
        parsePicture(s) {
          var t = { type: r.DomType.Image, src: "", cssStyle: {} }, l = a.default.element(s, "blipFill"), b = a.default.element(l, "blip");
          t.src = a.default.attr(b, "embed");
          var k = a.default.element(s, "spPr"), E = a.default.element(k, "xfrm");
          for (var _ of (t.cssStyle.position = "relative", a.default.elements(E)))
            switch (_.localName) {
              case "ext":
                t.cssStyle.width = a.default.lengthAttr(_, "cx", d.LengthUsage.Emu), t.cssStyle.height = a.default.lengthAttr(_, "cy", d.LengthUsage.Emu);
                break;
              case "off":
                t.cssStyle.left = a.default.lengthAttr(_, "x", d.LengthUsage.Emu), t.cssStyle.top = a.default.lengthAttr(_, "y", d.LengthUsage.Emu);
            }
          return t;
        }
        parseTable(s) {
          var t = { type: r.DomType.Table, children: [] };
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "tr":
                t.children.push(this.parseTableRow(l));
                break;
              case "tblGrid":
                t.columns = this.parseTableColumns(l);
                break;
              case "tblPr":
                this.parseTableProperties(l, t);
            }
          }), t;
        }
        parseTableColumns(s) {
          var t = [];
          return C.foreach(s, (l) => {
            l.localName === "gridCol" && t.push({ width: a.default.lengthAttr(l, "w") });
          }), t;
        }
        parseTableProperties(s, t) {
          switch (t.cssStyle = {}, t.cellStyle = {}, this.parseDefaultProperties(s, t.cssStyle, t.cellStyle, (l) => {
            switch (l.localName) {
              case "tblStyle":
                t.styleName = a.default.attr(l, "val");
                break;
              case "tblLook":
                t.className = n.classNameOftblLook(l);
                break;
              case "tblpPr":
                this.parseTablePosition(l, t);
                break;
              case "tblStyleColBandSize":
                t.colBandSize = a.default.intAttr(l, "val");
                break;
              case "tblStyleRowBandSize":
                t.rowBandSize = a.default.intAttr(l, "val");
                break;
              default:
                return !1;
            }
            return !0;
          }), t.cssStyle["text-align"]) {
            case "center":
              delete t.cssStyle["text-align"], t.cssStyle["margin-left"] = "auto", t.cssStyle["margin-right"] = "auto";
              break;
            case "right":
              delete t.cssStyle["text-align"], t.cssStyle["margin-left"] = "auto";
          }
        }
        parseTablePosition(s, t) {
          var l = a.default.lengthAttr(s, "topFromText"), b = a.default.lengthAttr(s, "bottomFromText"), k = a.default.lengthAttr(s, "rightFromText"), E = a.default.lengthAttr(s, "leftFromText");
          t.cssStyle.float = "left", t.cssStyle["margin-bottom"] = n.addSize(t.cssStyle["margin-bottom"], b), t.cssStyle["margin-left"] = n.addSize(t.cssStyle["margin-left"], E), t.cssStyle["margin-right"] = n.addSize(t.cssStyle["margin-right"], k), t.cssStyle["margin-top"] = n.addSize(t.cssStyle["margin-top"], l);
        }
        parseTableRow(s) {
          var t = { type: r.DomType.Row, children: [] };
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "tc":
                t.children.push(this.parseTableCell(l));
                break;
              case "trPr":
                this.parseTableRowProperties(l, t);
            }
          }), t;
        }
        parseTableRowProperties(s, t) {
          t.cssStyle = this.parseDefaultProperties(s, {}, null, (l) => {
            switch (l.localName) {
              case "cnfStyle":
                t.className = n.classNameOfCnfStyle(l);
                break;
              case "tblHeader":
                t.isHeader = a.default.boolAttr(l, "val");
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseTableCell(s) {
          var t = { type: r.DomType.Cell, children: [] };
          return C.foreach(s, (l) => {
            switch (l.localName) {
              case "tbl":
                t.children.push(this.parseTable(l));
                break;
              case "p":
                t.children.push(this.parseParagraph(l));
                break;
              case "tcPr":
                this.parseTableCellProperties(l, t);
            }
          }), t;
        }
        parseTableCellProperties(s, t) {
          t.cssStyle = this.parseDefaultProperties(s, {}, null, (l) => {
            var b;
            switch (l.localName) {
              case "gridSpan":
                t.span = a.default.intAttr(l, "val", null);
                break;
              case "vMerge":
                t.verticalMerge = (b = a.default.attr(l, "val")) !== null && b !== void 0 ? b : "continue";
                break;
              case "cnfStyle":
                t.className = n.classNameOfCnfStyle(l);
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseDefaultProperties(s, t = null, l = null, b = null) {
          return t = t || {}, C.foreach(s, (k) => {
            if (!(b != null && b(k)))
              switch (k.localName) {
                case "jc":
                  t["text-align"] = n.valueOfJc(k);
                  break;
                case "textAlignment":
                  t["vertical-align"] = n.valueOfTextAlignment(k);
                  break;
                case "color":
                  t.color = C.colorAttr(k, "val", null, e.autos.color);
                  break;
                case "sz":
                  t["font-size"] = t["min-height"] = a.default.lengthAttr(k, "val", d.LengthUsage.FontSize);
                  break;
                case "shd":
                  t["background-color"] = C.colorAttr(k, "fill", null, e.autos.shd);
                  break;
                case "highlight":
                  t["background-color"] = C.colorAttr(k, "val", null, e.autos.highlight);
                  break;
                case "vertAlign":
                  break;
                case "position":
                  t.verticalAlign = a.default.lengthAttr(k, "val", d.LengthUsage.FontSize);
                  break;
                case "tcW":
                  if (this.options.ignoreWidth)
                    break;
                case "tblW":
                  t.width = n.valueOfSize(k, "w");
                  break;
                case "trHeight":
                  this.parseTrHeight(k, t);
                  break;
                case "strike":
                  t["text-decoration"] = a.default.boolAttr(k, "val", !0) ? "line-through" : "none";
                  break;
                case "b":
                  t["font-weight"] = a.default.boolAttr(k, "val", !0) ? "bold" : "normal";
                  break;
                case "i":
                  t["font-style"] = a.default.boolAttr(k, "val", !0) ? "italic" : "normal";
                  break;
                case "caps":
                  t["text-transform"] = a.default.boolAttr(k, "val", !0) ? "uppercase" : "none";
                  break;
                case "smallCaps":
                  t["text-transform"] = a.default.boolAttr(k, "val", !0) ? "lowercase" : "none";
                  break;
                case "u":
                  this.parseUnderline(k, t);
                  break;
                case "ind":
                case "tblInd":
                  this.parseIndentation(k, t);
                  break;
                case "rFonts":
                  this.parseFont(k, t);
                  break;
                case "tblBorders":
                  this.parseBorderProperties(k, l || t);
                  break;
                case "tblCellSpacing":
                  t["border-spacing"] = n.valueOfMargin(k), t["border-collapse"] = "separate";
                  break;
                case "pBdr":
                  this.parseBorderProperties(k, t);
                  break;
                case "bdr":
                  t.border = n.valueOfBorder(k);
                  break;
                case "tcBorders":
                  this.parseBorderProperties(k, t);
                  break;
                case "vanish":
                  a.default.boolAttr(k, "val", !0) && (t.display = "none");
                  break;
                case "kern":
                case "noWrap":
                  break;
                case "tblCellMar":
                case "tcMar":
                  this.parseMarginProperties(k, l || t);
                  break;
                case "tblLayout":
                  t["table-layout"] = n.valueOfTblLayout(k);
                  break;
                case "vAlign":
                  t["vertical-align"] = n.valueOfTextAlignment(k);
                  break;
                case "spacing":
                  s.localName == "pPr" && this.parseSpacing(k, t);
                  break;
                case "wordWrap":
                  a.default.boolAttr(k, "val") && (t["overflow-wrap"] = "break-word");
                  break;
                case "suppressAutoHyphens":
                  t.hyphens = a.default.boolAttr(k, "val", !0) ? "none" : "auto";
                  break;
                case "lang":
                  t.$lang = a.default.attr(k, "val");
                  break;
                case "bCs":
                case "iCs":
                case "szCs":
                case "tabs":
                case "outlineLvl":
                case "contextualSpacing":
                case "tblStyleColBandSize":
                case "tblStyleRowBandSize":
                case "webHidden":
                case "pageBreakBefore":
                case "suppressLineNumbers":
                case "keepLines":
                case "keepNext":
                case "widowControl":
                case "bidi":
                case "rtl":
                case "noProof":
                  break;
                default:
                  this.options.debug && console.warn(`DOCX: Unknown document element: ${s.localName}.${k.localName}`);
              }
          }), t;
        }
        parseUnderline(s, t) {
          var l = a.default.attr(s, "val");
          if (l != null) {
            switch (l) {
              case "dash":
              case "dashDotDotHeavy":
              case "dashDotHeavy":
              case "dashedHeavy":
              case "dashLong":
              case "dashLongHeavy":
              case "dotDash":
              case "dotDotDash":
                t["text-decoration-style"] = "dashed";
                break;
              case "dotted":
              case "dottedHeavy":
                t["text-decoration-style"] = "dotted";
                break;
              case "double":
                t["text-decoration-style"] = "double";
                break;
              case "single":
              case "thick":
              case "words":
                t["text-decoration"] = "underline";
                break;
              case "wave":
              case "wavyDouble":
              case "wavyHeavy":
                t["text-decoration-style"] = "wavy";
                break;
              case "none":
                t["text-decoration"] = "none";
            }
            var b = C.colorAttr(s, "color");
            b && (t["text-decoration-color"] = b);
          }
        }
        parseFont(s, t) {
          var l = [a.default.attr(s, "ascii"), n.themeValue(s, "asciiTheme")].filter((b) => b).join(", ");
          l.length > 0 && (t["font-family"] = l);
        }
        parseIndentation(s, t) {
          var l = a.default.lengthAttr(s, "firstLine"), b = a.default.lengthAttr(s, "hanging"), k = a.default.lengthAttr(s, "left"), E = a.default.lengthAttr(s, "start"), _ = a.default.lengthAttr(s, "right"), T = a.default.lengthAttr(s, "end");
          l && (t["text-indent"] = l), b && (t["text-indent"] = `-${b}`), (k || E) && (t["margin-left"] = k || E), (_ || T) && (t["margin-right"] = _ || T);
        }
        parseSpacing(s, t) {
          var l = a.default.lengthAttr(s, "before"), b = a.default.lengthAttr(s, "after"), k = a.default.intAttr(s, "line", null), E = a.default.attr(s, "lineRule");
          if (l && (t["margin-top"] = l), b && (t["margin-bottom"] = b), k !== null)
            switch (E) {
              case "auto":
                t["line-height"] = `${(k / 240).toFixed(2)}`;
                break;
              case "atLeast":
                t["line-height"] = `calc(100% + ${k / 20}pt)`;
                break;
              default:
                t["line-height"] = t["min-height"] = k / 20 + "pt";
            }
        }
        parseMarginProperties(s, t) {
          C.foreach(s, (l) => {
            switch (l.localName) {
              case "left":
                t["padding-left"] = n.valueOfMargin(l);
                break;
              case "right":
                t["padding-right"] = n.valueOfMargin(l);
                break;
              case "top":
                t["padding-top"] = n.valueOfMargin(l);
                break;
              case "bottom":
                t["padding-bottom"] = n.valueOfMargin(l);
            }
          });
        }
        parseTrHeight(s, t) {
          a.default.attr(s, "hRule"), t.height = a.default.lengthAttr(s, "val");
        }
        parseBorderProperties(s, t) {
          C.foreach(s, (l) => {
            switch (l.localName) {
              case "start":
              case "left":
                t["border-left"] = n.valueOfBorder(l);
                break;
              case "end":
              case "right":
                t["border-right"] = n.valueOfBorder(l);
                break;
              case "top":
                t["border-top"] = n.valueOfBorder(l);
                break;
              case "bottom":
                t["border-bottom"] = n.valueOfBorder(l);
            }
          });
        }
      };
      const w = ["black", "blue", "cyan", "darkBlue", "darkCyan", "darkGray", "darkGreen", "darkMagenta", "darkRed", "darkYellow", "green", "lightGray", "magenta", "none", "red", "white", "yellow"];
      class C {
        static foreach(t, l) {
          for (var b = 0; b < t.childNodes.length; b++) {
            let k = t.childNodes[b];
            k.nodeType == Node.ELEMENT_NODE && l(k);
          }
        }
        static colorAttr(t, l, b = null, k = "black") {
          var E = a.default.attr(t, l);
          if (E)
            return E == "auto" ? k : w.includes(E) ? E : `#${E}`;
          var _ = a.default.attr(t, "themeColor");
          return _ ? `var(--docx-${_}-color)` : b;
        }
        static sizeValue(t, l = d.LengthUsage.Dxa) {
          return (0, d.convertLength)(t.textContent, l);
        }
      }
      class n {
        static themeValue(t, l) {
          var b = a.default.attr(t, l);
          return b ? `var(--docx-${b}-font)` : null;
        }
        static valueOfSize(t, l) {
          var b = d.LengthUsage.Dxa;
          switch (a.default.attr(t, "type")) {
            case "dxa":
              break;
            case "pct":
              b = d.LengthUsage.Percent;
              break;
            case "auto":
              return "auto";
          }
          return a.default.lengthAttr(t, l, b);
        }
        static valueOfMargin(t) {
          return a.default.lengthAttr(t, "w");
        }
        static valueOfBorder(t) {
          if (a.default.attr(t, "val") == "nil")
            return "none";
          var l = C.colorAttr(t, "color");
          return `${a.default.lengthAttr(t, "sz", d.LengthUsage.Border)} solid ${l == "auto" ? e.autos.borderColor : l}`;
        }
        static valueOfTblLayout(t) {
          return a.default.attr(t, "val") == "fixed" ? "fixed" : "auto";
        }
        static classNameOfCnfStyle(t) {
          const l = a.default.attr(t, "val");
          return ["first-row", "last-row", "first-col", "last-col", "odd-col", "even-col", "odd-row", "even-row", "ne-cell", "nw-cell", "se-cell", "sw-cell"].filter((b, k) => l[k] == "1").join(" ");
        }
        static valueOfJc(t) {
          var l = a.default.attr(t, "val");
          switch (l) {
            case "start":
            case "left":
              return "left";
            case "center":
              return "center";
            case "end":
            case "right":
              return "right";
            case "both":
              return "justify";
          }
          return l;
        }
        static valueOfVertAlign(t, l = !1) {
          var b = a.default.attr(t, "val");
          switch (b) {
            case "subscript":
              return "sub";
            case "superscript":
              return l ? "sup" : "super";
          }
          return l ? null : b;
        }
        static valueOfTextAlignment(t) {
          var l = a.default.attr(t, "val");
          switch (l) {
            case "auto":
            case "baseline":
              return "baseline";
            case "top":
              return "top";
            case "center":
              return "middle";
            case "bottom":
              return "bottom";
          }
          return l;
        }
        static addSize(t, l) {
          return t == null ? l : l == null ? t : `calc(${t} + ${l})`;
        }
        static classNameOftblLook(t) {
          const l = a.default.hexAttr(t, "val", 0);
          let b = "";
          return (a.default.boolAttr(t, "firstRow") || 32 & l) && (b += " first-row"), (a.default.boolAttr(t, "lastRow") || 64 & l) && (b += " last-row"), (a.default.boolAttr(t, "firstColumn") || 128 & l) && (b += " first-col"), (a.default.boolAttr(t, "lastColumn") || 256 & l) && (b += " last-col"), (a.default.boolAttr(t, "noHBand") || 512 & l) && (b += " no-hband"), (a.default.boolAttr(t, "noVBand") || 1024 & l) && (b += " no-vband"), b.trim();
        }
      }
    }, 162: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.CorePropsPart = void 0;
      const r = c(530), m = c(614);
      class p extends r.Part {
        parseXml(i) {
          this.props = (0, m.parseCoreProps)(i, this._package.xmlParser);
        }
      }
      e.CorePropsPart = p;
    }, 614: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCoreProps = void 0, e.parseCoreProps = function(c, r) {
        const m = {};
        for (let p of r.elements(c))
          switch (p.localName) {
            case "title":
              m.title = p.textContent;
              break;
            case "description":
              m.description = p.textContent;
              break;
            case "subject":
              m.subject = p.textContent;
              break;
            case "creator":
              m.creator = p.textContent;
              break;
            case "keywords":
              m.keywords = p.textContent;
              break;
            case "language":
              m.language = p.textContent;
              break;
            case "lastModifiedBy":
              m.lastModifiedBy = p.textContent;
              break;
            case "revision":
              p.textContent && (m.revision = parseInt(p.textContent));
          }
        return m;
      };
    }, 177: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.CustomPropsPart = void 0;
      const r = c(530), m = c(821);
      class p extends r.Part {
        parseXml(i) {
          this.props = (0, m.parseCustomProps)(i, this._package.xmlParser);
        }
      }
      e.CustomPropsPart = p;
    }, 821: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCustomProps = void 0, e.parseCustomProps = function(c, r) {
        return r.elements(c, "property").map((m) => {
          const p = m.firstChild;
          return { formatId: r.attr(m, "fmtid"), name: r.attr(m, "name"), type: p.nodeName, value: p.textContent };
        });
      };
    }, 665: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.ExtendedPropsPart = void 0;
      const r = c(530), m = c(668);
      class p extends r.Part {
        parseXml(i) {
          this.props = (0, m.parseExtendedProps)(i, this._package.xmlParser);
        }
      }
      e.ExtendedPropsPart = p;
    }, 668: (v, e) => {
      function c(r) {
        if (r !== void 0)
          return parseInt(r);
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseExtendedProps = void 0, e.parseExtendedProps = function(r, m) {
        const p = {};
        for (let a of m.elements(r))
          switch (a.localName) {
            case "Template":
              p.template = a.textContent;
              break;
            case "Pages":
              p.pages = c(a.textContent);
              break;
            case "Words":
              p.words = c(a.textContent);
              break;
            case "Characters":
              p.characters = c(a.textContent);
              break;
            case "Application":
              p.application = a.textContent;
              break;
            case "Lines":
              p.lines = c(a.textContent);
              break;
            case "Paragraphs":
              p.paragraphs = c(a.textContent);
              break;
            case "Company":
              p.company = a.textContent;
              break;
            case "AppVersion":
              p.appVersion = a.textContent;
          }
        return p;
      };
    }, 172: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseBookmarkEnd = e.parseBookmarkStart = void 0;
      const r = c(120);
      e.parseBookmarkStart = function(m, p) {
        return { type: r.DomType.BookmarkStart, id: p.attr(m, "id"), name: p.attr(m, "name"), colFirst: p.intAttr(m, "colFirst"), colLast: p.intAttr(m, "colLast") };
      }, e.parseBookmarkEnd = function(m, p) {
        return { type: r.DomType.BookmarkEnd, id: p.attr(m, "id") };
      };
    }, 191: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseBorders = e.parseBorder = void 0;
      const r = c(149);
      function m(p, a) {
        return { type: a.attr(p, "val"), color: a.attr(p, "color"), size: a.lengthAttr(p, "sz", r.LengthUsage.Border), offset: a.lengthAttr(p, "space", r.LengthUsage.Point), frame: a.boolAttr(p, "frame"), shadow: a.boolAttr(p, "shadow") };
      }
      e.parseBorder = m, e.parseBorders = function(p, a) {
        var i = {};
        for (let y of a.elements(p))
          switch (y.localName) {
            case "left":
              i.left = m(y, a);
              break;
            case "top":
              i.top = m(y, a);
              break;
            case "right":
              i.right = m(y, a);
              break;
            case "bottom":
              i.bottom = m(y, a);
          }
        return i;
      };
    }, 149: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCommonProperty = e.convertPercentage = e.convertBoolean = e.convertLength = e.LengthUsage = e.ns = void 0, e.ns = { wordml: "http://schemas.openxmlformats.org/wordprocessingml/2006/main", drawingml: "http://schemas.openxmlformats.org/drawingml/2006/main", picture: "http://schemas.openxmlformats.org/drawingml/2006/picture", compatibility: "http://schemas.openxmlformats.org/markup-compatibility/2006", math: "http://schemas.openxmlformats.org/officeDocument/2006/math" }, e.LengthUsage = { Dxa: { mul: 0.05, unit: "pt" }, Emu: { mul: 7874015748031496e-20, unit: "pt" }, FontSize: { mul: 0.5, unit: "pt" }, Border: { mul: 0.125, unit: "pt" }, Point: { mul: 1, unit: "pt" }, Percent: { mul: 0.02, unit: "%" }, LineHeight: { mul: 0.004166666666666667, unit: "" }, VmlEmu: { mul: 7874015748031496e-20, unit: "" } }, e.convertLength = function(c, r = e.LengthUsage.Dxa) {
        return c == null || /.+(p[xt]|[%])$/.test(c) ? c : `${(parseInt(c) * r.mul).toFixed(2)}${r.unit}`;
      }, e.convertBoolean = function(c, r = !1) {
        switch (c) {
          case "1":
          case "on":
          case "true":
            return !0;
          case "0":
          case "off":
          case "false":
            return !1;
          default:
            return r;
        }
      }, e.convertPercentage = function(c) {
        return c ? parseInt(c) / 100 : null;
      }, e.parseCommonProperty = function(c, r, m) {
        if (c.namespaceURI != e.ns.wordml)
          return !1;
        switch (c.localName) {
          case "color":
            r.color = m.attr(c, "val");
            break;
          case "sz":
            r.fontSize = m.lengthAttr(c, "val", e.LengthUsage.FontSize);
            break;
          default:
            return !1;
        }
        return !0;
      };
    }, 448: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.DocumentPart = void 0;
      const r = c(530);
      class m extends r.Part {
        constructor(a, i, y) {
          super(a, i), this._documentParser = y;
        }
        parseXml(a) {
          this.body = this._documentParser.parseDocumentFile(a);
        }
      }
      e.DocumentPart = m;
    }, 120: (v, e) => {
      var c;
      Object.defineProperty(e, "__esModule", { value: !0 }), e.OpenXmlElementBase = e.DomType = void 0, function(r) {
        r.Document = "document", r.Paragraph = "paragraph", r.Run = "run", r.Break = "break", r.NoBreakHyphen = "noBreakHyphen", r.Table = "table", r.Row = "row", r.Cell = "cell", r.Hyperlink = "hyperlink", r.Drawing = "drawing", r.Image = "image", r.Text = "text", r.Tab = "tab", r.Symbol = "symbol", r.BookmarkStart = "bookmarkStart", r.BookmarkEnd = "bookmarkEnd", r.Footer = "footer", r.Header = "header", r.FootnoteReference = "footnoteReference", r.EndnoteReference = "endnoteReference", r.Footnote = "footnote", r.Endnote = "endnote", r.SimpleField = "simpleField", r.ComplexField = "complexField", r.Instruction = "instruction", r.VmlPicture = "vmlPicture", r.MmlMath = "mmlMath", r.MmlMathParagraph = "mmlMathParagraph", r.MmlFraction = "mmlFraction", r.MmlFunction = "mmlFunction", r.MmlFunctionName = "mmlFunctionName", r.MmlNumerator = "mmlNumerator", r.MmlDenominator = "mmlDenominator", r.MmlRadical = "mmlRadical", r.MmlBase = "mmlBase", r.MmlDegree = "mmlDegree", r.MmlSuperscript = "mmlSuperscript", r.MmlSubscript = "mmlSubscript", r.MmlPreSubSuper = "mmlPreSubSuper", r.MmlSubArgument = "mmlSubArgument", r.MmlSuperArgument = "mmlSuperArgument", r.MmlNary = "mmlNary", r.MmlDelimiter = "mmlDelimiter", r.MmlRun = "mmlRun", r.MmlEquationArray = "mmlEquationArray", r.MmlLimit = "mmlLimit", r.MmlLimitLower = "mmlLimitLower", r.MmlMatrix = "mmlMatrix", r.MmlMatrixRow = "mmlMatrixRow", r.MmlBox = "mmlBox", r.MmlBar = "mmlBar", r.MmlGroupChar = "mmlGroupChar", r.VmlElement = "vmlElement", r.Inserted = "inserted", r.Deleted = "deleted", r.DeletedText = "deletedText";
      }(c || (e.DomType = c = {})), e.OpenXmlElementBase = class {
        constructor() {
          this.children = [], this.cssStyle = {};
        }
      };
    }, 931: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseLineSpacing = void 0, e.parseLineSpacing = function(c, r) {
        return { before: r.lengthAttr(c, "before"), after: r.lengthAttr(c, "after"), line: r.intAttr(c, "line"), lineRule: r.attr(c, "lineRule") };
      };
    }, 109: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNumbering = e.parseTabs = e.parseParagraphProperty = e.parseParagraphProperties = void 0;
      const r = c(149), m = c(59), p = c(931), a = c(488);
      function i(h, f, g) {
        if (h.namespaceURI != r.ns.wordml)
          return !1;
        if ((0, r.parseCommonProperty)(h, f, g))
          return !0;
        switch (h.localName) {
          case "tabs":
            f.tabs = y(h, g);
            break;
          case "sectPr":
            f.sectionProps = (0, m.parseSectionProperties)(h, g);
            break;
          case "numPr":
            f.numbering = d(h, g);
            break;
          case "spacing":
            return f.lineSpacing = (0, p.parseLineSpacing)(h, g), !1;
          case "textAlignment":
            return f.textAlignment = g.attr(h, "val"), !1;
          case "keepNext":
            f.keepLines = g.boolAttr(h, "val", !0);
            break;
          case "keepNext":
            f.keepNext = g.boolAttr(h, "val", !0);
            break;
          case "pageBreakBefore":
            f.pageBreakBefore = g.boolAttr(h, "val", !0);
            break;
          case "outlineLvl":
            f.outlineLevel = g.intAttr(h, "val");
            break;
          case "pStyle":
            f.styleName = g.attr(h, "val");
            break;
          case "rPr":
            f.runProps = (0, a.parseRunProperties)(h, g);
            break;
          default:
            return !1;
        }
        return !0;
      }
      function y(h, f) {
        return f.elements(h, "tab").map((g) => ({ position: f.lengthAttr(g, "pos"), leader: f.attr(g, "leader"), style: f.attr(g, "val") }));
      }
      function d(h, f) {
        var g = {};
        for (let w of f.elements(h))
          switch (w.localName) {
            case "numId":
              g.id = f.attr(w, "val");
              break;
            case "ilvl":
              g.level = f.intAttr(w, "val");
          }
        return g;
      }
      e.parseParagraphProperties = function(h, f) {
        let g = {};
        for (let w of f.elements(h))
          i(w, g, f);
        return g;
      }, e.parseParagraphProperty = i, e.parseTabs = y, e.parseNumbering = d;
    }, 488: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseRunProperty = e.parseRunProperties = void 0;
      const r = c(149);
      function m(p, a, i) {
        return !!(0, r.parseCommonProperty)(p, a, i);
      }
      e.parseRunProperties = function(p, a) {
        let i = {};
        for (let y of a.elements(p))
          m(y, i, a);
        return i;
      }, e.parseRunProperty = m;
    }, 59: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseSectionProperties = e.SectionType = void 0;
      const r = c(472), m = c(191);
      var p;
      function a(d, h) {
        return { numberOfColumns: h.intAttr(d, "num"), space: h.lengthAttr(d, "space"), separator: h.boolAttr(d, "sep"), equalWidth: h.boolAttr(d, "equalWidth", !0), columns: h.elements(d, "col").map((f) => ({ width: h.lengthAttr(f, "w"), space: h.lengthAttr(f, "space") })) };
      }
      function i(d, h) {
        return { chapSep: h.attr(d, "chapSep"), chapStyle: h.attr(d, "chapStyle"), format: h.attr(d, "fmt"), start: h.intAttr(d, "start") };
      }
      function y(d, h) {
        return { id: h.attr(d, "id"), type: h.attr(d, "type") };
      }
      (function(d) {
        d.Continuous = "continuous", d.NextPage = "nextPage", d.NextColumn = "nextColumn", d.EvenPage = "evenPage", d.OddPage = "oddPage";
      })(p || (e.SectionType = p = {})), e.parseSectionProperties = function(d, h = r.default) {
        var f, g, w = {};
        for (let C of h.elements(d))
          switch (C.localName) {
            case "pgSz":
              w.pageSize = { width: h.lengthAttr(C, "w"), height: h.lengthAttr(C, "h"), orientation: h.attr(C, "orient") };
              break;
            case "type":
              w.type = h.attr(C, "val");
              break;
            case "pgMar":
              w.pageMargins = { left: h.lengthAttr(C, "left"), right: h.lengthAttr(C, "right"), top: h.lengthAttr(C, "top"), bottom: h.lengthAttr(C, "bottom"), header: h.lengthAttr(C, "header"), footer: h.lengthAttr(C, "footer"), gutter: h.lengthAttr(C, "gutter") };
              break;
            case "cols":
              w.columns = a(C, h);
              break;
            case "headerReference":
              ((f = w.headerRefs) !== null && f !== void 0 ? f : w.headerRefs = []).push(y(C, h));
              break;
            case "footerReference":
              ((g = w.footerRefs) !== null && g !== void 0 ? g : w.footerRefs = []).push(y(C, h));
              break;
            case "titlePg":
              w.titlePage = h.boolAttr(C, "val", !0);
              break;
            case "pgBorders":
              w.pageBorders = (0, m.parseBorders)(C, h);
              break;
            case "pgNumType":
              w.pageNumber = i(C, h);
          }
        return w;
      };
    }, 667: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.renderAsync = e.praseAsync = e.defaultOptions = void 0;
      const r = c(213), m = c(168), p = c(932);
      e.defaultOptions = { ignoreHeight: !1, ignoreWidth: !1, ignoreFonts: !1, breakPages: !0, debug: !1, experimental: !1, className: "docx", inWrapper: !0, trimXmlDeclaration: !0, ignoreLastRenderedPageBreak: !0, renderHeaders: !0, renderFooters: !0, renderFootnotes: !0, renderEndnotes: !0, useBase64URL: !1, useMathMLPolyfill: !1, renderChanges: !1 }, e.praseAsync = function(a, i = null) {
        const y = Object.assign(Object.assign({}, e.defaultOptions), i);
        return r.WordDocument.load(a, new m.DocumentParser(y), y);
      }, e.renderAsync = function(a, i, y = null, d = null) {
        return ue(this, null, function* () {
          const h = Object.assign(Object.assign({}, e.defaultOptions), d), f = new p.HtmlRenderer(window.document), g = yield r.WordDocument.load(a, new m.DocumentParser(h), h);
          return f.render(g, i, y, h), g;
        });
      };
    }, 380: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.FontTablePart = void 0;
      const r = c(530), m = c(512);
      class p extends r.Part {
        parseXml(i) {
          this.fonts = (0, m.parseFonts)(i, this._package.xmlParser);
        }
      }
      e.FontTablePart = p;
    }, 512: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseEmbedFontRef = e.parseFont = e.parseFonts = void 0;
      const c = { embedRegular: "regular", embedBold: "bold", embedItalic: "italic", embedBoldItalic: "boldItalic" };
      function r(p, a) {
        let i = { name: a.attr(p, "name"), embedFontRefs: [] };
        for (let y of a.elements(p))
          switch (y.localName) {
            case "family":
              i.family = a.attr(y, "val");
              break;
            case "altName":
              i.altName = a.attr(y, "val");
              break;
            case "embedRegular":
            case "embedBold":
            case "embedItalic":
            case "embedBoldItalic":
              i.embedFontRefs.push(m(y, a));
          }
        return i;
      }
      function m(p, a) {
        return { id: a.attr(p, "id"), key: a.attr(p, "fontKey"), type: c[p.localName] };
      }
      e.parseFonts = function(p, a) {
        return a.elements(p).map((i) => r(i, a));
      }, e.parseFont = r, e.parseEmbedFontRef = m;
    }, 984: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.WmlFooter = e.WmlHeader = void 0;
      const r = c(120);
      class m extends r.OpenXmlElementBase {
        constructor() {
          super(...arguments), this.type = r.DomType.Header;
        }
      }
      e.WmlHeader = m;
      class p extends r.OpenXmlElementBase {
        constructor() {
          super(...arguments), this.type = r.DomType.Footer;
        }
      }
      e.WmlFooter = p;
    }, 985: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.FooterPart = e.HeaderPart = e.BaseHeaderFooterPart = void 0;
      const r = c(530), m = c(984);
      class p extends r.Part {
        constructor(i, y, d) {
          super(i, y), this._documentParser = d;
        }
        parseXml(i) {
          this.rootElement = this.createRootElement(), this.rootElement.children = this._documentParser.parseBodyElements(i);
        }
      }
      e.BaseHeaderFooterPart = p, e.HeaderPart = class extends p {
        createRootElement() {
          return new m.WmlHeader();
        }
      }, e.FooterPart = class extends p {
        createRootElement() {
          return new m.WmlFooter();
        }
      };
    }, 932: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.HtmlRenderer = void 0;
      const r = c(120), m = c(593), p = c(630), a = c(438), i = "http://www.w3.org/1998/Math/MathML";
      function y(n, s, t) {
        return h(void 0, n, s, t);
      }
      function d(n, s, t) {
        return h("http://www.w3.org/2000/svg", n, s, t);
      }
      function h(n, s, t, l) {
        var b = n ? document.createElementNS(n, s) : document.createElement(s);
        return Object.assign(b, t), l && g(b, l), b;
      }
      function f(n) {
        n.innerHTML = "";
      }
      function g(n, s) {
        s.forEach((t) => n.appendChild((0, m.isString)(t) ? document.createTextNode(t) : t));
      }
      function w(n) {
        return y("style", { innerHTML: n });
      }
      function C(n, s) {
        n.appendChild(document.createComment(s));
      }
      e.HtmlRenderer = class {
        constructor(n) {
          this.htmlDocument = n, this.className = "docx", this.styleMap = {}, this.currentPart = null, this.tableVerticalMerges = [], this.currentVerticalMerge = null, this.tableCellPositions = [], this.currentCellPosition = null, this.footnoteMap = {}, this.endnoteMap = {}, this.currentEndnoteIds = [], this.usedHederFooterParts = [], this.currentTabs = [], this.tabsTimeout = 0, this.createElement = y;
        }
        render(n, s, t = null, l) {
          var b;
          this.document = n, this.options = l, this.className = l.className, this.rootSelector = l.inWrapper ? `.${this.className}-wrapper` : ":root", this.styleMap = null, f(t = t || s), f(s), C(t, "docxjs library predefined styles"), t.appendChild(this.renderDefaultStyle()), !window.MathMLElement && l.useMathMLPolyfill && (C(t, "docxjs mathml polyfill styles"), t.appendChild(w(a.default))), n.themePart && (C(t, "docxjs document theme values"), this.renderTheme(n.themePart, t)), n.stylesPart != null && (this.styleMap = this.processStyles(n.stylesPart.styles), C(t, "docxjs document styles"), t.appendChild(this.renderStyles(n.stylesPart.styles))), n.numberingPart && (this.prodessNumberings(n.numberingPart.domNumberings), C(t, "docxjs document numbering styles"), t.appendChild(this.renderNumbering(n.numberingPart.domNumberings, t))), n.footnotesPart && (this.footnoteMap = (0, m.keyBy)(n.footnotesPart.notes, (E) => E.id)), n.endnotesPart && (this.endnoteMap = (0, m.keyBy)(n.endnotesPart.notes, (E) => E.id)), n.settingsPart && (this.defaultTabSize = (b = n.settingsPart.settings) === null || b === void 0 ? void 0 : b.defaultTabStop), !l.ignoreFonts && n.fontTablePart && this.renderFontTable(n.fontTablePart, t);
          var k = this.renderSections(n.documentPart.body);
          this.options.inWrapper ? s.appendChild(this.renderWrapper(k)) : g(s, k), this.refreshTabStops();
        }
        renderTheme(n, s) {
          var t, l;
          const b = {}, k = (t = n.theme) === null || t === void 0 ? void 0 : t.fontScheme;
          k && (k.majorFont && (b["--docx-majorHAnsi-font"] = k.majorFont.latinTypeface), k.minorFont && (b["--docx-minorHAnsi-font"] = k.minorFont.latinTypeface));
          const E = (l = n.theme) === null || l === void 0 ? void 0 : l.colorScheme;
          if (E)
            for (let [T, o] of Object.entries(E.colors))
              b[`--docx-${T}-color`] = `#${o}`;
          const _ = this.styleToString(`.${this.className}`, b);
          s.appendChild(w(_));
        }
        renderFontTable(n, s) {
          for (let t of n.fonts)
            for (let l of t.embedFontRefs)
              this.document.loadFont(l.id, l.key).then((b) => {
                const k = { "font-family": t.name, src: `url(${b})` };
                l.type != "bold" && l.type != "boldItalic" || (k["font-weight"] = "bold"), l.type != "italic" && l.type != "boldItalic" || (k["font-style"] = "italic"), C(s, `docxjs ${t.name} font`);
                const E = this.styleToString("@font-face", k);
                s.appendChild(w(E)), this.refreshTabStops();
              });
        }
        processStyleName(n) {
          return n ? `${this.className}_${(0, m.escapeClassName)(n)}` : this.className;
        }
        processStyles(n) {
          const s = (0, m.keyBy)(n.filter((l) => l.id != null), (l) => l.id);
          for (const l of n.filter((b) => b.basedOn)) {
            var t = s[l.basedOn];
            if (t) {
              l.paragraphProps = (0, m.mergeDeep)(l.paragraphProps, t.paragraphProps), l.runProps = (0, m.mergeDeep)(l.runProps, t.runProps);
              for (const b of t.styles) {
                const k = l.styles.find((E) => E.target == b.target);
                k ? this.copyStyleProperties(b.values, k.values) : l.styles.push(Object.assign(Object.assign({}, b), { values: Object.assign({}, b.values) }));
              }
            } else
              this.options.debug && console.warn(`Can't find base style ${l.basedOn}`);
          }
          for (let l of n)
            l.cssName = this.processStyleName(l.id);
          return s;
        }
        prodessNumberings(n) {
          var s;
          for (let t of n.filter((l) => l.pStyleName)) {
            const l = this.findStyle(t.pStyleName);
            !((s = l == null ? void 0 : l.paragraphProps) === null || s === void 0) && s.numbering && (l.paragraphProps.numbering.level = t.level);
          }
        }
        processElement(n) {
          if (n.children)
            for (var s of n.children)
              s.parent = n, s.type == r.DomType.Table ? this.processTable(s) : this.processElement(s);
        }
        processTable(n) {
          for (var s of n.children)
            for (var t of s.children)
              t.cssStyle = this.copyStyleProperties(n.cellStyle, t.cssStyle, ["border-left", "border-right", "border-top", "border-bottom", "padding-left", "padding-right", "padding-top", "padding-bottom"]), this.processElement(t);
        }
        copyStyleProperties(n, s, t = null) {
          if (!n)
            return s;
          for (var l of (s == null && (s = {}), t == null && (t = Object.getOwnPropertyNames(n)), t))
            n.hasOwnProperty(l) && !s.hasOwnProperty(l) && (s[l] = n[l]);
          return s;
        }
        createSection(n, s) {
          var t = this.createElement("section", { className: n });
          return s && (s.pageMargins && (t.style.paddingLeft = s.pageMargins.left, t.style.paddingRight = s.pageMargins.right, t.style.paddingTop = s.pageMargins.top, t.style.paddingBottom = s.pageMargins.bottom), s.pageSize && (this.options.ignoreWidth || (t.style.width = s.pageSize.width), this.options.ignoreHeight || (t.style.minHeight = s.pageSize.height)), s.columns && s.columns.numberOfColumns && (t.style.columnCount = `${s.columns.numberOfColumns}`, t.style.columnGap = s.columns.space, s.columns.separator && (t.style.columnRule = "1px solid black"))), t;
        }
        renderSections(n) {
          const s = [];
          this.processElement(n);
          const t = this.splitBySection(n.children);
          let l = null;
          for (let k = 0, E = t.length; k < E; k++) {
            this.currentFootnoteIds = [];
            const _ = t[k], T = _.sectProps || n.props, o = this.createSection(this.className, T);
            this.renderStyleValues(n.cssStyle, o), this.options.renderHeaders && this.renderHeaderFooter(T.headerRefs, T, s.length, l != T, o);
            var b = this.createElement("article");
            this.renderElements(_.elements, b), o.appendChild(b), this.options.renderFootnotes && this.renderNotes(this.currentFootnoteIds, this.footnoteMap, o), this.options.renderEndnotes && k == E - 1 && this.renderNotes(this.currentEndnoteIds, this.endnoteMap, o), this.options.renderFooters && this.renderHeaderFooter(T.footerRefs, T, s.length, l != T, o), s.push(o), l = T;
          }
          return s;
        }
        renderHeaderFooter(n, s, t, l, b) {
          var k, E;
          if (n) {
            var _ = (E = (k = s.titlePage && l ? n.find((o) => o.type == "first") : null) !== null && k !== void 0 ? k : t % 2 == 1 ? n.find((o) => o.type == "even") : null) !== null && E !== void 0 ? E : n.find((o) => o.type == "default"), T = _ && this.document.findPartByRelId(_.id, this.document.documentPart);
            T && (this.currentPart = T, this.usedHederFooterParts.includes(T.path) || (this.processElement(T.rootElement), this.usedHederFooterParts.push(T.path)), this.renderElements([T.rootElement], b), this.currentPart = null);
          }
        }
        isPageBreakElement(n) {
          return n.type == r.DomType.Break && (n.break == "lastRenderedPageBreak" ? !this.options.ignoreLastRenderedPageBreak : n.break == "page");
        }
        splitBySection(n) {
          var s, t = { sectProps: null, elements: [] }, l = [t];
          for (let R of n) {
            if (R.type == r.DomType.Paragraph) {
              const V = this.findStyle(R.styleName);
              !((s = V == null ? void 0 : V.paragraphProps) === null || s === void 0) && s.pageBreakBefore && (t.sectProps = b, t = { sectProps: null, elements: [] }, l.push(t));
            }
            if (t.elements.push(R), R.type == r.DomType.Paragraph) {
              const V = R;
              var b = V.sectionProps, k = -1, E = -1;
              if (this.options.breakPages && V.children && (k = V.children.findIndex((L) => {
                var K, W;
                return (E = (W = (K = L.children) === null || K === void 0 ? void 0 : K.findIndex(this.isPageBreakElement.bind(this))) !== null && W !== void 0 ? W : -1) != -1;
              })), (b || k != -1) && (t.sectProps = b, t = { sectProps: null, elements: [] }, l.push(t)), k != -1) {
                let L = V.children[k], K = E < L.children.length - 1;
                if (k < V.children.length - 1 || K) {
                  var _ = R.children, T = Object.assign(Object.assign({}, R), { children: _.slice(k) });
                  if (R.children = _.slice(0, k), t.elements.push(T), K) {
                    let W = L.children, Q = Object.assign(Object.assign({}, L), { children: W.slice(0, E) });
                    R.children.push(Q), L.children = W.slice(E);
                  }
                }
              }
            }
          }
          let o = null;
          for (let R = l.length - 1; R >= 0; R--)
            l[R].sectProps == null ? l[R].sectProps = o : o = l[R].sectProps;
          return l;
        }
        renderWrapper(n) {
          return this.createElement("div", { className: `${this.className}-wrapper` }, n);
        }
        renderDefaultStyle() {
          var n = this.className;
          return w(`
.${n}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } 
.${n}-wrapper>section.${n} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }
.${n} { color: black; hyphens: auto; }
section.${n} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }
section.${n}>article { margin-bottom: auto; z-index: 1; }
section.${n}>footer { z-index: 1; }
.${n} table { border-collapse: collapse; }
.${n} table td, .${n} table th { vertical-align: top; }
.${n} p { margin: 0pt; min-height: 1em; }
.${n} span { white-space: pre-wrap; overflow-wrap: break-word; }
.${n} a { color: inherit; text-decoration: inherit; }
`);
        }
        renderNumbering(n, s) {
          var t = "", l = [];
          for (var b of n) {
            var k = `p.${this.numberingClass(b.id, b.level)}`, E = "none";
            if (b.bullet) {
              let _ = `--${this.className}-${b.bullet.src}`.toLowerCase();
              t += this.styleToString(`${k}:before`, { content: "' '", display: "inline-block", background: `var(${_})` }, b.bullet.style), this.document.loadNumberingImage(b.bullet.src).then((T) => {
                var o = `${this.rootSelector} { ${_}: url(${T}) }`;
                s.appendChild(w(o));
              });
            } else if (b.levelText) {
              let _ = this.numberingCounter(b.id, b.level);
              const T = _ + " " + (b.start - 1);
              b.level > 0 && (t += this.styleToString(`p.${this.numberingClass(b.id, b.level - 1)}`, { "counter-reset": T })), l.push(T), t += this.styleToString(`${k}:before`, Object.assign({ content: this.levelTextToContent(b.levelText, b.suff, b.id, this.numFormatToCssValue(b.format)), "counter-increment": _ }, b.rStyle));
            } else
              E = this.numFormatToCssValue(b.format);
            t += this.styleToString(k, Object.assign({ display: "list-item", "list-style-position": "inside", "list-style-type": E }, b.pStyle));
          }
          return l.length > 0 && (t += this.styleToString(this.rootSelector, { "counter-reset": l.join(" ") })), w(t);
        }
        renderStyles(n) {
          var s, t = "";
          const l = this.styleMap, b = (0, m.keyBy)(n.filter((T) => T.isDefault), (T) => T.target);
          for (const T of n) {
            var k = T.styles;
            if (T.linked) {
              var E = T.linked && l[T.linked];
              E ? k = k.concat(E.styles) : this.options.debug && console.warn(`Can't find linked style ${T.linked}`);
            }
            for (const o of k) {
              var _ = `${(s = T.target) !== null && s !== void 0 ? s : ""}.${T.cssName}`;
              T.target != o.target && (_ += ` ${o.target}`), b[T.target] == T && (_ = `.${this.className} ${T.target}, ` + _), t += this.styleToString(_, o.values);
            }
          }
          return w(t);
        }
        renderNotes(n, s, t) {
          var l = n.map((k) => s[k]).filter((k) => k);
          if (l.length > 0) {
            var b = this.createElement("ol", null, this.renderElements(l));
            t.appendChild(b);
          }
        }
        renderElement(n) {
          switch (n.type) {
            case r.DomType.Paragraph:
              return this.renderParagraph(n);
            case r.DomType.BookmarkStart:
              return this.renderBookmarkStart(n);
            case r.DomType.BookmarkEnd:
              return null;
            case r.DomType.Run:
              return this.renderRun(n);
            case r.DomType.Table:
              return this.renderTable(n);
            case r.DomType.Row:
              return this.renderTableRow(n);
            case r.DomType.Cell:
              return this.renderTableCell(n);
            case r.DomType.Hyperlink:
              return this.renderHyperlink(n);
            case r.DomType.Drawing:
              return this.renderDrawing(n);
            case r.DomType.Image:
              return this.renderImage(n);
            case r.DomType.Text:
            case r.DomType.Text:
              return this.renderText(n);
            case r.DomType.DeletedText:
              return this.renderDeletedText(n);
            case r.DomType.Tab:
              return this.renderTab(n);
            case r.DomType.Symbol:
              return this.renderSymbol(n);
            case r.DomType.Break:
              return this.renderBreak(n);
            case r.DomType.Footer:
              return this.renderContainer(n, "footer");
            case r.DomType.Header:
              return this.renderContainer(n, "header");
            case r.DomType.Footnote:
            case r.DomType.Endnote:
              return this.renderContainer(n, "li");
            case r.DomType.FootnoteReference:
              return this.renderFootnoteReference(n);
            case r.DomType.EndnoteReference:
              return this.renderEndnoteReference(n);
            case r.DomType.NoBreakHyphen:
              return this.createElement("wbr");
            case r.DomType.VmlPicture:
              return this.renderVmlPicture(n);
            case r.DomType.VmlElement:
              return this.renderVmlElement(n);
            case r.DomType.MmlMath:
              return this.renderContainerNS(n, i, "math", { xmlns: i });
            case r.DomType.MmlMathParagraph:
              return this.renderContainer(n, "span");
            case r.DomType.MmlFraction:
              return this.renderContainerNS(n, i, "mfrac");
            case r.DomType.MmlBase:
              return this.renderContainerNS(n, i, n.parent.type == r.DomType.MmlMatrixRow ? "mtd" : "mrow");
            case r.DomType.MmlNumerator:
            case r.DomType.MmlDenominator:
            case r.DomType.MmlFunction:
            case r.DomType.MmlLimit:
            case r.DomType.MmlBox:
              return this.renderContainerNS(n, i, "mrow");
            case r.DomType.MmlGroupChar:
              return this.renderMmlGroupChar(n);
            case r.DomType.MmlLimitLower:
              return this.renderContainerNS(n, i, "munder");
            case r.DomType.MmlMatrix:
              return this.renderContainerNS(n, i, "mtable");
            case r.DomType.MmlMatrixRow:
              return this.renderContainerNS(n, i, "mtr");
            case r.DomType.MmlRadical:
              return this.renderMmlRadical(n);
            case r.DomType.MmlSuperscript:
              return this.renderContainerNS(n, i, "msup");
            case r.DomType.MmlSubscript:
              return this.renderContainerNS(n, i, "msub");
            case r.DomType.MmlDegree:
            case r.DomType.MmlSuperArgument:
            case r.DomType.MmlSubArgument:
              return this.renderContainerNS(n, i, "mn");
            case r.DomType.MmlFunctionName:
              return this.renderContainerNS(n, i, "ms");
            case r.DomType.MmlDelimiter:
              return this.renderMmlDelimiter(n);
            case r.DomType.MmlRun:
              return this.renderMmlRun(n);
            case r.DomType.MmlNary:
              return this.renderMmlNary(n);
            case r.DomType.MmlPreSubSuper:
              return this.renderMmlPreSubSuper(n);
            case r.DomType.MmlBar:
              return this.renderMmlBar(n);
            case r.DomType.MmlEquationArray:
              return this.renderMllList(n);
            case r.DomType.Inserted:
              return this.renderInserted(n);
            case r.DomType.Deleted:
              return this.renderDeleted(n);
          }
          return null;
        }
        renderChildren(n, s) {
          return this.renderElements(n.children, s);
        }
        renderElements(n, s) {
          if (n == null)
            return null;
          var t = n.flatMap((l) => this.renderElement(l)).filter((l) => l != null);
          return s && g(s, t), t;
        }
        renderContainer(n, s, t) {
          return this.createElement(s, t, this.renderChildren(n));
        }
        renderContainerNS(n, s, t, l) {
          return h(s, t, l, this.renderChildren(n));
        }
        renderParagraph(n) {
          var s, t, l, b, k = this.createElement("p");
          const E = this.findStyle(n.styleName);
          (s = n.tabs) !== null && s !== void 0 || (n.tabs = (t = E == null ? void 0 : E.paragraphProps) === null || t === void 0 ? void 0 : t.tabs), this.renderClass(n, k), this.renderChildren(n, k), this.renderStyleValues(n.cssStyle, k), this.renderCommonProperties(k.style, n);
          const _ = (l = n.numbering) !== null && l !== void 0 ? l : (b = E == null ? void 0 : E.paragraphProps) === null || b === void 0 ? void 0 : b.numbering;
          return _ && k.classList.add(this.numberingClass(_.id, _.level)), k;
        }
        renderRunProperties(n, s) {
          this.renderCommonProperties(n, s);
        }
        renderCommonProperties(n, s) {
          s != null && (s.color && (n.color = s.color), s.fontSize && (n["font-size"] = s.fontSize));
        }
        renderHyperlink(n) {
          var s = this.createElement("a");
          if (this.renderChildren(n, s), this.renderStyleValues(n.cssStyle, s), n.href)
            s.href = n.href;
          else if (n.id) {
            const t = this.document.documentPart.rels.find((l) => l.id == n.id && l.targetMode === "External");
            s.href = t == null ? void 0 : t.target;
          }
          return s;
        }
        renderDrawing(n) {
          var s = this.createElement("div");
          return s.style.display = "inline-block", s.style.position = "relative", s.style.textIndent = "0px", this.renderChildren(n, s), this.renderStyleValues(n.cssStyle, s), s;
        }
        renderImage(n) {
          let s = this.createElement("img");
          return this.renderStyleValues(n.cssStyle, s), this.document && this.document.loadDocumentImage(n.src, this.currentPart).then((t) => {
            s.src = t;
          }), s;
        }
        renderText(n) {
          return this.htmlDocument.createTextNode(n.text);
        }
        renderDeletedText(n) {
          return this.options.renderEndnotes ? this.htmlDocument.createTextNode(n.text) : null;
        }
        renderBreak(n) {
          return n.break == "textWrapping" ? this.createElement("br") : null;
        }
        renderInserted(n) {
          return this.options.renderChanges ? this.renderContainer(n, "ins") : this.renderChildren(n);
        }
        renderDeleted(n) {
          return this.options.renderChanges ? this.renderContainer(n, "del") : null;
        }
        renderSymbol(n) {
          var s = this.createElement("span");
          return s.style.fontFamily = n.font, s.innerHTML = `&#x${n.char};`, s;
        }
        renderFootnoteReference(n) {
          var s = this.createElement("sup");
          return this.currentFootnoteIds.push(n.id), s.textContent = `${this.currentFootnoteIds.length}`, s;
        }
        renderEndnoteReference(n) {
          var s = this.createElement("sup");
          return this.currentEndnoteIds.push(n.id), s.textContent = `${this.currentEndnoteIds.length}`, s;
        }
        renderTab(n) {
          var s, t = this.createElement("span");
          if (t.innerHTML = "&emsp;", this.options.experimental) {
            t.className = this.tabStopClass();
            var l = (s = function(b, k) {
              for (var E = b.parent; E != null && E.type != k; )
                E = E.parent;
              return E;
            }(n, r.DomType.Paragraph)) === null || s === void 0 ? void 0 : s.tabs;
            this.currentTabs.push({ stops: l, span: t });
          }
          return t;
        }
        renderBookmarkStart(n) {
          var s = this.createElement("span");
          return s.id = n.name, s;
        }
        renderRun(n) {
          if (n.fieldRun)
            return null;
          const s = this.createElement("span");
          if (n.id && (s.id = n.id), this.renderClass(n, s), this.renderStyleValues(n.cssStyle, s), n.verticalAlign) {
            const t = this.createElement(n.verticalAlign);
            this.renderChildren(n, t), s.appendChild(t);
          } else
            this.renderChildren(n, s);
          return s;
        }
        renderTable(n) {
          let s = this.createElement("table");
          return this.tableCellPositions.push(this.currentCellPosition), this.tableVerticalMerges.push(this.currentVerticalMerge), this.currentVerticalMerge = {}, this.currentCellPosition = { col: 0, row: 0 }, n.columns && s.appendChild(this.renderTableColumns(n.columns)), this.renderClass(n, s), this.renderChildren(n, s), this.renderStyleValues(n.cssStyle, s), this.currentVerticalMerge = this.tableVerticalMerges.pop(), this.currentCellPosition = this.tableCellPositions.pop(), s;
        }
        renderTableColumns(n) {
          let s = this.createElement("colgroup");
          for (let t of n) {
            let l = this.createElement("col");
            t.width && (l.style.width = t.width), s.appendChild(l);
          }
          return s;
        }
        renderTableRow(n) {
          let s = this.createElement("tr");
          return this.currentCellPosition.col = 0, this.renderClass(n, s), this.renderChildren(n, s), this.renderStyleValues(n.cssStyle, s), this.currentCellPosition.row++, s;
        }
        renderTableCell(n) {
          let s = this.createElement("td");
          const t = this.currentCellPosition.col;
          return n.verticalMerge ? n.verticalMerge == "restart" ? (this.currentVerticalMerge[t] = s, s.rowSpan = 1) : this.currentVerticalMerge[t] && (this.currentVerticalMerge[t].rowSpan += 1, s.style.display = "none") : this.currentVerticalMerge[t] = null, this.renderClass(n, s), this.renderChildren(n, s), this.renderStyleValues(n.cssStyle, s), n.span && (s.colSpan = n.span), this.currentCellPosition.col += s.colSpan, s;
        }
        renderVmlPicture(n) {
          var s = y("div");
          return this.renderChildren(n, s), s;
        }
        renderVmlElement(n) {
          var s, t, l = d("svg");
          l.setAttribute("style", n.cssStyleText);
          const b = this.renderVmlChildElement(n);
          return !((s = n.imageHref) === null || s === void 0) && s.id && ((t = this.document) === null || t === void 0 || t.loadDocumentImage(n.imageHref.id, this.currentPart).then((k) => b.setAttribute("href", k))), l.appendChild(b), requestAnimationFrame(() => {
            const k = l.firstElementChild.getBBox();
            l.setAttribute("width", `${Math.ceil(k.x + k.width)}`), l.setAttribute("height", `${Math.ceil(k.y + k.height)}`);
          }), l;
        }
        renderVmlChildElement(n) {
          const s = d(n.tagName);
          Object.entries(n.attrs).forEach(([t, l]) => s.setAttribute(t, l));
          for (let t of n.children)
            t.type == r.DomType.VmlElement ? s.appendChild(this.renderVmlChildElement(t)) : s.appendChild(...(0, m.asArray)(this.renderElement(t)));
          return s;
        }
        renderMmlRadical(n) {
          var s;
          const t = n.children.find((b) => b.type == r.DomType.MmlBase);
          if (!((s = n.props) === null || s === void 0) && s.hideDegree)
            return h(i, "msqrt", null, this.renderElements([t]));
          const l = n.children.find((b) => b.type == r.DomType.MmlDegree);
          return h(i, "mroot", null, this.renderElements([t, l]));
        }
        renderMmlDelimiter(n) {
          var s, t;
          const l = [];
          return l.push(h(i, "mo", null, [(s = n.props.beginChar) !== null && s !== void 0 ? s : "("])), l.push(...this.renderElements(n.children)), l.push(h(i, "mo", null, [(t = n.props.endChar) !== null && t !== void 0 ? t : ")"])), h(i, "mrow", null, l);
        }
        renderMmlNary(n) {
          var s, t;
          const l = [], b = (0, m.keyBy)(n.children, (R) => R.type), k = b[r.DomType.MmlSuperArgument], E = b[r.DomType.MmlSubArgument], _ = k ? h(i, "mo", null, (0, m.asArray)(this.renderElement(k))) : null, T = E ? h(i, "mo", null, (0, m.asArray)(this.renderElement(E))) : null, o = h(i, "mo", null, [(t = (s = n.props) === null || s === void 0 ? void 0 : s.char) !== null && t !== void 0 ? t : "∫"]);
          return _ || T ? l.push(h(i, "munderover", null, [o, T, _])) : _ ? l.push(h(i, "mover", null, [o, _])) : T ? l.push(h(i, "munder", null, [o, T])) : l.push(o), l.push(...this.renderElements(b[r.DomType.MmlBase].children)), h(i, "mrow", null, l);
        }
        renderMmlPreSubSuper(n) {
          const s = [], t = (0, m.keyBy)(n.children, (T) => T.type), l = t[r.DomType.MmlSuperArgument], b = t[r.DomType.MmlSubArgument], k = l ? h(i, "mo", null, (0, m.asArray)(this.renderElement(l))) : null, E = b ? h(i, "mo", null, (0, m.asArray)(this.renderElement(b))) : null, _ = h(i, "mo", null);
          return s.push(h(i, "msubsup", null, [_, E, k])), s.push(...this.renderElements(t[r.DomType.MmlBase].children)), h(i, "mrow", null, s);
        }
        renderMmlGroupChar(n) {
          const s = n.props.verticalJustification === "bot" ? "mover" : "munder", t = this.renderContainerNS(n, i, s);
          return n.props.char && t.appendChild(h(i, "mo", null, [n.props.char])), t;
        }
        renderMmlBar(n) {
          const s = this.renderContainerNS(n, i, "mrow");
          switch (n.props.position) {
            case "top":
              s.style.textDecoration = "overline";
              break;
            case "bottom":
              s.style.textDecoration = "underline";
          }
          return s;
        }
        renderMmlRun(n) {
          const s = h(i, "ms");
          return this.renderClass(n, s), this.renderStyleValues(n.cssStyle, s), this.renderChildren(n, s), s;
        }
        renderMllList(n) {
          const s = h(i, "mtable");
          this.renderClass(n, s), this.renderStyleValues(n.cssStyle, s), this.renderChildren(n);
          for (let t of this.renderChildren(n))
            s.appendChild(h(i, "mtr", null, [h(i, "mtd", null, [t])]));
          return s;
        }
        renderStyleValues(n, s) {
          for (let t in n)
            t.startsWith("$") ? s.setAttribute(t.slice(1), n[t]) : s.style[t] = n[t];
        }
        renderClass(n, s) {
          n.className && (s.className = n.className), n.styleName && s.classList.add(this.processStyleName(n.styleName));
        }
        findStyle(n) {
          var s;
          return n && ((s = this.styleMap) === null || s === void 0 ? void 0 : s[n]);
        }
        numberingClass(n, s) {
          return `${this.className}-num-${n}-${s}`;
        }
        tabStopClass() {
          return `${this.className}-tab-stop`;
        }
        styleToString(n, s, t = null) {
          let l = `${n} {\r
`;
          for (const b in s)
            b.startsWith("$") || (l += `  ${b}: ${s[b]};\r
`);
          return t && (l += t), l + `}\r
`;
        }
        numberingCounter(n, s) {
          return `${this.className}-num-${n}-${s}`;
        }
        levelTextToContent(n, s, t, l) {
          var b;
          return `"${n.replace(/%\d*/g, (k) => {
            let E = parseInt(k.substring(1), 10) - 1;
            return `"counter(${this.numberingCounter(t, E)}, ${l})"`;
          })}${(b = { tab: "\\9", space: "\\a0" }[s]) !== null && b !== void 0 ? b : ""}"`;
        }
        numFormatToCssValue(n) {
          var s;
          return (s = { none: "none", bullet: "disc", decimal: "decimal", lowerLetter: "lower-alpha", upperLetter: "upper-alpha", lowerRoman: "lower-roman", upperRoman: "upper-roman", decimalZero: "decimal-leading-zero", aiueo: "katakana", aiueoFullWidth: "katakana", chineseCounting: "simp-chinese-informal", chineseCountingThousand: "simp-chinese-informal", chineseLegalSimplified: "simp-chinese-formal", chosung: "hangul-consonant", ideographDigital: "cjk-ideographic", ideographTraditional: "cjk-heavenly-stem", ideographLegalTraditional: "trad-chinese-formal", ideographZodiac: "cjk-earthly-branch", iroha: "katakana-iroha", irohaFullWidth: "katakana-iroha", japaneseCounting: "japanese-informal", japaneseDigitalTenThousand: "cjk-decimal", japaneseLegal: "japanese-formal", thaiNumbers: "thai", koreanCounting: "korean-hangul-formal", koreanDigital: "korean-hangul-formal", koreanDigital2: "korean-hanja-informal", hebrew1: "hebrew", hebrew2: "hebrew", hindiNumbers: "devanagari", ganada: "hangul", taiwaneseCounting: "cjk-ideographic", taiwaneseCountingThousand: "cjk-ideographic", taiwaneseDigital: "cjk-decimal" }[n]) !== null && s !== void 0 ? s : n;
        }
        refreshTabStops() {
          this.options.experimental && (clearTimeout(this.tabsTimeout), this.tabsTimeout = setTimeout(() => {
            const n = (0, p.computePixelToPoint)();
            for (let s of this.currentTabs)
              (0, p.updateTabStop)(s.span, s.stops, this.defaultTabSize, n);
          }, 500));
        }
      };
    }, 630: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.updateTabStop = e.computePixelToPoint = void 0;
      const c = { pos: 0, leader: "none", style: "left" };
      function r(m) {
        return parseFloat(m);
      }
      e.computePixelToPoint = function(m = document.body) {
        const p = document.createElement("div");
        p.style.width = "100pt", m.appendChild(p);
        const a = 100 / p.offsetWidth;
        return m.removeChild(p), a;
      }, e.updateTabStop = function(m, p, a, i = 0.75) {
        const y = m.closest("p"), d = m.getBoundingClientRect(), h = y.getBoundingClientRect(), f = getComputedStyle(y), g = (p == null ? void 0 : p.length) > 0 ? p.map((_) => ({ pos: r(_.position), leader: _.leader, style: _.style })).sort((_, T) => _.pos - T.pos) : [c], w = g[g.length - 1], C = h.width * i, n = r(a);
        let s = w.pos + n;
        if (s < C)
          for (; s < C && g.length < 50; s += n)
            g.push(Object.assign(Object.assign({}, c), { pos: s }));
        const t = parseFloat(f.marginLeft), l = h.left + t, b = (d.left - l) * i, k = g.find((_) => _.style != "clear" && _.pos > b);
        if (k == null)
          return;
        let E = 1;
        if (k.style == "right" || k.style == "center") {
          const _ = Array.from(y.querySelectorAll(`.${m.className}`)), T = _.indexOf(m) + 1, o = document.createRange();
          o.setStart(m, 1), T < _.length ? o.setEndBefore(_[T]) : o.setEndAfter(y);
          const R = k.style == "center" ? 0.5 : 1, V = o.getBoundingClientRect(), L = V.left + R * V.width - (h.left - t);
          E = k.pos - L * i;
        } else
          E = k.pos - b;
        switch (m.innerHTML = "&nbsp;", m.style.textDecoration = "inherit", m.style.wordSpacing = `${E.toFixed(0)}pt`, k.leader) {
          case "dot":
          case "middleDot":
            m.style.textDecoration = "underline", m.style.textDecorationStyle = "dotted";
            break;
          case "hyphen":
          case "heavy":
          case "underscore":
            m.style.textDecoration = "underline";
        }
      };
    }, 881: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.WmlEndnote = e.WmlFootnote = e.WmlBaseNote = void 0;
      const r = c(120);
      class m {
      }
      e.WmlBaseNote = m, e.WmlFootnote = class extends m {
        constructor() {
          super(...arguments), this.type = r.DomType.Footnote;
        }
      }, e.WmlEndnote = class extends m {
        constructor() {
          super(...arguments), this.type = r.DomType.Endnote;
        }
      };
    }, 735: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.EndnotesPart = e.FootnotesPart = e.BaseNotePart = void 0;
      const r = c(530), m = c(881);
      class p extends r.Part {
        constructor(i, y, d) {
          super(i, y), this._documentParser = d;
        }
      }
      e.BaseNotePart = p, e.FootnotesPart = class extends p {
        constructor(a, i, y) {
          super(a, i, y);
        }
        parseXml(a) {
          this.notes = this._documentParser.parseNotes(a, "footnote", m.WmlFootnote);
        }
      }, e.EndnotesPart = class extends p {
        constructor(a, i, y) {
          super(a, i, y);
        }
        parseXml(a) {
          this.notes = this._documentParser.parseNotes(a, "endnote", m.WmlEndnote);
        }
      };
    }, 527: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.NumberingPart = void 0;
      const r = c(530), m = c(682);
      class p extends r.Part {
        constructor(i, y, d) {
          super(i, y), this._documentParser = d;
        }
        parseXml(i) {
          Object.assign(this, (0, m.parseNumberingPart)(i, this._package.xmlParser)), this.domNumberings = this._documentParser.parseNumberingFile(i);
        }
      }
      e.NumberingPart = p;
    }, 682: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNumberingBulletPicture = e.parseNumberingLevelOverrride = e.parseNumberingLevel = e.parseAbstractNumbering = e.parseNumbering = e.parseNumberingPart = void 0;
      const r = c(109), m = c(488);
      function p(h, f) {
        let g = { id: f.attr(h, "numId"), overrides: [] };
        for (let w of f.elements(h))
          switch (w.localName) {
            case "abstractNumId":
              g.abstractId = f.attr(w, "val");
              break;
            case "lvlOverride":
              g.overrides.push(y(w, f));
          }
        return g;
      }
      function a(h, f) {
        let g = { id: f.attr(h, "abstractNumId"), levels: [] };
        for (let w of f.elements(h))
          switch (w.localName) {
            case "name":
              g.name = f.attr(w, "val");
              break;
            case "multiLevelType":
              g.multiLevelType = f.attr(w, "val");
              break;
            case "numStyleLink":
              g.numberingStyleLink = f.attr(w, "val");
              break;
            case "styleLink":
              g.styleLink = f.attr(w, "val");
              break;
            case "lvl":
              g.levels.push(i(w, f));
          }
        return g;
      }
      function i(h, f) {
        let g = { level: f.intAttr(h, "ilvl") };
        for (let w of f.elements(h))
          switch (w.localName) {
            case "start":
              g.start = f.attr(w, "val");
              break;
            case "lvlRestart":
              g.restart = f.intAttr(w, "val");
              break;
            case "numFmt":
              g.format = f.attr(w, "val");
              break;
            case "lvlText":
              g.text = f.attr(w, "val");
              break;
            case "lvlJc":
              g.justification = f.attr(w, "val");
              break;
            case "lvlPicBulletId":
              g.bulletPictureId = f.attr(w, "val");
              break;
            case "pStyle":
              g.paragraphStyle = f.attr(w, "val");
              break;
            case "pPr":
              g.paragraphProps = (0, r.parseParagraphProperties)(w, f);
              break;
            case "rPr":
              g.runProps = (0, m.parseRunProperties)(w, f);
          }
        return g;
      }
      function y(h, f) {
        let g = { level: f.intAttr(h, "ilvl") };
        for (let w of f.elements(h))
          switch (w.localName) {
            case "startOverride":
              g.start = f.intAttr(w, "val");
              break;
            case "lvl":
              g.numberingLevel = i(w, f);
          }
        return g;
      }
      function d(h, f) {
        var g = f.element(h, "pict"), w = g && f.element(g, "shape"), C = w && f.element(w, "imagedata");
        return C ? { id: f.attr(h, "numPicBulletId"), referenceId: f.attr(C, "id"), style: f.attr(w, "style") } : null;
      }
      e.parseNumberingPart = function(h, f) {
        let g = { numberings: [], abstractNumberings: [], bulletPictures: [] };
        for (let w of f.elements(h))
          switch (w.localName) {
            case "num":
              g.numberings.push(p(w, f));
              break;
            case "abstractNum":
              g.abstractNumberings.push(a(w, f));
              break;
            case "numPicBullet":
              g.bulletPictures.push(d(w, f));
          }
        return g;
      }, e.parseNumbering = p, e.parseAbstractNumbering = a, e.parseNumberingLevel = i, e.parseNumberingLevelOverrride = y, e.parseNumberingBulletPicture = d;
    }, 472: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.XmlParser = e.serializeXmlString = e.parseXmlString = void 0;
      const r = c(149);
      e.parseXmlString = function(a, i = !1) {
        var y;
        i && (a = a.replace(/<[?].*[?]>/, "")), a = (y = a).charCodeAt(0) === 65279 ? y.substring(1) : y;
        const d = new DOMParser().parseFromString(a, "application/xml"), h = (f = d.getElementsByTagName("parsererror")[0]) === null || f === void 0 ? void 0 : f.textContent;
        var f;
        if (h)
          throw new Error(h);
        return d;
      }, e.serializeXmlString = function(a) {
        return new XMLSerializer().serializeToString(a);
      };
      class m {
        elements(i, y = null) {
          const d = [];
          for (let h = 0, f = i.childNodes.length; h < f; h++) {
            let g = i.childNodes.item(h);
            g.nodeType != 1 || y != null && g.localName != y || d.push(g);
          }
          return d;
        }
        element(i, y) {
          for (let d = 0, h = i.childNodes.length; d < h; d++) {
            let f = i.childNodes.item(d);
            if (f.nodeType == 1 && f.localName == y)
              return f;
          }
          return null;
        }
        elementAttr(i, y, d) {
          var h = this.element(i, y);
          return h ? this.attr(h, d) : void 0;
        }
        attrs(i) {
          return Array.from(i.attributes);
        }
        attr(i, y) {
          for (let d = 0, h = i.attributes.length; d < h; d++) {
            let f = i.attributes.item(d);
            if (f.localName == y)
              return f.value;
          }
          return null;
        }
        intAttr(i, y, d = null) {
          var h = this.attr(i, y);
          return h ? parseInt(h) : d;
        }
        hexAttr(i, y, d = null) {
          var h = this.attr(i, y);
          return h ? parseInt(h, 16) : d;
        }
        floatAttr(i, y, d = null) {
          var h = this.attr(i, y);
          return h ? parseFloat(h) : d;
        }
        boolAttr(i, y, d = null) {
          return (0, r.convertBoolean)(this.attr(i, y), d);
        }
        lengthAttr(i, y, d = r.LengthUsage.Dxa) {
          return (0, r.convertLength)(this.attr(i, y), d);
        }
      }
      e.XmlParser = m;
      const p = new m();
      e.default = p;
    }, 287: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.SettingsPart = void 0;
      const r = c(530), m = c(846);
      class p extends r.Part {
        constructor(i, y) {
          super(i, y);
        }
        parseXml(i) {
          this.settings = (0, m.parseSettings)(i, this._package.xmlParser);
        }
      }
      e.SettingsPart = p;
    }, 846: (v, e) => {
      function c(r, m) {
        var p = { defaultNoteIds: [] };
        for (let a of m.elements(r))
          switch (a.localName) {
            case "numFmt":
              p.nummeringFormat = m.attr(a, "val");
              break;
            case "footnote":
            case "endnote":
              p.defaultNoteIds.push(m.attr(a, "id"));
          }
        return p;
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNoteProperties = e.parseSettings = void 0, e.parseSettings = function(r, m) {
        var p = {};
        for (let a of m.elements(r))
          switch (a.localName) {
            case "defaultTabStop":
              p.defaultTabStop = m.lengthAttr(a, "val");
              break;
            case "footnotePr":
              p.footnoteProps = c(a, m);
              break;
            case "endnotePr":
              p.endnoteProps = c(a, m);
              break;
            case "autoHyphenation":
              p.autoHyphenation = m.boolAttr(a, "val");
          }
        return p;
      }, e.parseNoteProperties = c;
    }, 240: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.StylesPart = void 0;
      const r = c(530);
      class m extends r.Part {
        constructor(a, i, y) {
          super(a, i), this._documentParser = y;
        }
        parseXml(a) {
          this.styles = this._documentParser.parseStylesFile(a);
        }
      }
      e.StylesPart = m;
    }, 893: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.ThemePart = void 0;
      const r = c(530), m = c(55);
      class p extends r.Part {
        constructor(i, y) {
          super(i, y);
        }
        parseXml(i) {
          this.theme = (0, m.parseTheme)(i, this._package.xmlParser);
        }
      }
      e.ThemePart = p;
    }, 55: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseFontInfo = e.parseFontScheme = e.parseColorScheme = e.parseTheme = e.DmlTheme = void 0;
      class c {
      }
      function r(a, i) {
        var y = { name: i.attr(a, "name"), colors: {} };
        for (let f of i.elements(a)) {
          var d = i.element(f, "srgbClr"), h = i.element(f, "sysClr");
          d ? y.colors[f.localName] = i.attr(d, "val") : h && (y.colors[f.localName] = i.attr(h, "lastClr"));
        }
        return y;
      }
      function m(a, i) {
        var y = { name: i.attr(a, "name") };
        for (let d of i.elements(a))
          switch (d.localName) {
            case "majorFont":
              y.majorFont = p(d, i);
              break;
            case "minorFont":
              y.minorFont = p(d, i);
          }
        return y;
      }
      function p(a, i) {
        return { latinTypeface: i.elementAttr(a, "latin", "typeface"), eaTypeface: i.elementAttr(a, "ea", "typeface"), csTypeface: i.elementAttr(a, "cs", "typeface") };
      }
      e.DmlTheme = c, e.parseTheme = function(a, i) {
        var y = new c(), d = i.element(a, "themeElements");
        for (let h of i.elements(d))
          switch (h.localName) {
            case "clrScheme":
              y.colorScheme = r(h, i);
              break;
            case "fontScheme":
              y.fontScheme = m(h, i);
          }
        return y;
      }, e.parseColorScheme = r, e.parseFontScheme = m, e.parseFontInfo = p;
    }, 593: (v, e) => {
      function c(r) {
        return r && typeof r == "object" && !Array.isArray(r);
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.asArray = e.formatCssRules = e.parseCssRules = e.mergeDeep = e.isString = e.isObject = e.blobToBase64 = e.keyBy = e.resolvePath = e.splitPath = e.escapeClassName = void 0, e.escapeClassName = function(r) {
        return r == null ? void 0 : r.replace(/[ .]+/g, "-").replace(/[&]+/g, "and").toLowerCase();
      }, e.splitPath = function(r) {
        let m = r.lastIndexOf("/") + 1;
        return [m == 0 ? "" : r.substring(0, m), m == 0 ? r : r.substring(m)];
      }, e.resolvePath = function(r, m) {
        try {
          const p = "http://docx/";
          return new URL(r, p + m).toString().substring(p.length);
        } catch (p) {
          return `${m}${r}`;
        }
      }, e.keyBy = function(r, m) {
        return r.reduce((p, a) => (p[m(a)] = a, p), {});
      }, e.blobToBase64 = function(r) {
        return new Promise((m, p) => {
          const a = new FileReader();
          a.onloadend = () => m(a.result), a.onerror = () => p(), a.readAsDataURL(r);
        });
      }, e.isObject = c, e.isString = function(r) {
        return typeof r == "string" || r instanceof String;
      }, e.mergeDeep = function r(m, ...p) {
        var a;
        if (!p.length)
          return m;
        const i = p.shift();
        if (c(m) && c(i))
          for (const y in i)
            c(i[y]) ? r((a = m[y]) !== null && a !== void 0 ? a : m[y] = {}, i[y]) : m[y] = i[y];
        return r(m, ...p);
      }, e.parseCssRules = function(r) {
        const m = {};
        for (const p of r.split(";")) {
          const [a, i] = p.split(":");
          m[a] = i;
        }
        return m;
      }, e.formatCssRules = function(r) {
        return Object.entries(r).map((m, p) => `${m}: ${p}`).join(";");
      }, e.asArray = function(r) {
        return Array.isArray(r) ? r : [r];
      };
    }, 320: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseVmlElement = e.VmlElement = void 0;
      const r = c(149), m = c(120), p = c(472);
      class a extends m.OpenXmlElementBase {
        constructor() {
          super(...arguments), this.type = m.DomType.VmlElement, this.attrs = {};
        }
      }
      function i(d) {
        var h;
        return { stroke: p.default.attr(d, "color"), "stroke-width": (h = p.default.lengthAttr(d, "weight", r.LengthUsage.Emu)) !== null && h !== void 0 ? h : "1px" };
      }
      function y(d) {
        return d.split(",");
      }
      e.VmlElement = a, e.parseVmlElement = function d(h, f) {
        var g = new a();
        switch (h.localName) {
          case "rect":
            g.tagName = "rect", Object.assign(g.attrs, { width: "100%", height: "100%" });
            break;
          case "oval":
            g.tagName = "ellipse", Object.assign(g.attrs, { cx: "50%", cy: "50%", rx: "50%", ry: "50%" });
            break;
          case "line":
            g.tagName = "line";
            break;
          case "shape":
            g.tagName = "g";
            break;
          case "textbox":
            g.tagName = "foreignObject", Object.assign(g.attrs, { width: "100%", height: "100%" });
            break;
          default:
            return null;
        }
        for (const w of p.default.attrs(h))
          switch (w.localName) {
            case "style":
              g.cssStyleText = w.value;
              break;
            case "fillcolor":
              g.attrs.fill = w.value;
              break;
            case "from":
              const [C, n] = y(w.value);
              Object.assign(g.attrs, { x1: C, y1: n });
              break;
            case "to":
              const [s, t] = y(w.value);
              Object.assign(g.attrs, { x2: s, y2: t });
          }
        for (const w of p.default.elements(h))
          switch (w.localName) {
            case "stroke":
              Object.assign(g.attrs, i(w));
              break;
            case "fill":
              Object.assign(g.attrs, {});
              break;
            case "imagedata":
              g.tagName = "image", Object.assign(g.attrs, { width: "100%", height: "100%" }), g.imageHref = { id: p.default.attr(w, "id"), title: p.default.attr(w, "title") };
              break;
            case "txbxContent":
              g.children.push(...f.parseBodyElements(w));
              break;
            default:
              const C = d(w, f);
              C && g.children.push(C);
          }
        return g;
      };
    }, 213: (v, e, c) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.deobfuscate = e.WordDocument = void 0;
      const r = c(461), m = c(380), p = c(522), a = c(448), i = c(593), y = c(527), d = c(240), h = c(985), f = c(665), g = c(162), w = c(893), C = c(735), n = c(287), s = c(177), t = [{ type: r.RelationshipTypes.OfficeDocument, target: "word/document.xml" }, { type: r.RelationshipTypes.ExtendedProperties, target: "docProps/app.xml" }, { type: r.RelationshipTypes.CoreProperties, target: "docProps/core.xml" }, { type: r.RelationshipTypes.CustomProperties, target: "docProps/custom.xml" }];
      class l {
        constructor() {
          this.parts = [], this.partsMap = {};
        }
        static load(E, _, T) {
          return ue(this, null, function* () {
            var o = new l();
            return o._options = T, o._parser = _, o._package = yield p.OpenXmlPackage.load(E, T), o.rels = yield o._package.loadRelationships(), yield Promise.all(t.map((R) => {
              var V;
              const L = (V = o.rels.find((K) => K.type === R.type)) !== null && V !== void 0 ? V : R;
              return o.loadRelationshipPart(L.target, L.type);
            })), o;
          });
        }
        save(E = "blob") {
          return this._package.save(E);
        }
        loadRelationshipPart(E, _) {
          return ue(this, null, function* () {
            var T;
            if (this.partsMap[E])
              return this.partsMap[E];
            if (!this._package.get(E))
              return null;
            let o = null;
            switch (_) {
              case r.RelationshipTypes.OfficeDocument:
                this.documentPart = o = new a.DocumentPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.FontTable:
                this.fontTablePart = o = new m.FontTablePart(this._package, E);
                break;
              case r.RelationshipTypes.Numbering:
                this.numberingPart = o = new y.NumberingPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.Styles:
                this.stylesPart = o = new d.StylesPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.Theme:
                this.themePart = o = new w.ThemePart(this._package, E);
                break;
              case r.RelationshipTypes.Footnotes:
                this.footnotesPart = o = new C.FootnotesPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.Endnotes:
                this.endnotesPart = o = new C.EndnotesPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.Footer:
                o = new h.FooterPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.Header:
                o = new h.HeaderPart(this._package, E, this._parser);
                break;
              case r.RelationshipTypes.CoreProperties:
                this.corePropsPart = o = new g.CorePropsPart(this._package, E);
                break;
              case r.RelationshipTypes.ExtendedProperties:
                this.extendedPropsPart = o = new f.ExtendedPropsPart(this._package, E);
                break;
              case r.RelationshipTypes.CustomProperties:
                o = new s.CustomPropsPart(this._package, E);
                break;
              case r.RelationshipTypes.Settings:
                this.settingsPart = o = new n.SettingsPart(this._package, E);
            }
            if (o == null)
              return Promise.resolve(null);
            if (this.partsMap[E] = o, this.parts.push(o), yield o.load(), ((T = o.rels) === null || T === void 0 ? void 0 : T.length) > 0) {
              const [R] = (0, i.splitPath)(o.path);
              yield Promise.all(o.rels.map((V) => this.loadRelationshipPart((0, i.resolvePath)(V.target, R), V.type)));
            }
            return o;
          });
        }
        loadDocumentImage(E, _) {
          return ue(this, null, function* () {
            const T = yield this.loadResource(_ != null ? _ : this.documentPart, E, "blob");
            return this.blobToURL(T);
          });
        }
        loadNumberingImage(E) {
          return ue(this, null, function* () {
            const _ = yield this.loadResource(this.numberingPart, E, "blob");
            return this.blobToURL(_);
          });
        }
        loadFont(E, _) {
          return ue(this, null, function* () {
            const T = yield this.loadResource(this.fontTablePart, E, "uint8array");
            return T && this.blobToURL(new Blob([b(T, _)]));
          });
        }
        blobToURL(E) {
          return E ? this._options.useBase64URL ? (0, i.blobToBase64)(E) : URL.createObjectURL(E) : null;
        }
        findPartByRelId(E, _ = null) {
          var T, o = ((T = _.rels) !== null && T !== void 0 ? T : this.rels).find((V) => V.id == E);
          const R = _ ? (0, i.splitPath)(_.path)[0] : "";
          return o ? this.partsMap[(0, i.resolvePath)(o.target, R)] : null;
        }
        getPathById(E, _) {
          const T = E.rels.find((R) => R.id == _), [o] = (0, i.splitPath)(E.path);
          return T ? (0, i.resolvePath)(T.target, o) : null;
        }
        loadResource(E, _, T) {
          const o = this.getPathById(E, _);
          return o ? this._package.load(o, T) : Promise.resolve(null);
        }
      }
      function b(k, E) {
        const _ = E.replace(/{|}|-/g, ""), T = new Array(16);
        for (let o = 0; o < 16; o++)
          T[16 - o - 1] = parseInt(_.substr(2 * o, 2), 16);
        for (let o = 0; o < 32; o++)
          k[o] = k[o] ^ T[o % 16];
        return k;
      }
      e.WordDocument = l, e.deobfuscate = b;
    }, 583: (v) => {
      v.exports = "data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E";
    }, 626: (v) => {
      v.exports = P;
    } }, D = {};
    function S(v) {
      var e = D[v];
      if (e !== void 0)
        return e.exports;
      var c = D[v] = { id: v, exports: {} };
      return I[v](c, c.exports, S), c.exports;
    }
    return S.m = I, S.n = (v) => {
      var e = v && v.__esModule ? () => v.default : () => v;
      return S.d(e, { a: e }), e;
    }, S.d = (v, e) => {
      for (var c in e)
        S.o(e, c) && !S.o(v, c) && Object.defineProperty(v, c, { enumerable: !0, get: e[c] });
    }, S.o = (v, e) => Object.prototype.hasOwnProperty.call(v, e), S.r = (v) => {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(v, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(v, "__esModule", { value: !0 });
    }, S.b = document.baseURI || self.location.href, S(667);
  })());
})(Oe);
var Ge = Oe.exports;
const qe = {
  ignoreLastRenderedPageBreak: !1
};
function Ke(q, ee = {}) {
  return typeof q == "string" ? Je(q, ee) : Promise.resolve(q);
}
function Je(q, ee) {
  return fetch(q, ee).then((P) => P.status !== 200 ? Promise.reject(P) : P);
}
function Ye(q) {
  return ue(this, null, function* () {
    let ee;
    return q instanceof Blob ? ee = q : q instanceof Response ? ee = yield q.blob() : q instanceof ArrayBuffer && (ee = new Blob([q])), ee;
  });
}
function Qe(q, ee, P = {}) {
  if (!q)
    return ee.innerHTML = "", Promise.resolve();
  let I;
  return q instanceof Blob ? I = q : q instanceof Response ? I = q.blob() : q instanceof ArrayBuffer && (I = new Blob([q])), Ge.renderAsync(I, ee, ee, Ae(Ae({}, qe), P));
}
const ge = {
  getData: Ke,
  render: Qe,
  getBlob: Ye
};
function et(q, ee) {
  return ue(this, null, function* () {
    ee && (ee instanceof ArrayBuffer && (ee = new Blob([ee])), tt(q, URL.createObjectURL(ee)));
  });
}
function tt(q, ee) {
  let P = document.createElement("a");
  P.download = q, P.style.display = "none", P.href = ee, document.body.appendChild(P), P.click(), document.body.removeChild(P);
}
const rt = (q, ee) => {
  const P = q.__vccOpts || q;
  for (const [I, D] of ee)
    P[I] = D;
  return P;
}, nt = je({
  name: "VueOfficeDocx",
  props: {
    src: [String, ArrayBuffer, Blob],
    requestOptions: {
      type: Object,
      default: () => ({})
    },
    options: {
      type: Object,
      default: () => ({})
    }
  },
  emits: ["rendered", "error"],
  setup(q, { emit: ee }) {
    const P = Ue(null);
    let I = null;
    function D() {
      let v = P.value;
      ge.getData(q.src, q.requestOptions).then((e) => ue(this, null, function* () {
        I = yield ge.getBlob(e), ge.render(I, v, q.options).then(() => {
          ee("rendered");
        }).catch((c) => {
          ge.render("", v, q.options), ee("error", c);
        });
      })).catch((e) => {
        ge.render("", v, q.options), ee("error", e);
      });
    }
    We(() => {
      q.src && D();
    }), He(() => q.src, () => {
      q.src ? D() : ge.render("", P.value, q.options).then(() => {
        ee("rendered");
      });
    });
    function S(v) {
      et(v || `vue-office-docx-${(/* @__PURE__ */ new Date()).getTime()}.docx`, I);
    }
    return {
      rootRef: P,
      save: S
    };
  }
}), at = { class: "vue-office-docx" }, st = {
  class: "vue-office-docx-main",
  ref: "rootRef"
};
function it(q, ee, P, I, D, S) {
  return $e(), Ze("div", at, [
    Ve("div", st, null, 512)
  ]);
}
const Ce = /* @__PURE__ */ rt(nt, [["render", it]]);
Ce.install = function(q) {
  q.component(Ce.name, Ce);
};
export {
  Ce as default
};
