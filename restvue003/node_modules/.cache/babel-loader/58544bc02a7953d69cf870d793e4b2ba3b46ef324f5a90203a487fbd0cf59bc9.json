{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-66596604\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_button, {\n    disabled: $data.isDisabled,\n    onClick: $options.topleveldirectory,\n    class: \"tets\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 返回上级目录 \"), $data.countdown > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"(\" + _toDisplayString($data.countdown) + \"s)\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"disabled\", \"onClick\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createVNode","_component_el_button","disabled","$data","isDisabled","onClick","$options","topleveldirectory","class","default","_withCtx","_createTextVNode","countdown","_hoisted_1","_toDisplayString","_createCommentVNode","_"],"sources":["C:\\Users\\Admin\\Desktop\\codes\\restvue003\\src\\components\\TopLevelDirectory.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-button \r\n            :disabled=\"isDisabled\" \r\n            @click=\"topleveldirectory\" \r\n            class=\"tets\">\r\n            返回上级目录\r\n            <span v-if=\"countdown > 0\">({{ countdown }}s)</span>\r\n        </el-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            isDisabled: false,\r\n            countdown: 0,\r\n            timer: null\r\n        };\r\n    },\r\n    methods: {\r\n        async topleveldirectory() {\r\n            if (this.isDisabled) return;\r\n            // 立即禁用按钮\r\n            this.startCountdown();\r\n            \r\n            try {\r\n                await this.TopLevelDirectory();\r\n            } catch (error) {\r\n                console.error('操作失败:', error);\r\n            }\r\n        },\r\n\r\n        async TopLevelDirectory() {\r\n            console.log(this.$store.state.DirPath);\r\n            try {\r\n                const res = await axios.get(this.$store.state.api + '/TopLevelDirectory', \r\n                {\r\n                    params: { \r\n                        TopLevelDirectoryPathName: this.$store.state.DirPath \r\n                    }\r\n                });\r\n                \r\n                if(res.data.type === '成功') {\r\n                    this.$store.state.DirPath = res.data.data;\r\n                    await Promise.all([\r\n                        this.$store.dispatch('DirsFileList'),\r\n                        this.$store.dispatch('openDirs'),\r\n                        // this.$store.dispatch('filesypess')\r\n                    ]);\r\n                }\r\n            } catch (error) {\r\n                console.error('目录操作失败:', error);\r\n            }\r\n        },\r\n\r\n        // async getDirs() {\r\n        //     const res = await axios.get(this.$store.state.api + '/getDirs');\r\n        //     return res.data.data;\r\n        // },\r\n\r\n        startCountdown() {\r\n            this.isDisabled = true;\r\n            this.countdown = 5;\r\n            \r\n            this.timer = setInterval(() => {\r\n                this.countdown--;\r\n                \r\n                if (this.countdown <= 0) {\r\n                    clearInterval(this.timer);\r\n                    this.isDisabled = false;\r\n                }\r\n            }, 1000);\r\n        }\r\n    },\r\n    beforeUnmount() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 禁用状态样式 */\r\n.el-button.is-disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.7;\r\n}\r\n</style>"],"mappings":";;;EAAAA,GAAA;AAAA;;;uBACIC,mBAAA,CAQM,cAPFC,YAAA,CAMYC,oBAAA;IALPC,QAAQ,EAAEC,KAAA,CAAAC,UAAU;IACpBC,OAAK,EAAEC,QAAA,CAAAC,iBAAiB;IACzBC,KAAK,EAAC;;IALlBC,OAAA,EAAAC,QAAA,CAKyB,MAEb,CAPZC,gBAAA,CAKyB,UAEb,GAAYR,KAAA,CAAAS,SAAS,Q,cAArBb,mBAAA,CAAoD,QAPhEc,UAAA,EAOuC,GAAC,GAAAC,gBAAA,CAAGX,KAAA,CAAAS,SAAS,IAAG,IAAE,mBAPzDG,mBAAA,e;IAAAC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}