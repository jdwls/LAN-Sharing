{"ast":null,"code":"export function KeyMain(data) {\n  let KeyMainChar = '2002052820150803';\n  let KeyMainlist = KeyMainChar.split('');\n  let KeyMainAscll = [];\n  let Passwordlist = data.split('');\n  let PasswordAscll = [];\n  // 密钥转成ASCll码\n  for (let i = 0; i <= KeyMainlist.length - 1; i++) {\n    KeyMainAscll[i] = KeyMainlist[i].charCodeAt();\n  }\n  // 密码转成ASCll码\n  for (let i = 0; i <= Passwordlist.length - 1; i++) {\n    PasswordAscll[i] = Passwordlist[i].charCodeAt();\n  }\n  // 密码补码+到16位\n  if (PasswordAscll.length != 16) {\n    for (let i = PasswordAscll.length; i <= 15; i++) {\n      PasswordAscll[i] = 65;\n    }\n  }\n  //  混淆原来的加密密钥\n  for (let i = 0; i <= KeyMainAscll.length - 1; i++) {\n    if (KeyMainAscll[i] + i * (16 - i) <= 127) {\n      KeyMainAscll[i] = KeyMainAscll[i] + i * (16 - i);\n    } else {\n      KeyMainAscll[i] = (KeyMainAscll[i] + i * (16 - i)) / 2;\n    }\n  }\n\n  // 加密数据\n  let PasswordCoryBehind = [];\n  for (let i = 0; i < KeyMainAscll.length; i++) {\n    if (PasswordAscll[i] + KeyMainAscll[i] <= 127) PasswordCoryBehind[i] = PasswordAscll[i] + KeyMainAscll[i];else {\n      PasswordCoryBehind[i] = (PasswordAscll[i] + KeyMainAscll[i]) / 2;\n    }\n  }\n  console.log(PasswordCoryBehind);\n}\nexport default KeyMain;","map":{"version":3,"names":["KeyMain","data","KeyMainChar","KeyMainlist","split","KeyMainAscll","Passwordlist","PasswordAscll","i","length","charCodeAt","PasswordCoryBehind","console","log"],"sources":["C:/Users/Admin/Desktop/LAN-Sharing-0.1.0/restvue003/src/components/Common/KeyMain.js"],"sourcesContent":["export function KeyMain(data){\r\n    let KeyMainChar='2002052820150803'\r\n    let KeyMainlist=KeyMainChar.split('')\r\n    let KeyMainAscll=[]\r\n    let Passwordlist=data.split('') \r\n    let PasswordAscll=[]\r\n// 密钥转成ASCll码\r\n    for(let i=0;i<=KeyMainlist.length-1;i++){\r\n        KeyMainAscll[i]=KeyMainlist[i].charCodeAt()\r\n\r\n        \r\n    }\r\n// 密码转成ASCll码\r\n    for(let i=0;i<=Passwordlist.length-1;i++){\r\n        \r\n        PasswordAscll[i]=Passwordlist[i].charCodeAt()\r\n\r\n    }\r\n// 密码补码+到16位\r\n    if(PasswordAscll.length!=16){\r\n        for(let i=PasswordAscll.length;i<=15;i++){\r\n            PasswordAscll[i]=65\r\n            \r\n        }\r\n    }   \r\n//  混淆原来的加密密钥\r\n    for(let i=0;i<=KeyMainAscll.length-1;i++){\r\n        if (KeyMainAscll[i]+i*(16-i)<=127){\r\n            KeyMainAscll[i]=KeyMainAscll[i]+i*(16-i)\r\n        }\r\n        else {\r\n            KeyMainAscll[i]=(KeyMainAscll[i]+i*(16-i))/2\r\n        }  \r\n    }\r\n\r\n// 加密数据\r\n    let PasswordCoryBehind=[ ]\r\n    for(let i=0;i<KeyMainAscll.length;i++){\r\n        if(PasswordAscll[i]+KeyMainAscll[i]<=127)\r\n            PasswordCoryBehind[i]=PasswordAscll[i]+KeyMainAscll[i]\r\n        else{\r\n            PasswordCoryBehind[i]=(PasswordAscll[i]+KeyMainAscll[i])/2\r\n        }\r\n    }\r\n    console.log(PasswordCoryBehind);\r\n    \r\n\r\n}\r\nexport default KeyMain"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAC;EACzB,IAAIC,WAAW,GAAC,kBAAkB;EAClC,IAAIC,WAAW,GAACD,WAAW,CAACE,KAAK,CAAC,EAAE,CAAC;EACrC,IAAIC,YAAY,GAAC,EAAE;EACnB,IAAIC,YAAY,GAACL,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC;EAC/B,IAAIG,aAAa,GAAC,EAAE;EACxB;EACI,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEL,WAAW,CAACM,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IACpCH,YAAY,CAACG,CAAC,CAAC,GAACL,WAAW,CAACK,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAG/C;EACJ;EACI,KAAI,IAAIF,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEF,YAAY,CAACG,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IAErCD,aAAa,CAACC,CAAC,CAAC,GAACF,YAAY,CAACE,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAEjD;EACJ;EACI,IAAGH,aAAa,CAACE,MAAM,IAAE,EAAE,EAAC;IACxB,KAAI,IAAID,CAAC,GAACD,aAAa,CAACE,MAAM,EAACD,CAAC,IAAE,EAAE,EAACA,CAAC,EAAE,EAAC;MACrCD,aAAa,CAACC,CAAC,CAAC,GAAC,EAAE;IAEvB;EACJ;EACJ;EACI,KAAI,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEH,YAAY,CAACI,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IACrC,IAAIH,YAAY,CAACG,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC,IAAE,GAAG,EAAC;MAC9BH,YAAY,CAACG,CAAC,CAAC,GAACH,YAAY,CAACG,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC;IAC5C,CAAC,MACI;MACDH,YAAY,CAACG,CAAC,CAAC,GAAC,CAACH,YAAY,CAACG,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC,IAAE,CAAC;IAChD;EACJ;;EAEJ;EACI,IAAIG,kBAAkB,GAAC,EAAG;EAC1B,KAAI,IAAIH,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,YAAY,CAACI,MAAM,EAACD,CAAC,EAAE,EAAC;IAClC,IAAGD,aAAa,CAACC,CAAC,CAAC,GAACH,YAAY,CAACG,CAAC,CAAC,IAAE,GAAG,EACpCG,kBAAkB,CAACH,CAAC,CAAC,GAACD,aAAa,CAACC,CAAC,CAAC,GAACH,YAAY,CAACG,CAAC,CAAC,MACtD;MACAG,kBAAkB,CAACH,CAAC,CAAC,GAAC,CAACD,aAAa,CAACC,CAAC,CAAC,GAACH,YAAY,CAACG,CAAC,CAAC,IAAE,CAAC;IAC9D;EACJ;EACAI,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;AAGnC;AACA,eAAeX,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}