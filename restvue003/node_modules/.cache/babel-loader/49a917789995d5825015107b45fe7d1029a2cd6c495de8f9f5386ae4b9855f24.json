{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, computed, nextTick, watch, watchEffect, onMounted } from 'vue';\nimport { isArray, isFunction, isObject } from '@vue/shared';\nimport { debounce, isEqual, get, findLastIndex } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../form/index.mjs';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport { useAllowCreate } from './useAllowCreate.mjs';\nimport { useInput } from './useInput.mjs';\nimport { useProps } from './useProps.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem, useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { useFocusController } from '../../../hooks/use-focus-controller/index.mjs';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst MINIMUM_INPUT_WIDTH = 11;\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = useLocale();\n  const nsSelect = useNamespace(\"select\");\n  const nsInput = useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem();\n  const {\n    inputId\n  } = useFormItemInputId(props, {\n    formItemContext: elFormItem\n  });\n  const {\n    getLabel,\n    getValue,\n    getDisabled,\n    getOptions\n  } = useProps(props);\n  const states = reactive({\n    inputValue: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    previousQuery: null,\n    previousValue: void 0,\n    selectedLabel: \"\",\n    menuVisibleOnFocus: false,\n    isBeforeHide: false\n  });\n  const selectedIndex = ref(-1);\n  const popperSize = ref(-1);\n  const selectRef = ref(null);\n  const selectionRef = ref(null);\n  const tooltipRef = ref(null);\n  const tagTooltipRef = ref(null);\n  const inputRef = ref(null);\n  const calculatorRef = ref(null);\n  const prefixRef = ref(null);\n  const suffixRef = ref(null);\n  const menuRef = ref(null);\n  const tagMenuRef = ref(null);\n  const {\n    wrapperRef,\n    isFocused,\n    handleFocus,\n    handleBlur\n  } = useFocusController(inputRef, {\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true;\n        states.menuVisibleOnFocus = true;\n      }\n    },\n    beforeBlur(event) {\n      var _a, _b;\n      return ((_a = tooltipRef.value) == null ? void 0 : _a.isFocusInsideContent(event)) || ((_b = tagTooltipRef.value) == null ? void 0 : _b.isFocusInsideContent(event));\n    },\n    afterBlur() {\n      expanded.value = false;\n      states.menuVisibleOnFocus = false;\n    }\n  });\n  const allOptions = ref([]);\n  const filteredOptions = ref([]);\n  const expanded = ref(false);\n  const selectDisabled = computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = computed(() => {\n    return props.multiple ? isArray(props.modelValue) && props.modelValue.length > 0 : props.modelValue !== void 0 && props.modelValue !== null && props.modelValue !== \"\";\n  });\n  const showClearBtn = computed(() => {\n    const criteria = props.clearable && !selectDisabled.value && states.inputHovering && hasModelValue.value;\n    return criteria;\n  });\n  const iconComponent = computed(() => props.remote && props.filterable ? \"\" : ArrowDown);\n  const iconReverse = computed(() => iconComponent.value && nsSelect.is(\"reverse\", expanded.value));\n  const validateState = computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = computed(() => ValidateComponentsMap[validateState.value]);\n  const debounce$1 = computed(() => props.remote ? 300 : 0);\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0) return false;\n      if (props.filterable && states.inputValue && allOptions.value.length > 0 && filteredOptions.value.length === 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n    return null;\n  });\n  const filterOptions = query => {\n    const isValidOption = o => {\n      if (props.filterable && isFunction(props.filterMethod)) return true;\n      if (props.filterable && props.remote && isFunction(props.remoteMethod)) return true;\n      const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n      return query ? regexp.test(getLabel(o) || \"\") : true;\n    };\n    if (props.loading) {\n      return [];\n    }\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item);\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption);\n        if (filtered.length > 0) {\n          all.push({\n            label: getLabel(item),\n            isTitle: true,\n            type: \"Group\"\n          }, ...filtered, {\n            type: \"Group\"\n          });\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item);\n      }\n      return all;\n    }, []);\n  };\n  const updateOptions = () => {\n    allOptions.value = filterOptions(\"\");\n    filteredOptions.value = filterOptions(states.inputValue);\n  };\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const optionsAllDisabled = computed(() => filteredOptions.value.every(option => getDisabled(option)));\n  const selectSize = useFormSize();\n  const collapseTagSize = computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const calculatePopperSize = () => {\n    var _a;\n    popperSize.value = ((_a = selectRef.value) == null ? void 0 : _a.offsetWidth) || 200;\n  };\n  const tagStyle = computed(() => {\n    return {\n      maxWidth: `${states.selectionWidth}px`\n    };\n  });\n  const inputStyle = computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`\n  }));\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue;\n    }\n    return props.filterable ? !states.inputValue : true;\n  });\n  const currentPlaceholder = computed(() => {\n    var _a;\n    const _placeholder = (_a = props.placeholder) != null ? _a : t(\"el.select.placeholder\");\n    return props.multiple || !hasModelValue.value ? _placeholder : states.selectedLabel;\n  });\n  const popperRef = computed(() => {\n    var _a, _b;\n    return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n      if (props.modelValue.length > 0 && filteredOptionsValueMap.value.has(props.modelValue[len - 1])) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue[len - 1]);\n        return index;\n      }\n    } else {\n      if (props.modelValue && filteredOptionsValueMap.value.has(props.modelValue)) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue);\n        return index;\n      }\n    }\n    return -1;\n  });\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false;\n    },\n    set(val) {\n      expanded.value = val;\n    }\n  });\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(0, props.maxCollapseTags) : states.cachedOptions;\n  });\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return [];\n    }\n    return props.collapseTags ? states.cachedOptions.slice(props.maxCollapseTags) : [];\n  });\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate(props, states);\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  } = useInput(e => onInput(e));\n  const toggleMenu = () => {\n    if (selectDisabled.value) return;\n    if (states.menuVisibleOnFocus) {\n      states.menuVisibleOnFocus = false;\n    } else {\n      expanded.value = !expanded.value;\n    }\n  };\n  const onInputChange = () => {\n    createNewOption(states.inputValue);\n    handleQueryChange(states.inputValue);\n  };\n  const debouncedOnInputChange = debounce(onInputChange, debounce$1.value);\n  const handleQueryChange = val => {\n    if (states.previousQuery === val) {\n      return;\n    }\n    states.previousQuery = val;\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n    if (props.defaultFirstOption && (props.filterable || props.remote) && filteredOptions.value.length) {\n      nextTick(checkDefaultFirstOption);\n    } else {\n      nextTick(updateHoveringIndex);\n    }\n  };\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(n => !n.disabled && n.type !== \"Group\");\n    const userCreatedOption = optionsInDropdown.find(n => n.created);\n    const firstOriginOption = optionsInDropdown[0];\n    states.hoveringIndex = getValueIndex(filteredOptions.value, userCreatedOption || firstOriginOption);\n  };\n  const emitChange = val => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val);\n    }\n  };\n  const update = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = String(val);\n  };\n  const getValueIndex = (arr = [], value) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value);\n    }\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n      return false;\n    });\n    return index;\n  };\n  const getValueKey = item => {\n    return isObject(item) ? get(item, props.valueKey) : item;\n  };\n  const handleResize = () => {\n    calculatePopperSize();\n  };\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value.getBoundingClientRect().width;\n  };\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value.getBoundingClientRect().width;\n  };\n  const updateTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const updateTagTooltip = () => {\n    var _a, _b;\n    (_b = (_a = tagTooltipRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n  };\n  const onSelect = (option, idx) => {\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValue(option));\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValue(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n      }\n      update(selectedOptions);\n      if (option.created) {\n        handleQueryChange(\"\");\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = \"\";\n      }\n    } else {\n      selectedIndex.value = idx;\n      states.selectedLabel = getLabel(option);\n      update(getValue(option));\n      expanded.value = false;\n      selectNewOption(option);\n      if (!option.created) {\n        clearAllNewOption();\n      }\n    }\n    focus();\n  };\n  const deleteTag = (event, option) => {\n    let selectedOptions = props.modelValue.slice();\n    const index = getValueIndex(selectedOptions, getValue(option));\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(selectedOptions);\n      emit(\"remove-tag\", getValue(option));\n      removeNewOption(option);\n    }\n    event.stopPropagation();\n    focus();\n  };\n  const focus = () => {\n    var _a;\n    (_a = inputRef.value) == null ? void 0 : _a.focus();\n  };\n  const blur = () => {\n    var _a;\n    (_a = inputRef.value) == null ? void 0 : _a.blur();\n  };\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = \"\";\n    } else {\n      expanded.value = false;\n    }\n  };\n  const getLastNotDisabledIndex = value => findLastIndex(value, it => !states.cachedOptions.some(option => getValue(option) === it && getDisabled(option)));\n  const handleDel = e => {\n    if (!props.multiple) return;\n    if (e.code === EVENT_CODE.delete) return;\n    if (states.inputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected);\n      if (lastNotDisabledIndex < 0) return;\n      selected.splice(lastNotDisabledIndex, 1);\n      const option = states.cachedOptions[lastNotDisabledIndex];\n      states.cachedOptions.splice(lastNotDisabledIndex, 1);\n      removeNewOption(option);\n      update(selected);\n    }\n  };\n  const handleClear = () => {\n    let emptyValue;\n    if (isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = void 0;\n    }\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    focus();\n  };\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {\n      return;\n    }\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n    let newIndex = -1;\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n      if (newIndex < 0 || newIndex >= options.length) {\n        newIndex = options.length - 1;\n      }\n    }\n    const option = options[newIndex];\n    if (getDisabled(option) || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      states.hoveringIndex = newIndex;\n      scrollToItem(newIndex);\n    }\n  };\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex], states.hoveringIndex);\n    }\n  };\n  const onHoverOption = idx => {\n    states.hoveringIndex = idx;\n  };\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex(item => {\n        return getValueKey(item) === getValueKey(props.modelValue);\n      });\n    } else {\n      if (props.modelValue.length > 0) {\n        states.hoveringIndex = Math.min(...props.modelValue.map(selected => {\n          return filteredOptions.value.findIndex(item => {\n            return getValue(item) === selected;\n          });\n        }));\n      } else {\n        states.hoveringIndex = -1;\n      }\n    }\n  };\n  const onInput = event => {\n    states.inputValue = event.target.value;\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n  const handleClickOutside = event => {\n    expanded.value = false;\n    if (isFocused.value) {\n      const _event = new FocusEvent(\"focus\", event);\n      handleBlur(_event);\n    }\n  };\n  const handleMenuEnter = () => {\n    return nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n  const getOption = value => {\n    const selectValue = getValueKey(value);\n    if (filteredOptionsValueMap.value.has(selectValue)) {\n      const {\n        option\n      } = filteredOptionsValueMap.value.get(selectValue);\n      return option;\n    }\n    return {\n      value,\n      label: value\n    };\n  };\n  const initStates = () => {\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        for (const value of props.modelValue) {\n          const option = getOption(value);\n          states.cachedOptions.push(option);\n        }\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = void 0;\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(getValue(option)) === getValueKey(props.modelValue));\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex]);\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue);\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = void 0;\n      }\n    }\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n  watch(expanded, val => {\n    if (val) {\n      handleQueryChange(\"\");\n    } else {\n      states.inputValue = \"\";\n      states.previousQuery = null;\n      states.isBeforeHide = true;\n      createNewOption(\"\");\n    }\n    emit(\"visible-change\", val);\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n    if (!val || val.toString() !== states.previousValue) {\n      initStates();\n    }\n    if (!isEqual(val, oldVal) && props.validateEvent) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  watch(() => props.options, () => {\n    const input = inputRef.value;\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true\n  });\n  watch(() => filteredOptions.value, () => {\n    return menuRef.value && nextTick(menuRef.value.resetScrollTop);\n  });\n  watchEffect(() => {\n    if (states.isBeforeHide) return;\n    updateOptions();\n  });\n  onMounted(() => {\n    initStates();\n  });\n  useResizeObserver(selectRef, handleResize);\n  useResizeObserver(selectionRef, resetSelectionWidth);\n  useResizeObserver(calculatorRef, resetCalculatorWidth);\n  useResizeObserver(menuRef, updateTooltip);\n  useResizeObserver(tagMenuRef, updateTagTooltip);\n  return {\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce: debounce$1,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\nexport { useSelect as default };","map":{"version":3,"names":["MINIMUM_INPUT_WIDTH","useSelect","props","emit","t","useLocale","nsSelect","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","inputId","useFormItemInputId","formItemContext","getLabel","getValue","getDisabled","getOptions","useProps","states","reactive","inputValue","cachedOptions","createdOptions","hoveringIndex","inputHovering","selectionWidth","calculatorWidth","previousQuery","previousValue","selectedLabel","menuVisibleOnFocus","isBeforeHide","selectedIndex","ref","popperSize","selectRef","selectionRef","tooltipRef","tagTooltipRef","inputRef","calculatorRef","prefixRef","suffixRef","menuRef","tagMenuRef","wrapperRef","isFocused","handleFocus","handleBlur","useFocusController","afterFocus","automaticDropdown","expanded","value","beforeBlur","event","_a","_b","isFocusInsideContent","afterBlur","allOptions","filteredOptions","selectDisabled","computed","disabled","popupHeight","totalHeight","length","itemHeight","height","hasModelValue","multiple","isArray","modelValue","showClearBtn","criteria","clearable","iconComponent","remote","filterable","ArrowDown","iconReverse","is","validateState","validateIcon","ValidateComponentsMap","debounce$1","emptyText","loading","loadingText","noMatchText","noDataText","filterOptions","query","isValidOption","o","isFunction","filterMethod","remoteMethod","regexp","RegExp","escapeStringRegexp","test","options","reduce","all","item","filtered","filter","push","label","isTitle","type","updateOptions","filteredOptionsValueMap","valueMap","Map","forEach","option","index","set","getValueKey","optionsAllDisabled","every","selectSize","useFormSize","collapseTagSize","calculatePopperSize","offsetWidth","tagStyle","maxWidth","inputStyle","width","Math","max","shouldShowPlaceholder","currentPlaceholder","_placeholder","placeholder","popperRef","contentRef","indexRef","len","has","get","dropdownMenuVisible","val","showTagList","collapseTags","slice","maxCollapseTags","collapseTagList","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useInput","e","onInput","toggleMenu","onInputChange","handleQueryChange","debouncedOnInputChange","debounce","defaultFirstOption","nextTick","checkDefaultFirstOption","updateHoveringIndex","optionsInDropdown","n","userCreatedOption","find","created","firstOriginOption","getValueIndex","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","String","arr","isObject","indexOf","valueKey","some","i","handleResize","resetSelectionWidth","getBoundingClientRect","resetCalculatorWidth","updateTooltip","updatePopper","call","updateTagTooltip","onSelect","idx","selectedOptions","splice","multipleLimit","reserveKeyword","focus","deleteTag","stopPropagation","blur","handleEsc","getLastNotDisabledIndex","findLastIndex","it","handleDel","code","EVENT_CODE","delete","preventDefault","selected","lastNotDisabledIndex","handleClear","emptyValue","onKeyboardNavigate","direction","includes","newIndex","scrollToItem","onKeyboardSelect","onHoverOption","findIndex","min","map","target","handleClickOutside","_event","FocusEvent","handleMenuEnter","getOption","selectValue","initStates","toString","selectedItemIndex","watch","oldVal","validateEvent","validate","catch","err","debugWarn","deep","input","document","activeElement","resetScrollTop","watchEffect","onMounted","useResizeObserver","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport {\n  findLastIndex,\n  get,\n  isEqual,\n  debounce as lodashDebounce,\n} from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport {\n  useFocusController,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n} from '@element-plus/utils'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\n\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\nimport { useInput } from './useInput'\nimport { useProps } from './useProps'\n\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { Option, OptionType } from './select.types'\nimport type { ISelectV2Props } from './token'\n\nconst MINIMUM_INPUT_WIDTH = 11\n\nconst useSelect = (props: ISelectV2Props, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelect = useNamespace('select')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n  const { inputId } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n  })\n  const { getLabel, getValue, getDisabled, getOptions } = useProps(props)\n\n  const states = reactive({\n    inputValue: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    hoveringIndex: -1,\n    inputHovering: false,\n    selectionWidth: 0,\n    calculatorWidth: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    selectedLabel: '',\n    menuVisibleOnFocus: false,\n    isBeforeHide: false,\n  })\n\n  // data refs\n  const selectedIndex = ref(-1)\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const selectRef = ref<HTMLElement>(null)\n  const selectionRef = ref<HTMLElement>(null)\n  const tooltipRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const tagTooltipRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const inputRef = ref<HTMLElement>(null)\n  const calculatorRef = ref<HTMLElement>(null)\n  const prefixRef = ref<HTMLElement>(null)\n  const suffixRef = ref<HTMLElement>(null)\n  const menuRef = ref<HTMLElement>(null)\n  const tagMenuRef = ref<HTMLElement>(null)\n\n  const { wrapperRef, isFocused, handleFocus, handleBlur } = useFocusController(\n    inputRef,\n    {\n      afterFocus() {\n        if (props.automaticDropdown && !expanded.value) {\n          expanded.value = true\n          states.menuVisibleOnFocus = true\n        }\n      },\n      beforeBlur(event) {\n        return (\n          tooltipRef.value?.isFocusInsideContent(event) ||\n          tagTooltipRef.value?.isFocusInsideContent(event)\n        )\n      },\n      afterBlur() {\n        expanded.value = false\n        states.menuVisibleOnFocus = false\n      },\n    }\n  )\n\n  const allOptions = ref([])\n  const filteredOptions = ref([])\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * props.itemHeight\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return props.multiple\n      ? isArray(props.modelValue) && props.modelValue.length > 0\n      : props.modelValue !== undefined &&\n          props.modelValue !== null &&\n          props.modelValue !== ''\n  })\n\n  const showClearBtn = computed(() => {\n    const criteria =\n      props.clearable &&\n      !selectDisabled.value &&\n      states.inputHovering &&\n      hasModelValue.value\n    return criteria\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowDown\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelect.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && !states.inputValue && allOptions.value.length === 0)\n        return false\n      if (\n        props.filterable &&\n        states.inputValue &&\n        allOptions.value.length > 0 &&\n        filteredOptions.value.length === 0\n      ) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (allOptions.value.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filterOptions = (query) => {\n    const isValidOption = (o: Option): boolean => {\n      if (props.filterable && isFunction(props.filterMethod)) return true\n      if (props.filterable && props.remote && isFunction(props.remoteMethod))\n        return true\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      return query ? regexp.test(getLabel(o) || '') : true\n    }\n    if (props.loading) {\n      return []\n    }\n\n    return [...states.createdOptions, ...props.options].reduce((all, item) => {\n      const options = getOptions(item)\n\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption)\n\n        if (filtered.length > 0) {\n          all.push(\n            {\n              label: getLabel(item),\n              isTitle: true,\n              type: 'Group',\n            },\n            ...filtered,\n            { type: 'Group' }\n          )\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item)\n      }\n\n      return all\n    }, []) as OptionType[]\n  }\n\n  const updateOptions = () => {\n    allOptions.value = filterOptions('') as OptionType[]\n    filteredOptions.value = filterOptions(states.inputValue) as OptionType[]\n  }\n\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => getDisabled(option))\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const tagStyle = computed(() => {\n    return { maxWidth: `${states.selectionWidth}px` }\n  })\n\n  const inputStyle = computed(() => ({\n    width: `${Math.max(states.calculatorWidth, MINIMUM_INPUT_WIDTH)}px`,\n  }))\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.inputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? !states.inputValue : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder ?? t('el.select.placeholder')\n    return props.multiple || !hasModelValue.value\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => tooltipRef.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if (\n        (props.modelValue as Array<any>).length > 0 &&\n        filteredOptionsValueMap.value.has(props.modelValue[len - 1])\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(\n          props.modelValue[len - 1]\n        )\n        return index\n      }\n    } else {\n      if (\n        props.modelValue &&\n        filteredOptionsValueMap.value.has(props.modelValue)\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(props.modelValue)\n        return index\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(0, props.maxCollapseTags)\n      : states.cachedOptions\n  })\n\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.cachedOptions.slice(props.maxCollapseTags)\n      : []\n  })\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const toggleMenu = () => {\n    if (selectDisabled.value) return\n    if (states.menuVisibleOnFocus) {\n      // controlled by automaticDropdown\n      states.menuVisibleOnFocus = false\n    } else {\n      expanded.value = !expanded.value\n    }\n  }\n\n  const onInputChange = () => {\n    createNewOption(states.inputValue)\n    handleQueryChange(states.inputValue)\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n    if (\n      props.defaultFirstOption &&\n      (props.filterable || props.remote) &&\n      filteredOptions.value.length\n    ) {\n      nextTick(checkDefaultFirstOption)\n    } else {\n      nextTick(updateHoveringIndex)\n    }\n  }\n\n  /**\n   * find and highlight first option as default selected\n   * @remark\n   * - if the first option in dropdown list is user-created,\n   *   it would be at the end of the optionsArray\n   *   so find it and set hover.\n   *   (NOTE: there must be only one user-created option in dropdown list with query)\n   * - if there's no user-created option in list, just find the first one as usual\n   *   (NOTE: exclude options that are disabled or in disabled-group)\n   */\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = filteredOptions.value.filter(\n      (n) => !n.disabled && n.type !== 'Group'\n    )\n    const userCreatedOption = optionsInDropdown.find((n) => n.created)\n    const firstOriginOption = optionsInDropdown[0]\n    states.hoveringIndex = getValueIndex(\n      filteredOptions.value,\n      userCreatedOption || firstOriginOption\n    )\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = String(val)\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  const handleResize = () => {\n    calculatePopperSize()\n  }\n\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value.getBoundingClientRect().width\n  }\n\n  const resetCalculatorWidth = () => {\n    states.calculatorWidth = calculatorRef.value.getBoundingClientRect().width\n  }\n\n  const updateTooltip = () => {\n    tooltipRef.value?.updatePopper?.()\n  }\n\n  const updateTagTooltip = () => {\n    tagTooltipRef.value?.updatePopper?.()\n  }\n\n  const onSelect = (option: Option, idx: number) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValue(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValue(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        handleQueryChange('')\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = ''\n      }\n    } else {\n      selectedIndex.value = idx\n      states.selectedLabel = getLabel(option)\n      update(getValue(option))\n      expanded.value = false\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n    }\n    focus()\n  }\n\n  const deleteTag = (event: MouseEvent, option: Option) => {\n    let selectedOptions = (props.modelValue as any[]).slice()\n\n    const index = getValueIndex(selectedOptions, getValue(option))\n\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(selectedOptions)\n      emit('remove-tag', getValue(option))\n      removeNewOption(option)\n    }\n    event.stopPropagation()\n    focus()\n  }\n\n  const focus = () => {\n    inputRef.value?.focus()\n  }\n\n  const blur = () => {\n    inputRef.value?.blur()\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = ''\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const getLastNotDisabledIndex = (value) =>\n    findLastIndex(\n      value,\n      (it) =>\n        !states.cachedOptions.some(\n          (option) => getValue(option) === it && getDisabled(option)\n        )\n    )\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (!props.multiple) return\n    if (e.code === EVENT_CODE.delete) return\n    if (states.inputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      const lastNotDisabledIndex = getLastNotDisabledIndex(selected)\n      if (lastNotDisabledIndex < 0) return\n      selected.splice(lastNotDisabledIndex, 1)\n      const option = states.cachedOptions[lastNotDisabledIndex]\n      states.cachedOptions.splice(lastNotDisabledIndex, 1)\n      removeNewOption(option)\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = undefined\n    }\n\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    focus()\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (getDisabled(option) || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      states.hoveringIndex = newIndex\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(\n        filteredOptions.value[states.hoveringIndex],\n        states.hoveringIndex\n      )\n    }\n  }\n\n  const onHoverOption = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const updateHoveringIndex = () => {\n    if (!props.multiple) {\n      states.hoveringIndex = filteredOptions.value.findIndex((item) => {\n        return getValueKey(item) === getValueKey(props.modelValue)\n      })\n    } else {\n      if (props.modelValue.length > 0) {\n        states.hoveringIndex = Math.min(\n          ...props.modelValue.map((selected) => {\n            return filteredOptions.value.findIndex((item) => {\n              return getValue(item) === selected\n            })\n          })\n        )\n      } else {\n        states.hoveringIndex = -1\n      }\n    }\n  }\n\n  const onInput = (event) => {\n    states.inputValue = event.target.value\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = (event: Event) => {\n    expanded.value = false\n\n    if (isFocused.value) {\n      const _event = new FocusEvent('focus', event)\n      handleBlur(_event)\n    }\n  }\n\n  const handleMenuEnter = () => {\n    return nextTick(() => {\n      if (~indexRef.value) {\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const getOption = (value) => {\n    // match the option with the given value, if not found, create a new option\n    const selectValue = getValueKey(value)\n\n    if (filteredOptionsValueMap.value.has(selectValue)) {\n      const { option } = filteredOptionsValueMap.value.get(selectValue)\n\n      return option\n    }\n    return {\n      value,\n      label: value,\n    }\n  }\n\n  const initStates = () => {\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n\n        for (const value of props.modelValue) {\n          const option = getOption(value)\n          states.cachedOptions.push(option)\n        }\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) =>\n            getValueKey(getValue(option)) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex])\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue)\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    if (val) {\n      handleQueryChange('')\n    } else {\n      states.inputValue = ''\n      states.previousQuery = null\n      states.isBeforeHide = true\n      createNewOption('')\n    }\n    emit('visible-change', val)\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (!val || val.toString() !== states.previousValue) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(\n    () => filteredOptions.value,\n    () => {\n      return menuRef.value && nextTick(menuRef.value.resetScrollTop)\n    }\n  )\n\n  watchEffect(() => {\n    // Anything could cause options changed, then update options\n    // If you want to control it by condition, write here\n    if (states.isBeforeHide) return\n    updateOptions()\n  })\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n  useResizeObserver(selectionRef, resetSelectionWidth)\n  useResizeObserver(calculatorRef, resetCalculatorWidth)\n  useResizeObserver(menuRef, updateTooltip)\n  useResizeObserver(tagMenuRef, updateTagTooltip)\n\n  return {\n    // data exports\n    inputId,\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    allOptions,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    tagStyle,\n    inputStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    isFocused,\n    nsSelect,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    inputRef,\n    menuRef,\n    tagMenuRef,\n    tooltipRef,\n    tagTooltipRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    prefixRef,\n    suffixRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    focus,\n    blur,\n    handleMenuEnter,\n    handleResize,\n    resetSelectionWidth,\n    resetCalculatorWidth,\n    updateTooltip,\n    updateTagTooltip,\n    updateOptions,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: onHoverOption,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}