{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = $event => $options.dropFile($props.dropFiles)),\n    id: \"myButton\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 删除文件\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_button","onClick","_cache","$event","$options","dropFile","$props","dropFiles","id","default","_withCtx","_createTextVNode","_"],"sources":["C:\\git\\v0.1.0\\restvue003\\src\\components\\dropFiles.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-button @click=\"dropFile(dropFiles)\" id=\"myButton\"> 删除文件</el-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    name: 'dropFiles',\r\n\r\n    props: ['dropFiles'],\r\n    methods: {\r\n        async dropFile(dropFiles) {\r\n            let button = document.getElementById('myButton')\r\n            button.setAttribute('disabled')\r\n            await axios({\r\n                url: this.$store.state.api + '/dropFiles',\r\n                method: 'get',\r\n                params: {\r\n                    'dropFilesName': this.$store.state.DirPath + '/' + dropFiles\r\n                }\r\n            }).then(res => {\r\n                if (res.data.type == '删除文件成功') {\r\n                    axios({\r\n                        url: this.$store.state.api + '/DirsFileList',\r\n                        method: \"post\",\r\n                        params: {\r\n                            'DirsFileList': this.$store.state.DirPath\r\n                        },\r\n                    }).then(res => {\r\n                        this.$store.state.DirsFileList = res.data.data\r\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n                            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": '查看文件' }\r\n\r\n                        }\r\n\r\n                    })\r\n                }\r\n                if (res.data.type == '删除文件夹成功') {\r\n                    axios({\r\n                        url: this.$store.state.api + '/' + 'DirsFileList',\r\n                        method: \"post\",\r\n                        params: {\r\n                            'DirsFileList': 'no'\r\n                        }\r\n                    }).then(res => {\r\n\r\n                        this.$store.state.DirsFileList = res.data.data\r\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n                            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": false }\r\n                        }\r\n                    })\r\n                    axios({\r\n                        url: this.$store.state.api + \"/OpenDir\",\r\n                        method: 'post',\r\n                    }).then(res => {\r\n                        let h = Object.values(res.data.su)\r\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n                            for (let j = 0; j <= h.length; j++) {\r\n                                if (this.$store.state.DirsFileList[i].data == h[j]) {\r\n                                    this.$store.state.DirsFileList[i].FileType = '文件夹'\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    })\r\n\r\n                    axios({\r\n                        url: this.$store.state.api + \"/filesypess\",\r\n                        method: \"get\",\r\n                        params: {\r\n                            'filesypessPath': this.$store.state.DirPath\r\n                        }\r\n                    }).then(res => {\r\n                        this.$store.state.otherDirsType = res.data.data\r\n                        let h = Object.values(res.data.filesypessPathlistTypes)\r\n                        for (let i = 0; i < h.length; i++) {\r\n                            this.$store.state.DirsFileList[h[i].index].FileType = h[i].filesypessPathlistType\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped></style>"],"mappings":";;;uBACIA,mBAAA,CAEM,cADFC,YAAA,CAAuEC,oBAAA;IAA3DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ,CAACC,MAAA,CAAAC,SAAS;IAAGC,EAAE,EAAC;;IAFnDC,OAAA,EAAAC,QAAA,CAE8D,MAAK,CAFnEC,gBAAA,CAE8D,OAAK,E;IAFnEC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}