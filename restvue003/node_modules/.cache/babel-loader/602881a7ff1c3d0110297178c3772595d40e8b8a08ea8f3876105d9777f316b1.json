{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_form, {\n    ref: \"form\",\n    model: $data.form,\n    \"label-width\": \"80px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.name = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.form.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" <el-form-item label=\\\"在输入一次密码\\\">\\r\\n                <el-input v-model=\\\"form.Twopassword\\\"></el-input>\\r\\n            </el-form-item> \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_form","ref","model","$data","form","default","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","name","_cache","$event","_","password","_createCommentVNode"],"sources":["D:\\code\\lan\\LAN-Sharing\\restvue003\\src\\components\\ViewLogup\\LogupView.vue"],"sourcesContent":["<template>\r\n    <div >\r\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"用户名\">\r\n                <el-input v-model=\"form.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\">\r\n                <el-input v-model=\"form.password\"></el-input>\r\n            </el-form-item>\r\n            <!-- <el-form-item label=\"在输入一次密码\">\r\n                <el-input v-model=\"form.Twopassword\"></el-input>\r\n            </el-form-item> -->\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import {  ElMessageBox } from 'element-plus'\r\n// import CryptoJS from 'crypto-js';\r\n// import axios from 'axios';\r\n// import {KeyMain}from '@/components/Common/KeyMain.js'\r\nexport default{\r\n    name:'LogupView',\r\n    data(){\r\n        return{\r\n            form:{\r\n                name:\"\",\r\n                password:\"\",\r\n                Twopassword:\"\"\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        LogIn(){\r\n            \r\n    //         const UsesCheck=/^[A-Za-z0-9_]{6,12}$/\r\n    //         const passwordCheck=/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&.])[A-Za-z\\d@$!%*?&.]{8,16}$/\r\n    //         if (this.Uses=='' && this.Password=='' ){\r\n    //             ElMessageBox.alert(\"用户名和密码不能为空\", '为空检测', {\r\n    //                 showConfirmButton:true,\r\n    //                 confirmButtonText: '确认',\r\n    //            }).catch(()=>{\r\n    //                this.Uses=''\r\n    //                this.Password=''\r\n                    \r\n    //            })\r\n    //            return 0\r\n    //         }\r\n    //         if (this.Uses.match(UsesCheck)==null){\r\n    //             ElMessageBox.alert(\"用户名只能包含大小写字母、数字和下划线，且长度在6到12个字符之间\", '用户名错误', {\r\n    //                 showConfirmButton:true,\r\n    //                 confirmButtonText: '确认',\r\n    //            }).catch(()=>{\r\n    //                 this.Uses=''\r\n    //                 this.Password=''\r\n                    \r\n    //            })\r\n    //            return 0\r\n    //         }\r\n    //         if (this.Password.match(passwordCheck)==null){\r\n    //             ElMessageBox.alert(\"一个大写字母、一个小写字母、一个数字和一个特殊字符，且长度至少为8个字符\", '密码错误', {\r\n    //                 showConfirmButton:true,\r\n    //                 confirmButtonText: '确认',\r\n    //            }).catch(()=>{\r\n    //                this.Uses=''\r\n    //                this.Password=''\r\n                    \r\n    //            })\r\n    //            console.log(this.Password );\r\n               \r\n    //            return 0\r\n    //         }\r\n    //         if (this.Password.match(passwordCheck)!=null && this.Uses.match(UsesCheck)!=null && this.Uses!='' && this.Password!='' ){\r\n    //                 KeyMain(this.Password)\r\n                \r\n    //             axios({ \r\n    //                 url:this.$store.state.api+'/login',\r\n    //                 method:\"get\",\r\n    //                 params:{\r\n    //                 'MD5AESBehind': KeyMain(this.Password)  ,\r\n    //                 'Time':Date.now(),\r\n    //             }\r\n    //             })\r\n    //         }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n/* .Uses{\r\n   \r\n} */\r\nspan{\r\n    padding-right: 1%; \r\n      \r\n} \r\n.InputStyle{\r\n    padding-bottom: 2%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n}\r\n</style>"],"mappings":";;;;;uBACIA,mBAAA,CAYM,cAXFC,YAAA,CAUUC,kBAAA;IAVDC,GAAG,EAAC,MAAM;IAAEC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IAAE,aAAW,EAAC;;IAFtDC,OAAA,EAAAC,QAAA,CAGY,MAEe,CAFfP,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC;IAAK;MAHrCH,OAAA,EAAAC,QAAA,CAIgB,MAAyC,CAAzCP,YAAA,CAAyCU,mBAAA;QAJzDC,UAAA,EAImCP,KAAA,CAAAC,IAAI,CAACO,IAAI;QAJ5C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAImCV,KAAA,CAAAC,IAAI,CAACO,IAAI,GAAAE,MAAA;;MAJ5CC,CAAA;QAMYf,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC;IAAI;MANpCH,OAAA,EAAAC,QAAA,CAOgB,MAA6C,CAA7CP,YAAA,CAA6CU,mBAAA;QAP7DC,UAAA,EAOmCP,KAAA,CAAAC,IAAI,CAACW,QAAQ;QAPhD,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOmCV,KAAA,CAAAC,IAAI,CAACW,QAAQ,GAAAF,MAAA;;MAPhDC,CAAA;QASYE,mBAAA,2IAEmB,C;IAX/BF,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}