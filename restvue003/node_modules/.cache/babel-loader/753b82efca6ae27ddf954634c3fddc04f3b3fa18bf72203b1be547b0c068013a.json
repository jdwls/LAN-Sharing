{"ast":null,"code":"// import axios from 'axios';\n\nexport default {\n  name: \"updataFile1test\",\n  data() {\n    return {\n      file: []\n      // filelist: []\n    };\n  },\n  methods: {\n    filesize() {\n      if (this.file != 0) return this.file.length + '个文件';\n      return '请选择目录';\n    },\n    SuLvZhuangHuang(i) {\n      if (i < 1024) {\n        return i.toFixed(2) + ' B/s';\n      } else if (i < 1024 * 1024) {\n        return (i / 1024).toFixed(2) + ' KB/s';\n      } else if (i < 1024 * 1024 * 1024) {\n        return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\n      } else {\n        return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\n      }\n    },\n    testop() {\n      this.filelist = this.$refs.yu.files;\n      let file = [];\n      for (let i = 0; i < this.filelist.length; i++) {\n        file[i] = {\n          'name': this.filelist[i].name,\n          'size': this.SuLvZhuangHuang(this.filelist[i].size),\n          'index': i\n        };\n      }\n      this.file = file;\n      this.$refs.yu.value = '';\n      for (let i = 0; i < this.filelist.length; i++) {\n        console.log(this.filelist[i]);\n      }\n    },\n    files(index, name) {\n      this.file = this.file.slice(1, index);\n      this.filelist = this.filelist.delete.index;\n      console.log(name);\n\n      // this.filelist = this.filelist.splice(1, index)\n    },\n    scyu() {\n      const formData = new FormData();\n      formData.append('file', this.filelist);\n      // axios({\n      //     url: this.$store.state.api + '/uploader',\n      //     method: 'POST',\n      //     data: formData,\n      //     headers: {\n      //         'Content-Type': 'multipart/form-data'\n      //     }\n      // })\n    }\n  }\n};","map":{"version":3,"names":["name","data","file","methods","filesize","length","SuLvZhuangHuang","i","toFixed","testop","filelist","$refs","yu","files","size","value","console","log","index","slice","delete","scyu","formData","FormData","append"],"sources":["C:\\git\\v0.1.0\\restvue003\\src\\components\\updataFile1test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <label for=\"inputfile\">\r\n            <input type=\"file\" @change=\"testop()\" ref=\"yu\" Multiple v-show=\"0\" id=\"inputfile\" />\r\n            <span class=\"spanxx\">上传文件</span>\r\n        </label>\r\n        <span>{{ filesize() }}</span>\r\n        <button @click=\"scyu()\">上传文件</button>\r\n        <el-table :data=\"file\" border style=\"width: 100%\" v-if=\"file.length != 0\" class=\"pp\">\r\n            <el-table-column prop=\"name\" label=\"Name\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"size\" label=\"size\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"drop\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                    <el-button @click=\" files(scope.row.i, scope.row.name)\">删除文件</el-button>\r\n\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios';\r\n\r\nexport default {\r\n    name: \"updataFile1test\",\r\n    data() {\r\n        return {\r\n            file: [],\r\n            // filelist: []\r\n        }\r\n    },\r\n    methods: {\r\n        filesize() {\r\n            if (this.file != 0)\r\n                return this.file.length + '个文件'\r\n            return '请选择目录'\r\n        },\r\n        SuLvZhuangHuang(i) {\r\n            if (i < 1024) {\r\n                return i.toFixed(2) + ' B/s';\r\n            } else if (i < 1024 * 1024) {\r\n                return (i / 1024).toFixed(2) + ' KB/s';\r\n            } else if (i < 1024 * 1024 * 1024) {\r\n                return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\r\n            } else {\r\n                return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\r\n            }\r\n        },\r\n        testop() {\r\n            this.filelist = this.$refs.yu.files\r\n            let file = []\r\n            for (let i = 0; i < this.filelist.length; i++) {\r\n                file[i] = { 'name': this.filelist[i].name, 'size': this.SuLvZhuangHuang(this.filelist[i].size), 'index': i }\r\n            }\r\n            this.file = file\r\n            this.$refs.yu.value = ''\r\n            for (let i = 0; i < this.filelist.length; i++) {\r\n                console.log(this.filelist[i]);\r\n            }\r\n        },\r\n        files(index, name) {\r\n            this.file = this.file.slice(1, index)\r\n            this.filelist = this.filelist.delete.index\r\n            console.log(name);\r\n\r\n            // this.filelist = this.filelist.splice(1, index)\r\n\r\n        },\r\n        scyu() {\r\n            const formData = new FormData();\r\n            formData.append('file', this.filelist);\r\n            // axios({\r\n            //     url: this.$store.state.api + '/uploader',\r\n            //     method: 'POST',\r\n            //     data: formData,\r\n            //     headers: {\r\n            //         'Content-Type': 'multipart/form-data'\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pp {\r\n    height: 320px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.spanxx {\r\n    background-color: rgb(64, 158, 255);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    opacity: 0.8;\r\n}\r\n</style>"],"mappings":"AAwBA;;AAEA,eAAe;EACXA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;MACN;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACF,IAAG,IAAK,CAAC,EACd,OAAO,IAAI,CAACA,IAAI,CAACG,MAAK,GAAI,KAAI;MAClC,OAAO,OAAM;IACjB,CAAC;IACDC,eAAeA,CAACC,CAAC,EAAE;MACf,IAAIA,CAAA,GAAI,IAAI,EAAE;QACV,OAAOA,CAAC,CAACC,OAAO,CAAC,CAAC,IAAI,MAAM;MAChC,OAAO,IAAID,CAAA,GAAI,IAAG,GAAI,IAAI,EAAE;QACxB,OAAO,CAACA,CAAA,GAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MAC1C,OAAO,IAAID,CAAA,GAAI,IAAG,GAAI,IAAG,GAAI,IAAI,EAAE;QAC/B,OAAO,CAACA,CAAA,IAAK,IAAG,GAAI,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MACnD,OAAO;QACH,OAAO,CAACD,CAAA,IAAK,IAAG,GAAI,IAAG,GAAI,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MAC1D;IACJ,CAAC;IACDC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACC,QAAO,GAAI,IAAI,CAACC,KAAK,CAACC,EAAE,CAACC,KAAI;MAClC,IAAIX,IAAG,GAAI,EAAC;MACZ,KAAK,IAAIK,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACG,QAAQ,CAACL,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC3CL,IAAI,CAACK,CAAC,IAAI;UAAE,MAAM,EAAE,IAAI,CAACG,QAAQ,CAACH,CAAC,CAAC,CAACP,IAAI;UAAE,MAAM,EAAE,IAAI,CAACM,eAAe,CAAC,IAAI,CAACI,QAAQ,CAACH,CAAC,CAAC,CAACO,IAAI,CAAC;UAAE,OAAO,EAAEP;QAAE;MAC/G;MACA,IAAI,CAACL,IAAG,GAAIA,IAAG;MACf,IAAI,CAACS,KAAK,CAACC,EAAE,CAACG,KAAI,GAAI,EAAC;MACvB,KAAK,IAAIR,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACG,QAAQ,CAACL,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC3CS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAACH,CAAC,CAAC,CAAC;MACjC;IACJ,CAAC;IACDM,KAAKA,CAACK,KAAK,EAAElB,IAAI,EAAE;MACf,IAAI,CAACE,IAAG,GAAI,IAAI,CAACA,IAAI,CAACiB,KAAK,CAAC,CAAC,EAAED,KAAK;MACpC,IAAI,CAACR,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACU,MAAM,CAACF,KAAI;MACzCF,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC;;MAEjB;IAEJ,CAAC;IACDqB,IAAIA,CAAA,EAAG;MACH,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACd,QAAQ,CAAC;MACtC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}