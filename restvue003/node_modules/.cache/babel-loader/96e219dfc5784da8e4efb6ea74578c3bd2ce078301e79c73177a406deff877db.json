{"ast":null,"code":"export function KeyMain(data) {\n  let KeyMainChar = '2002052820150803';\n  let KeyMainlist = KeyMainChar.split('');\n  let KeyMainAscll = [];\n  // 密钥转成ASCll码\n  for (let i = 0; i <= KeyMainlist.length - 1; i++) {\n    KeyMainAscll[i] = KeyMainlist[i].charCodeAt();\n  }\n  let Passwordlist = data.split('');\n  let PasswordAscll = [];\n  // 密码转成ASCll码\n  for (let i = 0; i <= PasswordAscll.length - 1; i++) {\n    PasswordAscll[i] = Passwordlist[i].charCodeAt();\n  }\n  // 密码补码+到16位\n  if (PasswordAscll.length != 16) {\n    for (let i = PasswordAscll.length; i < 15; i++) {\n      PasswordAscll[i + 1] = 65;\n      console.log(PasswordAscll[i]);\n    }\n  }\n  //  混淆原来的加密密钥\n  for (let i = 0; i <= KeyMainAscll.length - 1; i++) {\n    if (KeyMainAscll[i] + i * (16 - i) <= 127) {\n      KeyMainAscll[i] = KeyMainAscll[i] + i * (16 - i);\n    } else {\n      KeyMainAscll[i] = (KeyMainAscll[i] + i * (16 - i)) / 2;\n    }\n  }\n\n  // 加密数据\n  let PasswordCoryBehind = [];\n  for (let i = 0; i < KeyMainAscll.length; i++) {\n    if (PasswordAscll[i] + KeyMainAscll[i] <= 127) PasswordCoryBehind[i] = PasswordAscll[i] + KeyMainAscll[i];else {\n      PasswordCoryBehind[i] = (PasswordAscll[i] + KeyMainAscll[i]) / 2;\n    }\n  }\n  console.log(PasswordCoryBehind);\n}\nexport default KeyMain;","map":{"version":3,"names":["KeyMain","data","KeyMainChar","KeyMainlist","split","KeyMainAscll","i","length","charCodeAt","Passwordlist","PasswordAscll","console","log","PasswordCoryBehind"],"sources":["C:/Users/Admin/Desktop/LAN-Sharing-0.1.0/restvue003/src/components/Common/KeyMain.js"],"sourcesContent":["export function KeyMain(data){\r\n    let KeyMainChar='2002052820150803'\r\n    let KeyMainlist=KeyMainChar.split('')\r\n    let KeyMainAscll=[]\r\n// 密钥转成ASCll码\r\n    for(let i=0;i<=KeyMainlist.length-1;i++){\r\n        KeyMainAscll[i]=KeyMainlist[i].charCodeAt()\r\n    }\r\n    let Passwordlist=data.split('')\r\n    let PasswordAscll=[ ]\r\n// 密码转成ASCll码\r\n    for(let i=0;i<=PasswordAscll.length-1;i++){\r\n        PasswordAscll[i]=Passwordlist[i].charCodeAt()\r\n    }\r\n// 密码补码+到16位\r\nif(PasswordAscll.length!=16){\r\n    for(let i=PasswordAscll.length;i<15;i++){\r\n        PasswordAscll[i+1]=65\r\n        console.log(PasswordAscll[i]);\r\n        \r\n    }\r\n}   \r\n//  混淆原来的加密密钥\r\n    for(let i=0;i<=KeyMainAscll.length-1;i++){\r\n        if (KeyMainAscll[i]+i*(16-i)<=127){\r\n            KeyMainAscll[i]=KeyMainAscll[i]+i*(16-i)\r\n        }\r\n        else {\r\n            KeyMainAscll[i]=(KeyMainAscll[i]+i*(16-i))/2\r\n        }  \r\n    }\r\n\r\n// 加密数据\r\n    let PasswordCoryBehind=[ ]\r\n    for(let i=0;i<KeyMainAscll.length;i++){\r\n        if(PasswordAscll[i]+KeyMainAscll[i]<=127)\r\n            PasswordCoryBehind[i]=PasswordAscll[i]+KeyMainAscll[i]\r\n        else{\r\n            PasswordCoryBehind[i]=(PasswordAscll[i]+KeyMainAscll[i])/2\r\n        }\r\n    }\r\n    console.log(PasswordCoryBehind);\r\n    \r\n\r\n}\r\nexport default KeyMain"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAC;EACzB,IAAIC,WAAW,GAAC,kBAAkB;EAClC,IAAIC,WAAW,GAACD,WAAW,CAACE,KAAK,CAAC,EAAE,CAAC;EACrC,IAAIC,YAAY,GAAC,EAAE;EACvB;EACI,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEH,WAAW,CAACI,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IACpCD,YAAY,CAACC,CAAC,CAAC,GAACH,WAAW,CAACG,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC/C;EACA,IAAIC,YAAY,GAACR,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC;EAC/B,IAAIM,aAAa,GAAC,EAAG;EACzB;EACI,KAAI,IAAIJ,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEI,aAAa,CAACH,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IACtCI,aAAa,CAACJ,CAAC,CAAC,GAACG,YAAY,CAACH,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACjD;EACJ;EACA,IAAGE,aAAa,CAACH,MAAM,IAAE,EAAE,EAAC;IACxB,KAAI,IAAID,CAAC,GAACI,aAAa,CAACH,MAAM,EAACD,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAAC;MACpCI,aAAa,CAACJ,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE;MACrBK,OAAO,CAACC,GAAG,CAACF,aAAa,CAACJ,CAAC,CAAC,CAAC;IAEjC;EACJ;EACA;EACI,KAAI,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,IAAED,YAAY,CAACE,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAC;IACrC,IAAID,YAAY,CAACC,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC,IAAE,GAAG,EAAC;MAC9BD,YAAY,CAACC,CAAC,CAAC,GAACD,YAAY,CAACC,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC;IAC5C,CAAC,MACI;MACDD,YAAY,CAACC,CAAC,CAAC,GAAC,CAACD,YAAY,CAACC,CAAC,CAAC,GAACA,CAAC,IAAE,EAAE,GAACA,CAAC,CAAC,IAAE,CAAC;IAChD;EACJ;;EAEJ;EACI,IAAIO,kBAAkB,GAAC,EAAG;EAC1B,KAAI,IAAIP,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,YAAY,CAACE,MAAM,EAACD,CAAC,EAAE,EAAC;IAClC,IAAGI,aAAa,CAACJ,CAAC,CAAC,GAACD,YAAY,CAACC,CAAC,CAAC,IAAE,GAAG,EACpCO,kBAAkB,CAACP,CAAC,CAAC,GAACI,aAAa,CAACJ,CAAC,CAAC,GAACD,YAAY,CAACC,CAAC,CAAC,MACtD;MACAO,kBAAkB,CAACP,CAAC,CAAC,GAAC,CAACI,aAAa,CAACJ,CAAC,CAAC,GAACD,YAAY,CAACC,CAAC,CAAC,IAAE,CAAC;IAC9D;EACJ;EACAK,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;AAGnC;AACA,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}