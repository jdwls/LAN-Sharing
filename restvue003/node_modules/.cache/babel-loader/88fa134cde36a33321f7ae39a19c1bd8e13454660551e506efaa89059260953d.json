{"ast":null,"code":"import { ElMessageBox } from 'element-plus';\n// import CryptoJS from 'crypto-js';\n// import axios from 'axios';\n// import {KeyMain}from '@/components/Common/KeyMain.js'\nexport default {\n  name: 'LogupView',\n  data() {\n    return {\n      form: {\n        name: \"\",\n        password: \"\",\n        Twopassword: \"\"\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      const UsesCheck = /^[A-Za-z0-9_]{6,12}$/;\n      // const passwordCheck=/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&.])[A-Za-z\\d@$!%*?&.]{8,16}$/\n      if (this.form.name == '' || this.form.password == '' || this.form.Twopassword == '') {\n        ElMessageBox.alert(\"用户名和密码不能为空\", '为空检测', {\n          showConfirmButton: true,\n          confirmButtonText: '确认'\n        }).then(() => {\n          this.form.name = '';\n          this.form.password = '';\n          this.form.Twopassword = '';\n        });\n        return 0;\n      }\n      if (this.form.name.match(UsesCheck) == null) {\n        ElMessageBox.alert(\"用户名只能包含大小写字母、数字和下划线，且长度在6到12个字符之间\", '用户名错误', {\n          showConfirmButton: true,\n          confirmButtonText: '确认'\n        }).then(() => {\n          this.form.name = '';\n          this.form.password = '';\n          this.form.Twopassword = '';\n        });\n        return 0;\n      }\n      //         if (this.Password.match(passwordCheck)==null){\n      //             ElMessageBox.alert(\"一个大写字母、一个小写字母、一个数字和一个特殊字符，且长度至少为8个字符\", '密码错误', {\n      //                 showConfirmButton:true,\n      //                 confirmButtonText: '确认',\n      //            }).catch(()=>{\n      //                this.Uses=''\n      //                this.Password=''\n\n      //            })\n      //            console.log(this.Password );\n\n      //            return 0\n      //         }\n      //         if (this.Password.match(passwordCheck)!=null && this.Uses.match(UsesCheck)!=null && this.Uses!='' && this.Password!='' ){\n      //                 KeyMain(this.Password)\n\n      //             axios({ \n      //                 url:this.$store.state.api+'/login',\n      //                 method:\"get\",\n      //                 params:{\n      //                 'MD5AESBehind': KeyMain(this.Password)  ,\n      //                 'Time':Date.now(),\n      //             }\n      //             })\n      //         }\n    }\n  }\n};","map":{"version":3,"names":["ElMessageBox","name","data","form","password","Twopassword","methods","submitForm","UsesCheck","alert","showConfirmButton","confirmButtonText","then","match"],"sources":["D:\\code\\lan\\LAN-Sharing\\restvue003\\src\\components\\ViewLogup\\LogupView.vue"],"sourcesContent":["<template>\r\n    <div   class=\"InputStyle\">\r\n        <el-form :model=\"form\" label-width=\"auto\"  style=\"width: 45%\">\r\n            <el-form-item label=\"用户名:\">\r\n                <el-input v-model=\"form.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码:\">\r\n                <el-input v-model=\"form.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"在输入一次密码:\">\r\n                <el-input v-model=\"form.Twopassword\"></el-input>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm()\">注册</el-button>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {  ElMessageBox } from 'element-plus'\r\n// import CryptoJS from 'crypto-js';\r\n// import axios from 'axios';\r\n// import {KeyMain}from '@/components/Common/KeyMain.js'\r\nexport default{\r\n    name:'LogupView',\r\n    data(){\r\n        return{\r\n            form:{\r\n                name:\"\",\r\n                password:\"\",\r\n                Twopassword:\"\"\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        submitForm(){    \r\n            const UsesCheck=/^[A-Za-z0-9_]{6,12}$/\r\n            // const passwordCheck=/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&.])[A-Za-z\\d@$!%*?&.]{8,16}$/\r\n            if (this.form.name=='' || this.form.password=='' || this.form.Twopassword==''){\r\n                ElMessageBox.alert(\"用户名和密码不能为空\", '为空检测', {\r\n                    showConfirmButton:true,\r\n                    confirmButtonText: '确认',\r\n               }).then(()=>{\r\n                this.form.name='' \r\n                this.form.password=''\r\n                this.form.Twopassword=''\r\n               })\r\n               return 0\r\n            }\r\n            if (this.form.name.match(UsesCheck)==null){\r\n                ElMessageBox.alert(\"用户名只能包含大小写字母、数字和下划线，且长度在6到12个字符之间\", '用户名错误', {\r\n                    showConfirmButton:true,\r\n                    confirmButtonText: '确认',\r\n               }).then(()=>{\r\n                this.form.name='' \r\n                this.form.password=''\r\n                this.form.Twopassword=''\r\n                    \r\n               })\r\n               return 0\r\n            }\r\n    //         if (this.Password.match(passwordCheck)==null){\r\n    //             ElMessageBox.alert(\"一个大写字母、一个小写字母、一个数字和一个特殊字符，且长度至少为8个字符\", '密码错误', {\r\n    //                 showConfirmButton:true,\r\n    //                 confirmButtonText: '确认',\r\n    //            }).catch(()=>{\r\n    //                this.Uses=''\r\n    //                this.Password=''\r\n                    \r\n    //            })\r\n    //            console.log(this.Password );\r\n               \r\n    //            return 0\r\n    //         }\r\n    //         if (this.Password.match(passwordCheck)!=null && this.Uses.match(UsesCheck)!=null && this.Uses!='' && this.Password!='' ){\r\n    //                 KeyMain(this.Password)\r\n                \r\n    //             axios({ \r\n    //                 url:this.$store.state.api+'/login',\r\n    //                 method:\"get\",\r\n    //                 params:{\r\n    //                 'MD5AESBehind': KeyMain(this.Password)  ,\r\n    //                 'Time':Date.now(),\r\n    //             }\r\n    //             })\r\n    //         }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n/* .Uses{\r\n   \r\n} */\r\nspan{\r\n    padding-right: 1%; \r\n      \r\n} \r\n.InputStyle{\r\n    padding-bottom: 2%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n}\r\n</style>"],"mappings":"AAkBA,SAAUA,YAAW,QAAS,cAAa;AAC3C;AACA;AACA;AACA,eAAc;EACVC,IAAI,EAAC,WAAW;EAChBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,IAAI,EAAC;QACDF,IAAI,EAAC,EAAE;QACPG,QAAQ,EAAC,EAAE;QACXC,WAAW,EAAC;MAChB;IACJ;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,UAAUA,CAAA,EAAE;MACR,MAAMC,SAAS,GAAC,sBAAqB;MACrC;MACA,IAAI,IAAI,CAACL,IAAI,CAACF,IAAI,IAAE,EAAC,IAAK,IAAI,CAACE,IAAI,CAACC,QAAQ,IAAE,EAAC,IAAK,IAAI,CAACD,IAAI,CAACE,WAAW,IAAE,EAAE,EAAC;QAC1EL,YAAY,CAACS,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE;UACrCC,iBAAiB,EAAC,IAAI;UACtBC,iBAAiB,EAAE;QACxB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;UACX,IAAI,CAACT,IAAI,CAACF,IAAI,GAAC,EAAC;UAChB,IAAI,CAACE,IAAI,CAACC,QAAQ,GAAC,EAAC;UACpB,IAAI,CAACD,IAAI,CAACE,WAAW,GAAC,EAAC;QACxB,CAAC;QACD,OAAO;MACV;MACA,IAAI,IAAI,CAACF,IAAI,CAACF,IAAI,CAACY,KAAK,CAACL,SAAS,CAAC,IAAE,IAAI,EAAC;QACtCR,YAAY,CAACS,KAAK,CAAC,mCAAmC,EAAE,OAAO,EAAE;UAC7DC,iBAAiB,EAAC,IAAI;UACtBC,iBAAiB,EAAE;QACxB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;UACX,IAAI,CAACT,IAAI,CAACF,IAAI,GAAC,EAAC;UAChB,IAAI,CAACE,IAAI,CAACC,QAAQ,GAAC,EAAC;UACpB,IAAI,CAACD,IAAI,CAACE,WAAW,GAAC,EAAC;QAExB,CAAC;QACD,OAAO;MACV;MACR;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACI;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}