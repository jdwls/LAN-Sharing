{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_vue_upload_component = _resolveComponent(\"vue-upload-component\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_vue_upload_component, {\n        ref: \"upload\",\n        \"post-action\": _ctx.$store.state.api + '/uploaders',\n        directory: \"\",\n        multiple: \"\",\n        modelValue: $data.files,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.files = $event),\n        onClick: _cache[1] || (_cache[1] = $event => $options.fiel()),\n        onInputFile: $options.inputFile,\n        thread: 5,\n        data: $data.additionalData\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, null, {\n          default: _withCtx(() => [_createTextVNode(\"上传目录\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"post-action\", \"modelValue\", \"onInputFile\", \"data\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $options.startUpload\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"开始上传\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[2] || (_cache[2] = $event => $options.clearFiles($data.files))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"取消选择\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$store.state.files, i => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: i\n    }, [_createVNode(_component_el_row, null, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 4\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"文件名: \" + _toDisplayString(i.name), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_el_col, {\n        span: 4\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"大小:\" + _toDisplayString($options.SuLvZhuangHuang(i.size)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_row","default","_withCtx","_component_el_col","span","_component_vue_upload_component","ref","_ctx","$store","state","api","directory","multiple","modelValue","$data","files","_cache","$event","onClick","$options","fiel","onInputFile","inputFile","thread","data","additionalData","_component_el_button","_createTextVNode","_","startUpload","clearFiles","_Fragment","_renderList","i","key","_toDisplayString","name","SuLvZhuangHuang","size"],"sources":["C:\\Users\\Administered\\Desktop\\gitclone\\v0.1.0\\restvue003\\src\\components\\updataFile2.vue"],"sourcesContent":["\n<template>\n  <div>\n    <el-row>\n      <el-col :span=\"4\"> <vue-upload-component ref=\"upload\" :post-action=\"$store.state.api + '/uploaders'\" directory\n          multiple v-model=\"files\" @click=\"fiel()\" @input-file=\"inputFile\" :thread=\"5\" :data=\"additionalData\">\n          <el-button>上传目录</el-button>\n        </vue-upload-component></el-col>\n      <el-col :span=\"4\"><el-button @click=\"startUpload\">开始上传</el-button></el-col>\n      <el-col :span=\"4\"><el-button @click=\"clearFiles(files)\">取消选择</el-button></el-col>\n    </el-row>\n\n    <div v-for=\"i in $store.state.files\" :key=\"i\">\n      <el-row>\n        <el-col :span=\"4\">文件名: {{ i.name }}</el-col>\n        <el-col :span=\"4\">大小:{{ SuLvZhuangHuang(i.size) }}</el-col>\n      </el-row>\n    </div>\n\n  </div>\n</template>\n<script>\nimport axios from 'axios';\nimport { ElNotification } from 'element-plus'\nimport VueUploadComponent from 'vue-upload-component'\n// import progressEl from '@/components/progressEl.vue'\nexport default {\n  name: \"updataFile2\",\n  components: {\n    'vue-upload-component': VueUploadComponent\n  },\n  data() {\n    return {\n      uploadedCount: 0,\n      totalFiles: 0,\n      totalSize: 0,\n      uploadPercentage: 10,\n      files: [],\n      additionalData: {\n        uploadpath: this.$store.state.DirPath\n      }\n\n    }\n  },\n  methods: {\n    SuLvZhuangHuang(i) {\n      if (i < 1024) {\n        return i.toFixed(2) + ' B/s';\n      } else if (i < 1024 * 1024) {\n        return (i / 1024).toFixed(2) + ' KB/s';\n      } else if (i < 1024 * 1024 * 1024) {\n        return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\n      } else {\n        return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\n      }\n    },\n    inputFile(newl) {\n      // for(let i=0;i<this.$store.state.files.length;i++)\n      // if( this.$store.state.files[i].size !==0){\n      //  console.log(this.$store.state.files[i].response);\n      // }l\n\n      console.log(this.$store.state.files);\n      this.$store.state.files = this.files\n\n      if (newl.error != '') {\n        ElNotification({\n          title: '错误',\n          message: newl.error,\n          duration: 0,\n        })\n      }\n      if (newl.success == true) {\n        ElNotification({\n          title: '成功',\n          message: newl.progress,\n          duration: 3000,\n        })\n\n        axios({\n          url: this.$store.state.api + '/DirsFileList',\n          method: \"post\",\n          params: {\n            'DirsFileList': this.$store.state.DirPath\n          },\n        }).then(res => {\n          console.log(res.data.data);\n          this.$store.state.DirsFileList = res.data.data\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": false }\n            \n          }\n        })\n      }\n\n\n\n    },\n    startUpload() {\n      for (let i = 0; i < this.$store.state.files.length; i++)\n        if (this.$store.state.files[i].size !== 0) {\n          this.$refs.upload.active = true\n          this.$store.state.FilesTyoes = '进度条'\n          this.$store.state.files[i].progress = Number(this.$store.state.files[i].progress)\n\n        }\n      console.log(this.files);\n\n\n    },\n    fiel() {\n      for (let i = 0; i < this.$store.state.files.length; i++)\n        if (this.$store.state.files[i].size !== 0) {\n          this.$store.state.files[i].size = Number(this.$store.state.files[i].size)\n\n        }\n\n    },\n    clearFiles(files) {\n      if (this.files.length != 0) {\n        this.$refs.upload.remove(files)\n        this.$store.state.files = []\n      }\n\n    },\n\n\n\n  }\n\n}\n</script>\n"],"mappings":";;;;;;uBAEEA,mBAAA,CAiBM,cAhBJC,YAAA,CAOSC,iBAAA;IAVbC,OAAA,EAAAC,QAAA,CAIM,MAGkC,CAHlCH,YAAA,CAGkCI,iBAAA;MAHzBC,IAAI,EAAE;IAAC;MAJtBH,OAAA,EAAAC,QAAA,CAIyB,MAGM,CAHNH,YAAA,CAGMM,+BAAA;QAHgBC,GAAG,EAAC,QAAQ;QAAE,aAAW,EAAEC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,GAAG;QAAiBC,SAAS,EAAT,EAAS;QAC1GC,QAAQ,EAAR,EAAQ;QALlBC,UAAA,EAK4BC,KAAA,CAAAC,KAAK;QALjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK4BH,KAAA,CAAAC,KAAK,GAAAE,MAAA;QAAGC,OAAK,EAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,QAAA,CAAAC,IAAI;QAAKC,WAAU,EAAEF,QAAA,CAAAG,SAAS;QAAGC,MAAM,EAAE,CAAC;QAAGC,IAAI,EAAEV,KAAA,CAAAW;;QAL9FxB,OAAA,EAAAC,QAAA,CAMU,MAA2B,CAA3BH,YAAA,CAA2B2B,oBAAA;UANrCzB,OAAA,EAAAC,QAAA,CAMqB,MAAI,CANzByB,gBAAA,CAMqB,MAAI,E;UANzBC,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAQM7B,YAAA,CAA2EI,iBAAA;MAAlEC,IAAI,EAAE;IAAC;MARtBH,OAAA,EAAAC,QAAA,CAQwB,MAAgD,CAAhDH,YAAA,CAAgD2B,oBAAA;QAApCR,OAAK,EAAEC,QAAA,CAAAU;MAAW;QARtD5B,OAAA,EAAAC,QAAA,CAQwD,MAAI,CAR5DyB,gBAAA,CAQwD,MAAI,E;QAR5DC,CAAA;;MAAAA,CAAA;QASM7B,YAAA,CAAiFI,iBAAA;MAAxEC,IAAI,EAAE;IAAC;MATtBH,OAAA,EAAAC,QAAA,CASwB,MAAsD,CAAtDH,YAAA,CAAsD2B,oBAAA;QAA1CR,OAAK,EAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,QAAA,CAAAW,UAAU,CAAChB,KAAA,CAAAC,KAAK;;QAT3Dd,OAAA,EAAAC,QAAA,CAS8D,MAAI,CATlEyB,gBAAA,CAS8D,MAAI,E;QATlEC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;yBAYI9B,mBAAA,CAKMiC,SAAA,QAjBVC,WAAA,CAYqBzB,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACM,KAAK,EAAvBkB,CAAC;yBAAbnC,mBAAA,CAKM;MALgCoC,GAAG,EAAED;IAAC,IAC1ClC,YAAA,CAGSC,iBAAA;MAhBfC,OAAA,EAAAC,QAAA,CAcQ,MAA4C,CAA5CH,YAAA,CAA4CI,iBAAA;QAAnCC,IAAI,EAAE;MAAC;QAdxBH,OAAA,EAAAC,QAAA,CAc0B,MAAK,CAd/ByB,gBAAA,CAc0B,OAAK,GAAAQ,gBAAA,CAAGF,CAAC,CAACG,IAAI,iB;QAdxCR,CAAA;oCAeQ7B,YAAA,CAA2DI,iBAAA;QAAlDC,IAAI,EAAE;MAAC;QAfxBH,OAAA,EAAAC,QAAA,CAe0B,MAAG,CAf7ByB,gBAAA,CAe0B,KAAG,GAAAQ,gBAAA,CAAGhB,QAAA,CAAAkB,eAAe,CAACJ,CAAC,CAACK,IAAI,kB;QAftDV,CAAA;;MAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}