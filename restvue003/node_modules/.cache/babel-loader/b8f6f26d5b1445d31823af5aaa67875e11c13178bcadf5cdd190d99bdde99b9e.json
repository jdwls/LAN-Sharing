{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'dropFiles',\n  props: ['dropFiles'],\n  methods: {\n    async dropFile(dropFiles) {\n      await axios({\n        url: this.$store.state.api + '/dropFiles',\n        method: 'get',\n        params: {\n          'dropFilesName': this.$store.state.DirPath + '/' + dropFiles\n        }\n      }).then(res => {\n        if (res.data.type == '删除文件成功') {\n          axios({\n            url: this.$store.state.api + '/DirsFileList',\n            method: \"post\",\n            params: {\n              'DirsFileList': this.$store.state.DirPath\n            }\n          }).then(res => {\n            this.$store.state.DirsFileList = res.data.data;\n            for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n              this.$store.state.DirsFileList[i] = {\n                'index': i,\n                'data': this.$store.state.DirsFileList[i],\n                \"FileType\": '查看文件'\n              };\n            }\n          });\n        }\n        if (res.data.type == '删除文件夹成功') {\n          awaxios({\n            url: this.$store.state.api + '/' + 'DirsFileList',\n            method: \"post\",\n            params: {\n              'DirsFileList': 'no'\n            }\n          }).then(res => {\n            this.$store.state.DirsFileList = res.data.data;\n            for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n              this.$store.state.DirsFileList[i] = {\n                'index': i,\n                'data': this.$store.state.DirsFileList[i],\n                \"FileType\": false\n              };\n            }\n          });\n          axios({\n            url: this.$store.state.api + \"/OpenDir\",\n            method: 'post'\n          }).then(res => {\n            let h = Object.values(res.data.su);\n            for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n              for (let j = 0; j <= h.length; j++) {\n                if (this.$store.state.DirsFileList[i].data == h[j]) {\n                  this.$store.state.DirsFileList[i].FileType = '文件夹';\n                  break;\n                }\n              }\n            }\n          });\n          axios({\n            url: this.$store.state.api + \"/filesypess\",\n            method: \"get\",\n            params: {\n              'filesypessPath': this.$store.state.DirPath\n            }\n          }).then(res => {\n            this.$store.state.otherDirsType = res.data.data;\n            let h = Object.values(res.data.filesypessPathlistTypes);\n            for (let i = 0; i < h.length; i++) {\n              this.$store.state.DirsFileList[h[i].index].FileType = h[i].filesypessPathlistType;\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","methods","dropFile","dropFiles","url","$store","state","api","method","params","DirPath","then","res","data","type","DirsFileList","i","length","awaxios","h","Object","values","su","j","FileType","otherDirsType","filesypessPathlistTypes","index","filesypessPathlistType"],"sources":["C:\\Users\\Administered\\Desktop\\gitclone\\v0.1.0\\restvue003\\src\\components\\dropFiles.vue"],"sourcesContent":["<template>\n    <div>\n        <el-button @click=\"dropFile(dropFiles)\"> 删除文件</el-button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n\nexport default {\n    name: 'dropFiles',\n    props: ['dropFiles'],\n    methods: {\n        async dropFile(dropFiles) {\n            await axios({\n                url: this.$store.state.api + '/dropFiles',\n                method: 'get',\n                params: {\n                    'dropFilesName': this.$store.state.DirPath + '/' + dropFiles\n                }\n            }).then(res => {\n                if (res.data.type == '删除文件成功') {\n                    axios({\n                        url: this.$store.state.api + '/DirsFileList',\n                        method: \"post\",\n                        params: {\n                            'DirsFileList': this.$store.state.DirPath\n                        },\n                    }).then(res => {\n                        this.$store.state.DirsFileList = res.data.data\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": '查看文件' }\n                        }\n                    })\n                }\n                if (res.data.type == '删除文件夹成功') {\n                    awaxios({\n                        url: this.$store.state.api + '/' + 'DirsFileList',\n                        method: \"post\",\n                        params: {\n                            'DirsFileList': 'no'\n                        }\n                    }).then(res => {\n                        this.$store.state.DirsFileList = res.data.data\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": false }\n                        }\n                    })\n                    axios({\n                        url: this.$store.state.api + \"/OpenDir\",\n                        method: 'post',\n                    }).then(res => {\n                        let h = Object.values(res.data.su)\n                        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                            for (let j = 0; j <= h.length; j++) {\n                                if (this.$store.state.DirsFileList[i].data == h[j]) {\n                                    this.$store.state.DirsFileList[i].FileType = '文件夹'\n                                    break\n                                }\n                            }\n                        }\n\n                    })\n\n                    axios({\n                        url: this.$store.state.api + \"/filesypess\",\n                        method: \"get\",\n                        params: {\n                            'filesypessPath': this.$store.state.DirPath\n                        }\n                    }).then(res => {\n                        this.$store.state.otherDirsType = res.data.data\n                        let h = Object.values(res.data.filesypessPathlistTypes)\n                        for (let i = 0; i < h.length; i++) {\n                            this.$store.state.DirsFileList[h[i].index].FileType = h[i].filesypessPathlistType\n                        }\n                    })\n                }\n            })\n        }\n\n\n    }\n}\n</script>\n<style scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}