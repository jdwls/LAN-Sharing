{"ast":null,"code":"export function KeyMain(data) {\n  let KeyMainChar = '2002052820150803';\n  let KeyMainlist = KeyMainChar.split('');\n  let KeyMainAscll = [];\n  let Passwordlist = data.split('');\n  let PasswordAscll = [];\n  // 密钥转成ASCll码\n  for (let i = 0; i <= KeyMainlist.length - 1; i++) {\n    KeyMainAscll[i] = KeyMainlist[i].charCodeAt();\n  }\n  // 密码转成ASCll码\n  for (let i = 0; i <= Passwordlist.length - 1; i++) {\n    PasswordAscll[i] = Passwordlist[i].charCodeAt();\n  }\n  // 密码补码+到16位\n  if (PasswordAscll.length != 16) {\n    for (let i = PasswordAscll.length; i <= 15; i++) {\n      PasswordAscll[i] = i * 5 - i;\n    }\n    console.log(PasswordAscll);\n  }\n  //  混淆原来的加密密钥\n  for (let i = 0; i <= KeyMainAscll.length - 1; i++) {\n    if (KeyMainAscll[i] + i * (16 - i) <= 127) {\n      KeyMainAscll[i] = KeyMainAscll[i] + i * (16 - i);\n    } else {\n      KeyMainAscll[i] = (KeyMainAscll[i] + i * (16 - i)) / 2;\n    }\n  }\n\n  // 加密数据\n  let PasswordCoryBehind = [];\n  for (let i = 0; i < KeyMainAscll.length; i++) {\n    if (PasswordAscll[i] + KeyMainAscll[i] <= 127) PasswordCoryBehind[i] = PasswordAscll[i] + KeyMainAscll[i];else if (PasswordAscll[i] + KeyMainAscll[i] % 2 == 0) {\n      PasswordCoryBehind[i] = (PasswordAscll[i] + KeyMainAscll[i]) / 2;\n    } else {\n      PasswordCoryBehind[i] = Math.ceil((PasswordAscll[i] + KeyMainAscll[i]) / 2);\n    }\n  }\n  // 加密后转Ascll码\n  let PasswordCoryBehindAScll = [];\n  for (let i = 0; i < PasswordCoryBehind.length; i++) {\n    PasswordCoryBehindAScll[i] = String.fromCharCode(parseInt(PasswordCoryBehind[i]));\n  }\n  // 转成字符串\n  let PasswordCoryBehindChar = '';\n  for (let i = 0; i < PasswordCoryBehindAScll.length; i++) {\n    PasswordCoryBehindChar = PasswordCoryBehindChar + PasswordCoryBehindAScll[i];\n  }\n  return PasswordCoryBehindChar;\n}\nexport default KeyMain;","map":{"version":3,"names":["KeyMain","data","KeyMainChar","KeyMainlist","split","KeyMainAscll","Passwordlist","PasswordAscll","i","length","charCodeAt","console","log","PasswordCoryBehind","Math","ceil","PasswordCoryBehindAScll","String","fromCharCode","parseInt","PasswordCoryBehindChar"],"sources":["D:/code/lan/LAN-Sharing/restvue003/src/components/Common/KeyMain.js"],"sourcesContent":["export function KeyMain(data){\r\n    let KeyMainChar='2002052820150803'\r\n    let KeyMainlist=KeyMainChar.split('')\r\n    let KeyMainAscll=[]\r\n    let Passwordlist=data.split('') \r\n    let PasswordAscll=[]\r\n// 密钥转成ASCll码\r\n    for(let i=0;i<=KeyMainlist.length-1;i++){\r\n        KeyMainAscll[i]=KeyMainlist[i].charCodeAt()\r\n\r\n        \r\n    }\r\n// 密码转成ASCll码\r\n    for(let i=0;i<=Passwordlist.length-1;i++){\r\n        \r\n        PasswordAscll[i]=Passwordlist[i].charCodeAt()\r\n\r\n    }\r\n// 密码补码+到16位\r\n    if(PasswordAscll.length!=16){\r\n        for(let i=PasswordAscll.length;i<=15;i++){\r\n            PasswordAscll[i]=i*5-i\r\n            \r\n        }\r\n        console.log(PasswordAscll);\r\n        \r\n    }   \r\n//  混淆原来的加密密钥\r\n    for(let i=0;i<=KeyMainAscll.length-1;i++){\r\n        if (KeyMainAscll[i]+i*(16-i)<=127){\r\n            KeyMainAscll[i]=KeyMainAscll[i]+i*(16-i)\r\n        }\r\n        else {\r\n            KeyMainAscll[i]=(KeyMainAscll[i]+i*(16-i))/2\r\n        }  \r\n    }\r\n\r\n// 加密数据\r\n    let PasswordCoryBehind=[ ]\r\n    for(let i=0;i<KeyMainAscll.length;i++){\r\n        if(PasswordAscll[i]+KeyMainAscll[i]<=127)\r\n            PasswordCoryBehind[i]=PasswordAscll[i]+KeyMainAscll[i]\r\n        else if(PasswordAscll[i]+KeyMainAscll[i]%2==0){\r\n            PasswordCoryBehind[i]=(PasswordAscll[i]+KeyMainAscll[i])/2\r\n        }\r\n        else{\r\n            PasswordCoryBehind[i]=Math.ceil((PasswordAscll[i]+KeyMainAscll[i])/2)\r\n        }\r\n    }\r\n// 加密后转Ascll码\r\n    let PasswordCoryBehindAScll=[]\r\n    for(let i=0;i<PasswordCoryBehind.length;i++){\r\n        PasswordCoryBehindAScll[i]=String.fromCharCode(parseInt(PasswordCoryBehind[i]))\r\n    }\r\n// 转成字符串\r\n    let PasswordCoryBehindChar=''\r\n    for(let i=0;i<PasswordCoryBehindAScll.length;i++){\r\n        PasswordCoryBehindChar=PasswordCoryBehindChar+PasswordCoryBehindAScll[i]\r\n    }\r\n    return PasswordCoryBehindChar\r\n    \r\n}\r\nexport default KeyMain"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}