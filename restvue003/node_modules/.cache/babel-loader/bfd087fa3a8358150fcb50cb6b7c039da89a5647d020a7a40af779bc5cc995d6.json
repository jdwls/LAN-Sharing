{"ast":null,"code":"import axios from 'axios';\nimport { ElMessageBox } from 'element-plus';\nexport default {\n  name: 'NewText',\n  data() {\n    return {\n      TextName: '',\n      TextConter: ''\n    };\n  },\n  methods: {\n    onSubmit() {\n      let iscatch = 0;\n      if (this.TextName != '') {\n        ElMessageBox.alert('是否创建' + this.TextName + \"的文本文件\", '是否确认创建文本文件', {\n          showConfirmButton: true,\n          showCancelButton: true,\n          confirmButtonText: '再来一个',\n          cancelButtonText: '取消'\n        }).catch(() => {\n          this.$store.state.dialogVisible = false;\n          iscatch = 1;\n        }).then(() => {\n          axios({\n            method: \"get\",\n            url: this.$store.state.api + '/TextLnsert',\n            params: {\n              'TextName': this.TextName,\n              'TextConter': this.TextConter,\n              'NowPath': this.$store.state.DirPath\n            }\n          }).then(res => {\n            if (iscatch == 1) {\n              ElMessageBox.alert(res.data.message, '创建文本状态', {\n                showConfirmButton: false,\n                showCancelButton: true,\n                cancelButtonText: '取消'\n              }).catch(() => {\n                console.log(\"成功取消\");\n              });\n            }\n          });\n          this.$store.dispatch('DirsFileList');\n          this.$store.dispatch('openDirs');\n        });\n        //  axios({\n        //         method:\"get\",\n        //         url:this.$store.state.api+'/TextLnsert',\n        //         params:{\n        //             'TextName': this.TextName,\n        //             'TextConter':this.TextConter,\n        //             'NowPath':this.$store.state.DirPath\n        //         }\n        //     }).then(res=>{\n        //         ElMessageBox.alert(res.data.message, '创建文本状态', {\n        //             showConfirmButton:true,\n        //             showCancelButton:true,\n        //             confirmButtonText: '再来一个',\n        //             cancelButtonText: '取消',\n        //        }).catch(()=>{\n        //         this.$store.state.dialogVisible=false\n        //         }).then(()=>{\n        //             this.$store.dispatch('DirsFileList')\n        //             this.$store.dispatch('openDirs')\n\n        //         })\n        // })\n      } else {\n        console.log('当前文件名为空');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessageBox","name","data","TextName","TextConter","methods","onSubmit","iscatch","alert","showConfirmButton","showCancelButton","confirmButtonText","cancelButtonText","catch","$store","state","dialogVisible","then","method","url","api","params","DirPath","res","message","console","log","dispatch"],"sources":["C:\\Users\\Admin\\Desktop\\LAN-Sharing-0.1.0\\restvue003\\src\\components\\NewText.vue"],"sourcesContent":["<template>\r\n    <div >\r\n        <el-form  label-position=\"left\">\r\n            <div>\r\n            <el-form-item label=\"文本名称:\" label-width=\"auto\" style=\"max-width: 70%\">\r\n            <el-input  v-model=\"TextName\"/>\r\n            </el-form-item>\r\n        </div>\r\n        \r\n        <div>\r\n        <el-form-item label=\"文本内容:\" style=\"max-width: 70%\">\r\n            <el-input  type=\"textarea\" v-model=\"TextConter\" />      \r\n            </el-form-item>\r\n            \r\n        </div>\r\n      \r\n           \r\n        </el-form> \r\n        <div class=\"onSubmitbutton\">\r\n            <!-- <el-button type=\"primary\" @click=\"onSubmit\">确认</el-button> -->\r\n            <el-button  type=\"primary\" :plain=\"true\" @click=\"onSubmit\">确认</el-button>\r\n        </div>\r\n       \r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport {  ElMessageBox } from 'element-plus'\r\n\r\n\r\nexport default{\r\n    name:'NewText',\r\n    data(){\r\n        return{\r\n            TextName:'',\r\n            TextConter:'',\r\n        }\r\n    },\r\n    methods:{\r\n        onSubmit(){\r\n            let iscatch=0\r\n            if (this.TextName!=''){\r\n                ElMessageBox.alert('是否创建'+this.TextName+\"的文本文件\", '是否确认创建文本文件', {\r\n                    showConfirmButton:true,\r\n                    showCancelButton:true,\r\n                    confirmButtonText: '再来一个',\r\n                    cancelButtonText: '取消',\r\n               }).catch(()=>{\r\n                this.$store.state.dialogVisible=false\r\n                iscatch=1\r\n                }).then(()=>{\r\n                axios({\r\n                method:\"get\",\r\n                url:this.$store.state.api+'/TextLnsert',\r\n                params:{\r\n                    'TextName': this.TextName,\r\n                    'TextConter':this.TextConter,\r\n                    'NowPath':this.$store.state.DirPath\r\n                }\r\n            }).then(res=>{\r\n                if(iscatch==1){\r\n                    ElMessageBox.alert(res.data.message, '创建文本状态', {\r\n                    showConfirmButton:false,\r\n                    showCancelButton:true,\r\n                    cancelButtonText: '取消',\r\n               }).catch(()=>{\r\n                console.log(\"成功取消\");\r\n                \r\n               })\r\n                }\r\n               \r\n\r\n            })\r\n\r\n                    this.$store.dispatch('DirsFileList')\r\n                    this.$store.dispatch('openDirs')\r\n                    \r\n                })\r\n        //  axios({\r\n        //         method:\"get\",\r\n        //         url:this.$store.state.api+'/TextLnsert',\r\n        //         params:{\r\n        //             'TextName': this.TextName,\r\n        //             'TextConter':this.TextConter,\r\n        //             'NowPath':this.$store.state.DirPath\r\n        //         }\r\n        //     }).then(res=>{\r\n        //         ElMessageBox.alert(res.data.message, '创建文本状态', {\r\n        //             showConfirmButton:true,\r\n        //             showCancelButton:true,\r\n        //             confirmButtonText: '再来一个',\r\n        //             cancelButtonText: '取消',\r\n        //        }).catch(()=>{\r\n        //         this.$store.state.dialogVisible=false\r\n        //         }).then(()=>{\r\n        //             this.$store.dispatch('DirsFileList')\r\n        //             this.$store.dispatch('openDirs')\r\n                    \r\n        //         })\r\n        // })\r\n    }\r\n        else{\r\n            console.log('当前文件名为空');\r\n            \r\n        }\r\n            \r\n        }\r\n    }\r\n\r\n}   \r\n</script>\r\n<style scoped>\r\n.el-form-item{\r\n    /* padding-top: 1%;    */\r\n    margin: 0 auto;\r\n    margin-top: 1%  ;\r\n}\r\n.onSubmitbutton{\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1%  ;       \r\n}\r\n</style>"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAAUC,YAAW,QAAS,cAAa;AAG3C,eAAc;EACVC,IAAI,EAAC,SAAS;EACdC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,QAAQ,EAAC,EAAE;MACXC,UAAU,EAAC;IACf;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,QAAQA,CAAA,EAAE;MACN,IAAIC,OAAO,GAAC;MACZ,IAAI,IAAI,CAACJ,QAAQ,IAAE,EAAE,EAAC;QAClBH,YAAY,CAACQ,KAAK,CAAC,MAAM,GAAC,IAAI,CAACL,QAAQ,GAAC,OAAO,EAAE,YAAY,EAAE;UAC3DM,iBAAiB,EAAC,IAAI;UACtBC,gBAAgB,EAAC,IAAI;UACrBC,iBAAiB,EAAE,MAAM;UACzBC,gBAAgB,EAAE;QACvB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAI;UACZ,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,aAAa,GAAC,KAAI;UACpCT,OAAO,GAAC;QACR,CAAC,CAAC,CAACU,IAAI,CAAC,MAAI;UACZlB,KAAK,CAAC;YACNmB,MAAM,EAAC,KAAK;YACZC,GAAG,EAAC,IAAI,CAACL,MAAM,CAACC,KAAK,CAACK,GAAG,GAAC,aAAa;YACvCC,MAAM,EAAC;cACH,UAAU,EAAE,IAAI,CAAClB,QAAQ;cACzB,YAAY,EAAC,IAAI,CAACC,UAAU;cAC5B,SAAS,EAAC,IAAI,CAACU,MAAM,CAACC,KAAK,CAACO;YAChC;UACJ,CAAC,CAAC,CAACL,IAAI,CAACM,GAAG,IAAE;YACT,IAAGhB,OAAO,IAAE,CAAC,EAAC;cACVP,YAAY,CAACQ,KAAK,CAACe,GAAG,CAACrB,IAAI,CAACsB,OAAO,EAAE,QAAQ,EAAE;gBAC/Cf,iBAAiB,EAAC,KAAK;gBACvBC,gBAAgB,EAAC,IAAI;gBACrBE,gBAAgB,EAAE;cACvB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAI;gBACZY,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;cAEpB,CAAC;YACA;UAGJ,CAAC;UAEO,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,cAAc;UACnC,IAAI,CAACb,MAAM,CAACa,QAAQ,CAAC,UAAU;QAEnC,CAAC;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;MACJ,OACQ;QACAF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MAE1B;IAEA;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}