{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*! @name m3u8-parser @version 4.8.0 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\r\n * A stream that buffers string input and generates a `data` event for each\r\n * line.\r\n *\r\n * @class LineStream\r\n * @extends Stream\r\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n  function LineStream() {\n    var _this;\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\r\n   * Add new data to be parsed.\r\n   *\r\n   * @param {string} data the text to process\r\n   */\n\n  var _proto = LineStream.prototype;\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n  return LineStream;\n}(Stream);\nvar TAB = String.fromCharCode(0x09);\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n  return result;\n};\n/**\r\n * \"forgiving\" attribute list psuedo-grammar:\r\n * attributes -> keyvalue (',' keyvalue)*\r\n * keyvalue   -> key '=' value\r\n * key        -> [^=]*\r\n * value      -> '\"' [^\"]* '\"' | [^,]*\r\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\r\n * Parse attributes from a line given the separator\r\n *\r\n * @param {string} attributes the attribute line to parse\r\n */\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n/**\r\n * A line-level M3U8 parser event stream. It expects to receive input one\r\n * line at a time and performs a context-free parse of its contents. A stream\r\n * interpretation of a manifest can be useful if the manifest is expected to\r\n * be too large to fit comfortably into memory or the entirety of the input\r\n * is not immediately available. Otherwise, it's probably much easier to work\r\n * with a regular `Parser` object.\r\n *\r\n * Produces `data` events with an object that captures the parser's\r\n * interpretation of the input. That object has a property `tag` that is one\r\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\r\n * property, `line`, which captures the entirety of the input without\r\n * interpretation. Comments similarly have a single additional property\r\n * `text` which is the input without the leading `#`.\r\n *\r\n * Tags always have a property `tagType` which is the lower-cased version of\r\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\r\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\r\n * tags are given the tag type `unknown` and a single additional property\r\n * `data` with the remainder of the input.\r\n *\r\n * @class ParseStream\r\n * @extends Stream\r\n */\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n  function ParseStream() {\n    var _this;\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\r\n   * Parses an additional line of input.\r\n   *\r\n   * @param {string} line a single line of an M3U8 file to parse\r\n   */\n\n  var _proto = ParseStream.prototype;\n  _proto.push = function push(line) {\n    var _this2 = this;\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        _this2.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        _this2.trigger('data', event);\n        return;\n      } // unknown tag type\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\r\n   * Add a parser for custom headers\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.customType   the custom type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */;\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n    var expression = _ref.expression,\n      customType = _ref.customType,\n      dataParser = _ref.dataParser,\n      segment = _ref.segment;\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */;\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n      map = _ref2.map;\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n      return line;\n    };\n    this.tagMappers.push(mapFn);\n  };\n  return ParseStream;\n}(Stream);\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n    targetDuration = manifest.targetDuration,\n    partTargetDuration = manifest.partTargetDuration;\n  if (!serverControl) {\n    return;\n  }\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\r\n * A parser for M3U8 files. The current interpretation of the input is\r\n * exposed as a property `manifest` on parser objects. It's just two lines to\r\n * create and parse a manifest once you have the contents available as a string:\r\n *\r\n * ```js\r\n * var parser = new m3u8.Parser();\r\n * parser.push(xhr.responseText);\r\n * ```\r\n *\r\n * New input can later be applied to update the manifest object by calling\r\n * `push` again.\r\n *\r\n * The parser attempts to create a usable manifest object even if the\r\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\r\n * events during the parse if it encounters input that seems invalid or\r\n * requires some property of the manifest object to be defaulted.\r\n *\r\n * @class Parser\r\n * @extends Stream\r\n */\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n  function Parser() {\n    var _this;\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n    var hasParts = false;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n                if (!('offset' in entry)) {\n                  /*\r\n                   * From the latest spec (as of this writing):\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\r\n                   *\r\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\r\n                   *\r\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\r\n                   * following the sub-range of the previous media segment.\"\r\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n              setHoldBack.call(this, this.manifest);\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n                if (!otherHint.type) {\n                  continue;\n                }\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n  var _proto = Parser.prototype;\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\r\n   * Parse the input string and update the manifest object.\r\n   *\r\n   * @param {string} chunk a potentially incomplete portion of the manifest\r\n   */;\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\r\n   * Flush any remaining input. This can be handy if the last line of an M3U8\r\n   * manifest did not contain a trailing newline but the file has been\r\n   * completely received.\r\n   */;\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\r\n   * Add an additional parser for non-standard tags\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.type         the type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */;\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */;\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n  return Parser;\n}(Stream);\nexport { LineStream, ParseStream, Parser };","map":{"version":3,"names":["_inheritsLoose","Stream","_extends","_assertThisInitialized","decodeB64ToUint8Array","LineStream","_Stream","_this","call","buffer","_proto","prototype","push","data","nextNewline","indexOf","trigger","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","length","parseInt","offset","attributeSeparator","key","value","keyvalue","RegExp","parseAttributes","attributes","attrs","split","i","attr","slice","replace","ParseStream","customParsers","tagMappers","line","_this2","event","trim","type","uri","newLines","reduce","acc","mapper","mappedLine","concat","forEach","newLine","text","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","subkey","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","mapFn","camelCase","str","a","toUpperCase","camelCaseKeys","Object","keys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","pipe","self","uris","currentUri","currentMap","_key","hasParts","noop","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","on","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","programDateTime","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","part","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","preloadHint","hint","isPart","index","otherHint","renditionReport","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options"],"sources":["D:/code/lan/LAN-Sharing/restvue003/node_modules/m3u8-parser/dist/m3u8-parser.es.js"],"sourcesContent":["/*! @name m3u8-parser @version 4.8.0 @license Apache-2.0 */\r\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\r\nimport Stream from '@videojs/vhs-utils/es/stream.js';\r\nimport _extends from '@babel/runtime/helpers/extends';\r\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\r\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\r\n\r\n/**\r\n * A stream that buffers string input and generates a `data` event for each\r\n * line.\r\n *\r\n * @class LineStream\r\n * @extends Stream\r\n */\r\n\r\nvar LineStream = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(LineStream, _Stream);\r\n\r\n  function LineStream() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.buffer = '';\r\n    return _this;\r\n  }\r\n  /**\r\n   * Add new data to be parsed.\r\n   *\r\n   * @param {string} data the text to process\r\n   */\r\n\r\n\r\n  var _proto = LineStream.prototype;\r\n\r\n  _proto.push = function push(data) {\r\n    var nextNewline;\r\n    this.buffer += data;\r\n    nextNewline = this.buffer.indexOf('\\n');\r\n\r\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\r\n      this.trigger('data', this.buffer.substring(0, nextNewline));\r\n      this.buffer = this.buffer.substring(nextNewline + 1);\r\n    }\r\n  };\r\n\r\n  return LineStream;\r\n}(Stream);\r\n\r\nvar TAB = String.fromCharCode(0x09);\r\n\r\nvar parseByterange = function parseByterange(byterangeString) {\r\n  // optionally match and capture 0+ digits before `@`\r\n  // optionally match and capture 0+ digits after `@`\r\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\r\n  var result = {};\r\n\r\n  if (match[1]) {\r\n    result.length = parseInt(match[1], 10);\r\n  }\r\n\r\n  if (match[2]) {\r\n    result.offset = parseInt(match[2], 10);\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n * \"forgiving\" attribute list psuedo-grammar:\r\n * attributes -> keyvalue (',' keyvalue)*\r\n * keyvalue   -> key '=' value\r\n * key        -> [^=]*\r\n * value      -> '\"' [^\"]* '\"' | [^,]*\r\n */\r\n\r\n\r\nvar attributeSeparator = function attributeSeparator() {\r\n  var key = '[^=]*';\r\n  var value = '\"[^\"]*\"|[^,]*';\r\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\r\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\r\n};\r\n/**\r\n * Parse attributes from a line given the separator\r\n *\r\n * @param {string} attributes the attribute line to parse\r\n */\r\n\r\n\r\nvar parseAttributes = function parseAttributes(attributes) {\r\n  // split the string using attributes as the separator\r\n  var attrs = attributes.split(attributeSeparator());\r\n  var result = {};\r\n  var i = attrs.length;\r\n  var attr;\r\n\r\n  while (i--) {\r\n    // filter out unmatched portions of the string\r\n    if (attrs[i] === '') {\r\n      continue;\r\n    } // split the key and value\r\n\r\n\r\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\r\n\r\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\r\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\r\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\r\n    result[attr[0]] = attr[1];\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n * A line-level M3U8 parser event stream. It expects to receive input one\r\n * line at a time and performs a context-free parse of its contents. A stream\r\n * interpretation of a manifest can be useful if the manifest is expected to\r\n * be too large to fit comfortably into memory or the entirety of the input\r\n * is not immediately available. Otherwise, it's probably much easier to work\r\n * with a regular `Parser` object.\r\n *\r\n * Produces `data` events with an object that captures the parser's\r\n * interpretation of the input. That object has a property `tag` that is one\r\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\r\n * property, `line`, which captures the entirety of the input without\r\n * interpretation. Comments similarly have a single additional property\r\n * `text` which is the input without the leading `#`.\r\n *\r\n * Tags always have a property `tagType` which is the lower-cased version of\r\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\r\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\r\n * tags are given the tag type `unknown` and a single additional property\r\n * `data` with the remainder of the input.\r\n *\r\n * @class ParseStream\r\n * @extends Stream\r\n */\r\n\r\n\r\nvar ParseStream = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(ParseStream, _Stream);\r\n\r\n  function ParseStream() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.customParsers = [];\r\n    _this.tagMappers = [];\r\n    return _this;\r\n  }\r\n  /**\r\n   * Parses an additional line of input.\r\n   *\r\n   * @param {string} line a single line of an M3U8 file to parse\r\n   */\r\n\r\n\r\n  var _proto = ParseStream.prototype;\r\n\r\n  _proto.push = function push(line) {\r\n    var _this2 = this;\r\n\r\n    var match;\r\n    var event; // strip whitespace\r\n\r\n    line = line.trim();\r\n\r\n    if (line.length === 0) {\r\n      // ignore empty lines\r\n      return;\r\n    } // URIs\r\n\r\n\r\n    if (line[0] !== '#') {\r\n      this.trigger('data', {\r\n        type: 'uri',\r\n        uri: line\r\n      });\r\n      return;\r\n    } // map tags\r\n\r\n\r\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\r\n      var mappedLine = mapper(line); // skip if unchanged\r\n\r\n      if (mappedLine === line) {\r\n        return acc;\r\n      }\r\n\r\n      return acc.concat([mappedLine]);\r\n    }, [line]);\r\n    newLines.forEach(function (newLine) {\r\n      for (var i = 0; i < _this2.customParsers.length; i++) {\r\n        if (_this2.customParsers[i].call(_this2, newLine)) {\r\n          return;\r\n        }\r\n      } // Comments\r\n\r\n\r\n      if (newLine.indexOf('#EXT') !== 0) {\r\n        _this2.trigger('data', {\r\n          type: 'comment',\r\n          text: newLine.slice(1)\r\n        });\r\n\r\n        return;\r\n      } // strip off any carriage returns here so the regex matching\r\n      // doesn't have to account for them.\r\n\r\n\r\n      newLine = newLine.replace('\\r', ''); // Tags\r\n\r\n      match = /^#EXTM3U/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'm3u'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'inf'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.duration = parseFloat(match[1]);\r\n        }\r\n\r\n        if (match[2]) {\r\n          event.title = match[2];\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'targetduration'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.duration = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'version'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.version = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'media-sequence'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.number = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'discontinuity-sequence'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.number = parseInt(match[1], 10);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'playlist-type'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.playlistType = match[1];\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = _extends(parseByterange(match[1]), {\r\n          type: 'tag',\r\n          tagType: 'byterange'\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'allow-cache'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.allowed = !/NO/.test(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'map'\r\n        };\r\n\r\n        if (match[1]) {\r\n          var attributes = parseAttributes(match[1]);\r\n\r\n          if (attributes.URI) {\r\n            event.uri = attributes.URI;\r\n          }\r\n\r\n          if (attributes.BYTERANGE) {\r\n            event.byterange = parseByterange(attributes.BYTERANGE);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'stream-inf'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n\r\n          if (event.attributes.RESOLUTION) {\r\n            var split = event.attributes.RESOLUTION.split('x');\r\n            var resolution = {};\r\n\r\n            if (split[0]) {\r\n              resolution.width = parseInt(split[0], 10);\r\n            }\r\n\r\n            if (split[1]) {\r\n              resolution.height = parseInt(split[1], 10);\r\n            }\r\n\r\n            event.attributes.RESOLUTION = resolution;\r\n          }\r\n\r\n          if (event.attributes.BANDWIDTH) {\r\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\r\n          }\r\n\r\n          if (event.attributes['FRAME-RATE']) {\r\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\r\n          }\r\n\r\n          if (event.attributes['PROGRAM-ID']) {\r\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'media'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'endlist'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\r\n\r\n      if (match) {\r\n        _this2.trigger('data', {\r\n          type: 'tag',\r\n          tagType: 'discontinuity'\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'program-date-time'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.dateTimeString = match[1];\r\n          event.dateTimeObject = new Date(match[1]);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'key'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\r\n\r\n          if (event.attributes.IV) {\r\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\r\n              event.attributes.IV = event.attributes.IV.substring(2);\r\n            }\r\n\r\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\r\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\r\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\r\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\r\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\r\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\r\n          }\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'start'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.attributes = parseAttributes(match[1]);\r\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\r\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-out-cont'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-out'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\r\n\r\n      if (match) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'cue-in'\r\n        };\r\n\r\n        if (match[1]) {\r\n          event.data = match[1];\r\n        } else {\r\n          event.data = '';\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'skip'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n\r\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\r\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\r\n        }\r\n\r\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\r\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'part'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['DURATION'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = /YES/.test(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\r\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\r\n        }\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'server-control'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = /YES/.test(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'part-inf'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['PART-TARGET'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseFloat(event.attributes[key]);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'preload-hint'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseInt(event.attributes[key], 10);\r\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\r\n            event.attributes.byterange = event.attributes.byterange || {};\r\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\r\n\r\n            delete event.attributes[key];\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      }\r\n\r\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\r\n\r\n      if (match && match[1]) {\r\n        event = {\r\n          type: 'tag',\r\n          tagType: 'rendition-report'\r\n        };\r\n        event.attributes = parseAttributes(match[1]);\r\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\r\n          if (event.attributes.hasOwnProperty(key)) {\r\n            event.attributes[key] = parseInt(event.attributes[key], 10);\r\n          }\r\n        });\r\n\r\n        _this2.trigger('data', event);\r\n\r\n        return;\r\n      } // unknown tag type\r\n\r\n\r\n      _this2.trigger('data', {\r\n        type: 'tag',\r\n        data: newLine.slice(4)\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Add a parser for custom headers\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.customType   the custom type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */\r\n  ;\r\n\r\n  _proto.addParser = function addParser(_ref) {\r\n    var _this3 = this;\r\n\r\n    var expression = _ref.expression,\r\n        customType = _ref.customType,\r\n        dataParser = _ref.dataParser,\r\n        segment = _ref.segment;\r\n\r\n    if (typeof dataParser !== 'function') {\r\n      dataParser = function dataParser(line) {\r\n        return line;\r\n      };\r\n    }\r\n\r\n    this.customParsers.push(function (line) {\r\n      var match = expression.exec(line);\r\n\r\n      if (match) {\r\n        _this3.trigger('data', {\r\n          type: 'custom',\r\n          data: dataParser(line),\r\n          customType: customType,\r\n          segment: segment\r\n        });\r\n\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */\r\n  ;\r\n\r\n  _proto.addTagMapper = function addTagMapper(_ref2) {\r\n    var expression = _ref2.expression,\r\n        map = _ref2.map;\r\n\r\n    var mapFn = function mapFn(line) {\r\n      if (expression.test(line)) {\r\n        return map(line);\r\n      }\r\n\r\n      return line;\r\n    };\r\n\r\n    this.tagMappers.push(mapFn);\r\n  };\r\n\r\n  return ParseStream;\r\n}(Stream);\r\n\r\nvar camelCase = function camelCase(str) {\r\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\r\n    return a[1].toUpperCase();\r\n  });\r\n};\r\n\r\nvar camelCaseKeys = function camelCaseKeys(attributes) {\r\n  var result = {};\r\n  Object.keys(attributes).forEach(function (key) {\r\n    result[camelCase(key)] = attributes[key];\r\n  });\r\n  return result;\r\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\r\n// we need this helper because defaults are based upon targetDuration and\r\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\r\n// target durations are set.\r\n\r\n\r\nvar setHoldBack = function setHoldBack(manifest) {\r\n  var serverControl = manifest.serverControl,\r\n      targetDuration = manifest.targetDuration,\r\n      partTargetDuration = manifest.partTargetDuration;\r\n\r\n  if (!serverControl) {\r\n    return;\r\n  }\r\n\r\n  var tag = '#EXT-X-SERVER-CONTROL';\r\n  var hb = 'holdBack';\r\n  var phb = 'partHoldBack';\r\n  var minTargetDuration = targetDuration && targetDuration * 3;\r\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\r\n\r\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\r\n    serverControl[hb] = minTargetDuration;\r\n    this.trigger('info', {\r\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\r\n    });\r\n  }\r\n\r\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\r\n    this.trigger('warn', {\r\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\r\n    });\r\n    serverControl[hb] = minTargetDuration;\r\n  } // default no part hold back to part target duration * 3\r\n\r\n\r\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\r\n    serverControl[phb] = partTargetDuration * 3;\r\n    this.trigger('info', {\r\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\r\n    });\r\n  } // if part hold back is too small default it to part target duration * 2\r\n\r\n\r\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\r\n    this.trigger('warn', {\r\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\r\n    });\r\n    serverControl[phb] = minPartDuration;\r\n  }\r\n};\r\n/**\r\n * A parser for M3U8 files. The current interpretation of the input is\r\n * exposed as a property `manifest` on parser objects. It's just two lines to\r\n * create and parse a manifest once you have the contents available as a string:\r\n *\r\n * ```js\r\n * var parser = new m3u8.Parser();\r\n * parser.push(xhr.responseText);\r\n * ```\r\n *\r\n * New input can later be applied to update the manifest object by calling\r\n * `push` again.\r\n *\r\n * The parser attempts to create a usable manifest object even if the\r\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\r\n * events during the parse if it encounters input that seems invalid or\r\n * requires some property of the manifest object to be defaulted.\r\n *\r\n * @class Parser\r\n * @extends Stream\r\n */\r\n\r\n\r\nvar Parser = /*#__PURE__*/function (_Stream) {\r\n  _inheritsLoose(Parser, _Stream);\r\n\r\n  function Parser() {\r\n    var _this;\r\n\r\n    _this = _Stream.call(this) || this;\r\n    _this.lineStream = new LineStream();\r\n    _this.parseStream = new ParseStream();\r\n\r\n    _this.lineStream.pipe(_this.parseStream);\r\n    /* eslint-disable consistent-this */\r\n\r\n\r\n    var self = _assertThisInitialized(_this);\r\n    /* eslint-enable consistent-this */\r\n\r\n\r\n    var uris = [];\r\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\r\n\r\n    var currentMap; // if specified, the active decryption key\r\n\r\n    var _key;\r\n\r\n    var hasParts = false;\r\n\r\n    var noop = function noop() {};\r\n\r\n    var defaultMediaGroups = {\r\n      'AUDIO': {},\r\n      'VIDEO': {},\r\n      'CLOSED-CAPTIONS': {},\r\n      'SUBTITLES': {}\r\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\r\n    // used in MPDs with Widevine encrypted streams.\r\n\r\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\r\n\r\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\r\n\r\n    _this.manifest = {\r\n      allowCache: true,\r\n      discontinuityStarts: [],\r\n      segments: []\r\n    }; // keep track of the last seen segment's byte range end, as segments are not required\r\n    // to provide the offset, in which case it defaults to the next byte after the\r\n    // previous segment\r\n\r\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\r\n\r\n    var lastPartByterangeEnd = 0;\r\n\r\n    _this.on('end', function () {\r\n      // only add preloadSegment if we don't yet have a uri for it.\r\n      // and we actually have parts/preloadHints\r\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\r\n        return;\r\n      }\r\n\r\n      if (!currentUri.map && currentMap) {\r\n        currentUri.map = currentMap;\r\n      }\r\n\r\n      if (!currentUri.key && _key) {\r\n        currentUri.key = _key;\r\n      }\r\n\r\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\r\n        currentUri.timeline = currentTimeline;\r\n      }\r\n\r\n      _this.manifest.preloadSegment = currentUri;\r\n    }); // update the manifest with the m3u8 entry from the parse stream\r\n\r\n\r\n    _this.parseStream.on('data', function (entry) {\r\n      var mediaGroup;\r\n      var rendition;\r\n      ({\r\n        tag: function tag() {\r\n          // switch based on the tag type\r\n          (({\r\n            version: function version() {\r\n              if (entry.version) {\r\n                this.manifest.version = entry.version;\r\n              }\r\n            },\r\n            'allow-cache': function allowCache() {\r\n              this.manifest.allowCache = entry.allowed;\r\n\r\n              if (!('allowed' in entry)) {\r\n                this.trigger('info', {\r\n                  message: 'defaulting allowCache to YES'\r\n                });\r\n                this.manifest.allowCache = true;\r\n              }\r\n            },\r\n            byterange: function byterange() {\r\n              var byterange = {};\r\n\r\n              if ('length' in entry) {\r\n                currentUri.byterange = byterange;\r\n                byterange.length = entry.length;\r\n\r\n                if (!('offset' in entry)) {\r\n                  /*\r\n                   * From the latest spec (as of this writing):\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\r\n                   *\r\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\r\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\r\n                   *\r\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\r\n                   * following the sub-range of the previous media segment.\"\r\n                   */\r\n                  entry.offset = lastByterangeEnd;\r\n                }\r\n              }\r\n\r\n              if ('offset' in entry) {\r\n                currentUri.byterange = byterange;\r\n                byterange.offset = entry.offset;\r\n              }\r\n\r\n              lastByterangeEnd = byterange.offset + byterange.length;\r\n            },\r\n            endlist: function endlist() {\r\n              this.manifest.endList = true;\r\n            },\r\n            inf: function inf() {\r\n              if (!('mediaSequence' in this.manifest)) {\r\n                this.manifest.mediaSequence = 0;\r\n                this.trigger('info', {\r\n                  message: 'defaulting media sequence to zero'\r\n                });\r\n              }\r\n\r\n              if (!('discontinuitySequence' in this.manifest)) {\r\n                this.manifest.discontinuitySequence = 0;\r\n                this.trigger('info', {\r\n                  message: 'defaulting discontinuity sequence to zero'\r\n                });\r\n              }\r\n\r\n              if (entry.duration > 0) {\r\n                currentUri.duration = entry.duration;\r\n              }\r\n\r\n              if (entry.duration === 0) {\r\n                currentUri.duration = 0.01;\r\n                this.trigger('info', {\r\n                  message: 'updating zero segment duration to a small value'\r\n                });\r\n              }\r\n\r\n              this.manifest.segments = uris;\r\n            },\r\n            key: function key() {\r\n              if (!entry.attributes) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring key declaration without attribute list'\r\n                });\r\n                return;\r\n              } // clear the active encryption key\r\n\r\n\r\n              if (entry.attributes.METHOD === 'NONE') {\r\n                _key = null;\r\n                return;\r\n              }\r\n\r\n              if (!entry.attributes.URI) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring key declaration without URI'\r\n                });\r\n                return;\r\n              }\r\n\r\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\r\n\r\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\r\n                  attributes: entry.attributes\r\n                };\r\n                return;\r\n              }\r\n\r\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\r\n\r\n                this.manifest.contentProtection['com.microsoft.playready'] = {\r\n                  uri: entry.attributes.URI\r\n                };\r\n                return;\r\n              } // check if the content is encrypted for Widevine\r\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\r\n\r\n\r\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\r\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\r\n\r\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key method provided for Widevine'\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\r\n                  this.trigger('warn', {\r\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\r\n                  });\r\n                }\r\n\r\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key URI provided for Widevine'\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\r\n                  this.trigger('warn', {\r\n                    message: 'invalid key ID provided for Widevine'\r\n                  });\r\n                  return;\r\n                } // if Widevine key attributes are valid, store them as `contentProtection`\r\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\r\n\r\n\r\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\r\n                this.manifest.contentProtection['com.widevine.alpha'] = {\r\n                  attributes: {\r\n                    schemeIdUri: entry.attributes.KEYFORMAT,\r\n                    // remove '0x' from the key id string\r\n                    keyId: entry.attributes.KEYID.substring(2)\r\n                  },\r\n                  // decode the base64-encoded PSSH box\r\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\r\n                };\r\n                return;\r\n              }\r\n\r\n              if (!entry.attributes.METHOD) {\r\n                this.trigger('warn', {\r\n                  message: 'defaulting key method to AES-128'\r\n                });\r\n              } // setup an encryption key for upcoming segments\r\n\r\n\r\n              _key = {\r\n                method: entry.attributes.METHOD || 'AES-128',\r\n                uri: entry.attributes.URI\r\n              };\r\n\r\n              if (typeof entry.attributes.IV !== 'undefined') {\r\n                _key.iv = entry.attributes.IV;\r\n              }\r\n            },\r\n            'media-sequence': function mediaSequence() {\r\n              if (!isFinite(entry.number)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid media sequence: ' + entry.number\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.mediaSequence = entry.number;\r\n            },\r\n            'discontinuity-sequence': function discontinuitySequence() {\r\n              if (!isFinite(entry.number)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.discontinuitySequence = entry.number;\r\n              currentTimeline = entry.number;\r\n            },\r\n            'playlist-type': function playlistType() {\r\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.playlistType = entry.playlistType;\r\n            },\r\n            map: function map() {\r\n              currentMap = {};\r\n\r\n              if (entry.uri) {\r\n                currentMap.uri = entry.uri;\r\n              }\r\n\r\n              if (entry.byterange) {\r\n                currentMap.byterange = entry.byterange;\r\n              }\r\n\r\n              if (_key) {\r\n                currentMap.key = _key;\r\n              }\r\n            },\r\n            'stream-inf': function streamInf() {\r\n              this.manifest.playlists = uris;\r\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\r\n\r\n              if (!entry.attributes) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring empty stream-inf attributes'\r\n                });\r\n                return;\r\n              }\r\n\r\n              if (!currentUri.attributes) {\r\n                currentUri.attributes = {};\r\n              }\r\n\r\n              _extends(currentUri.attributes, entry.attributes);\r\n            },\r\n            media: function media() {\r\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\r\n\r\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring incomplete or missing media group'\r\n                });\r\n                return;\r\n              } // find the media group, creating defaults as necessary\r\n\r\n\r\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\r\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\r\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\r\n\r\n              rendition = {\r\n                default: /yes/i.test(entry.attributes.DEFAULT)\r\n              };\r\n\r\n              if (rendition.default) {\r\n                rendition.autoselect = true;\r\n              } else {\r\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\r\n              }\r\n\r\n              if (entry.attributes.LANGUAGE) {\r\n                rendition.language = entry.attributes.LANGUAGE;\r\n              }\r\n\r\n              if (entry.attributes.URI) {\r\n                rendition.uri = entry.attributes.URI;\r\n              }\r\n\r\n              if (entry.attributes['INSTREAM-ID']) {\r\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\r\n              }\r\n\r\n              if (entry.attributes.CHARACTERISTICS) {\r\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\r\n              }\r\n\r\n              if (entry.attributes.FORCED) {\r\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\r\n              } // insert the new rendition\r\n\r\n\r\n              mediaGroup[entry.attributes.NAME] = rendition;\r\n            },\r\n            discontinuity: function discontinuity() {\r\n              currentTimeline += 1;\r\n              currentUri.discontinuity = true;\r\n              this.manifest.discontinuityStarts.push(uris.length);\r\n            },\r\n            'program-date-time': function programDateTime() {\r\n              if (typeof this.manifest.dateTimeString === 'undefined') {\r\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\r\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\r\n                // to the manifest object\r\n                // TODO: Consider removing this in future major version\r\n                this.manifest.dateTimeString = entry.dateTimeString;\r\n                this.manifest.dateTimeObject = entry.dateTimeObject;\r\n              }\r\n\r\n              currentUri.dateTimeString = entry.dateTimeString;\r\n              currentUri.dateTimeObject = entry.dateTimeObject;\r\n            },\r\n            targetduration: function targetduration() {\r\n              if (!isFinite(entry.duration) || entry.duration < 0) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring invalid target duration: ' + entry.duration\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.targetDuration = entry.duration;\r\n              setHoldBack.call(this, this.manifest);\r\n            },\r\n            start: function start() {\r\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\r\n                this.trigger('warn', {\r\n                  message: 'ignoring start declaration without appropriate attribute list'\r\n                });\r\n                return;\r\n              }\r\n\r\n              this.manifest.start = {\r\n                timeOffset: entry.attributes['TIME-OFFSET'],\r\n                precise: entry.attributes.PRECISE\r\n              };\r\n            },\r\n            'cue-out': function cueOut() {\r\n              currentUri.cueOut = entry.data;\r\n            },\r\n            'cue-out-cont': function cueOutCont() {\r\n              currentUri.cueOutCont = entry.data;\r\n            },\r\n            'cue-in': function cueIn() {\r\n              currentUri.cueIn = entry.data;\r\n            },\r\n            'skip': function skip() {\r\n              this.manifest.skip = camelCaseKeys(entry.attributes);\r\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\r\n            },\r\n            'part': function part() {\r\n              var _this2 = this;\r\n\r\n              hasParts = true; // parts are always specifed before a segment\r\n\r\n              var segmentIndex = this.manifest.segments.length;\r\n              var part = camelCaseKeys(entry.attributes);\r\n              currentUri.parts = currentUri.parts || [];\r\n              currentUri.parts.push(part);\r\n\r\n              if (part.byterange) {\r\n                if (!part.byterange.hasOwnProperty('offset')) {\r\n                  part.byterange.offset = lastPartByterangeEnd;\r\n                }\r\n\r\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\r\n              }\r\n\r\n              var partIndex = currentUri.parts.length - 1;\r\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\r\n\r\n              if (this.manifest.renditionReports) {\r\n                this.manifest.renditionReports.forEach(function (r, i) {\r\n                  if (!r.hasOwnProperty('lastPart')) {\r\n                    _this2.trigger('warn', {\r\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            },\r\n            'server-control': function serverControl() {\r\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\r\n\r\n              if (!attrs.hasOwnProperty('canBlockReload')) {\r\n                attrs.canBlockReload = false;\r\n                this.trigger('info', {\r\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\r\n                });\r\n              }\r\n\r\n              setHoldBack.call(this, this.manifest);\r\n\r\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\r\n                this.trigger('warn', {\r\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\r\n                });\r\n              }\r\n            },\r\n            'preload-hint': function preloadHint() {\r\n              // parts are always specifed before a segment\r\n              var segmentIndex = this.manifest.segments.length;\r\n              var hint = camelCaseKeys(entry.attributes);\r\n              var isPart = hint.type && hint.type === 'PART';\r\n              currentUri.preloadHints = currentUri.preloadHints || [];\r\n              currentUri.preloadHints.push(hint);\r\n\r\n              if (hint.byterange) {\r\n                if (!hint.byterange.hasOwnProperty('offset')) {\r\n                  // use last part byterange end or zero if not a part.\r\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\r\n\r\n                  if (isPart) {\r\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\r\n                  }\r\n                }\r\n              }\r\n\r\n              var index = currentUri.preloadHints.length - 1;\r\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\r\n\r\n              if (!hint.type) {\r\n                return;\r\n              } // search through all preload hints except for the current one for\r\n              // a duplicate type.\r\n\r\n\r\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\r\n                var otherHint = currentUri.preloadHints[i];\r\n\r\n                if (!otherHint.type) {\r\n                  continue;\r\n                }\r\n\r\n                if (otherHint.type === hint.type) {\r\n                  this.trigger('warn', {\r\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\r\n                  });\r\n                }\r\n              }\r\n            },\r\n            'rendition-report': function renditionReport() {\r\n              var report = camelCaseKeys(entry.attributes);\r\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\r\n              this.manifest.renditionReports.push(report);\r\n              var index = this.manifest.renditionReports.length - 1;\r\n              var required = ['LAST-MSN', 'URI'];\r\n\r\n              if (hasParts) {\r\n                required.push('LAST-PART');\r\n              }\r\n\r\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\r\n            },\r\n            'part-inf': function partInf() {\r\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\r\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\r\n\r\n              if (this.manifest.partInf.partTarget) {\r\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\r\n              }\r\n\r\n              setHoldBack.call(this, this.manifest);\r\n            }\r\n          })[entry.tagType] || noop).call(self);\r\n        },\r\n        uri: function uri() {\r\n          currentUri.uri = entry.uri;\r\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\r\n\r\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\r\n            this.trigger('warn', {\r\n              message: 'defaulting segment duration to the target duration'\r\n            });\r\n            currentUri.duration = this.manifest.targetDuration;\r\n          } // annotate with encryption information, if necessary\r\n\r\n\r\n          if (_key) {\r\n            currentUri.key = _key;\r\n          }\r\n\r\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\r\n\r\n          if (currentMap) {\r\n            currentUri.map = currentMap;\r\n          } // reset the last byterange end as it needs to be 0 between parts\r\n\r\n\r\n          lastPartByterangeEnd = 0; // prepare for the next URI\r\n\r\n          currentUri = {};\r\n        },\r\n        comment: function comment() {// comments are not important for playback\r\n        },\r\n        custom: function custom() {\r\n          // if this is segment-level data attach the output to the segment\r\n          if (entry.segment) {\r\n            currentUri.custom = currentUri.custom || {};\r\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\r\n          } else {\r\n            this.manifest.custom = this.manifest.custom || {};\r\n            this.manifest.custom[entry.customType] = entry.data;\r\n          }\r\n        }\r\n      })[entry.type].call(self);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Parser.prototype;\r\n\r\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\r\n    var missing = [];\r\n    required.forEach(function (key) {\r\n      if (!attributes.hasOwnProperty(key)) {\r\n        missing.push(key);\r\n      }\r\n    });\r\n\r\n    if (missing.length) {\r\n      this.trigger('warn', {\r\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Parse the input string and update the manifest object.\r\n   *\r\n   * @param {string} chunk a potentially incomplete portion of the manifest\r\n   */\r\n  ;\r\n\r\n  _proto.push = function push(chunk) {\r\n    this.lineStream.push(chunk);\r\n  }\r\n  /**\r\n   * Flush any remaining input. This can be handy if the last line of an M3U8\r\n   * manifest did not contain a trailing newline but the file has been\r\n   * completely received.\r\n   */\r\n  ;\r\n\r\n  _proto.end = function end() {\r\n    // flush any buffered input\r\n    this.lineStream.push('\\n');\r\n    this.trigger('end');\r\n  }\r\n  /**\r\n   * Add an additional parser for non-standard tags\r\n   *\r\n   * @param {Object}   options              a map of options for the added parser\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {string}   options.type         the type to register to the output\r\n   * @param {Function} [options.dataParser] function to parse the line into an object\r\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\r\n   */\r\n  ;\r\n\r\n  _proto.addParser = function addParser(options) {\r\n    this.parseStream.addParser(options);\r\n  }\r\n  /**\r\n   * Add a custom header mapper\r\n   *\r\n   * @param {Object}   options\r\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\r\n   * @param {Function} options.map          function to translate tag into a different tag\r\n   */\r\n  ;\r\n\r\n  _proto.addTagMapper = function addTagMapper(options) {\r\n    this.parseStream.addTagMapper(options);\r\n  };\r\n\r\n  return Parser;\r\n}(Stream);\r\n\r\nexport { LineStream, ParseStream, Parser };\r\n"],"mappings":";;;;AAAA;AACA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,MAAM,MAAM,iCAAiC;AACpD,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,sBAAsB,MAAM,8CAA8C;AACjF,OAAOC,qBAAqB,MAAM,oDAAoD;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAG,aAAa,UAAUC,OAAO,EAAE;EAC/CN,cAAc,CAACK,UAAU,EAAEC,OAAO,CAAC;EAEnC,SAASD,UAAUA,CAAA,EAAG;IACpB,IAAIE,KAAK;IAETA,KAAK,GAAGD,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IAClCD,KAAK,CAACE,MAAM,GAAG,EAAE;IACjB,OAAOF,KAAK;EACd;EACA;AACF;AACA;AACA;AACA;;EAGE,IAAIG,MAAM,GAAGL,UAAU,CAACM,SAAS;EAEjCD,MAAM,CAACE,IAAI,GAAG,SAASA,IAAIA,CAACC,IAAI,EAAE;IAChC,IAAIC,WAAW;IACf,IAAI,CAACL,MAAM,IAAII,IAAI;IACnBC,WAAW,GAAG,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,IAAI,CAAC;IAEvC,OAAOD,WAAW,GAAG,CAAC,CAAC,EAAEA,WAAW,GAAG,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,IAAI,CAAC,EAAE;MAChE,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAACP,MAAM,CAACQ,SAAS,CAAC,CAAC,EAAEH,WAAW,CAAC,CAAC;MAC3D,IAAI,CAACL,MAAM,GAAG,IAAI,CAACA,MAAM,CAACQ,SAAS,CAACH,WAAW,GAAG,CAAC,CAAC;IACtD;EACF,CAAC;EAED,OAAOT,UAAU;AACnB,CAAC,CAACJ,MAAM,CAAC;AAET,IAAIiB,GAAG,GAAGC,MAAM,CAACC,YAAY,CAAC,IAAI,CAAC;AAEnC,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,eAAe,EAAE;EAC5D;EACA;EACA,IAAIC,KAAK,GAAG,wBAAwB,CAACC,IAAI,CAACF,eAAe,IAAI,EAAE,CAAC;EAChE,IAAIG,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIF,KAAK,CAAC,CAAC,CAAC,EAAE;IACZE,MAAM,CAACC,MAAM,GAAGC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACxC;EAEA,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACZE,MAAM,CAACG,MAAM,GAAGD,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACxC;EAEA,OAAOE,MAAM;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAII,kBAAkB,GAAG,SAASA,kBAAkBA,CAAA,EAAG;EACrD,IAAIC,GAAG,GAAG,OAAO;EACjB,IAAIC,KAAK,GAAG,eAAe;EAC3B,IAAIC,QAAQ,GAAG,KAAK,GAAGF,GAAG,GAAG,OAAO,GAAGC,KAAK,GAAG,GAAG;EAClD,OAAO,IAAIE,MAAM,CAAC,UAAU,GAAGD,QAAQ,GAAG,GAAG,CAAC;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;;AAGA,IAAIE,eAAe,GAAG,SAASA,eAAeA,CAACC,UAAU,EAAE;EACzD;EACA,IAAIC,KAAK,GAAGD,UAAU,CAACE,KAAK,CAACR,kBAAkB,CAAC,CAAC,CAAC;EAClD,IAAIJ,MAAM,GAAG,CAAC,CAAC;EACf,IAAIa,CAAC,GAAGF,KAAK,CAACV,MAAM;EACpB,IAAIa,IAAI;EAER,OAAOD,CAAC,EAAE,EAAE;IACV;IACA,IAAIF,KAAK,CAACE,CAAC,CAAC,KAAK,EAAE,EAAE;MACnB;IACF,CAAC,CAAC;;IAGFC,IAAI,GAAG,cAAc,CAACf,IAAI,CAACY,KAAK,CAACE,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE/CD,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IAC3CF,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IAC3CF,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;IAClDhB,MAAM,CAACc,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC;EAC3B;EAEA,OAAOd,MAAM;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIiB,WAAW,GAAG,aAAa,UAAUpC,OAAO,EAAE;EAChDN,cAAc,CAAC0C,WAAW,EAAEpC,OAAO,CAAC;EAEpC,SAASoC,WAAWA,CAAA,EAAG;IACrB,IAAInC,KAAK;IAETA,KAAK,GAAGD,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IAClCD,KAAK,CAACoC,aAAa,GAAG,EAAE;IACxBpC,KAAK,CAACqC,UAAU,GAAG,EAAE;IACrB,OAAOrC,KAAK;EACd;EACA;AACF;AACA;AACA;AACA;;EAGE,IAAIG,MAAM,GAAGgC,WAAW,CAAC/B,SAAS;EAElCD,MAAM,CAACE,IAAI,GAAG,SAASA,IAAIA,CAACiC,IAAI,EAAE;IAChC,IAAIC,MAAM,GAAG,IAAI;IAEjB,IAAIvB,KAAK;IACT,IAAIwB,KAAK,CAAC,CAAC;;IAEXF,IAAI,GAAGA,IAAI,CAACG,IAAI,CAAC,CAAC;IAElB,IAAIH,IAAI,CAACnB,MAAM,KAAK,CAAC,EAAE;MACrB;MACA;IACF,CAAC,CAAC;;IAGF,IAAImB,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACnB,IAAI,CAAC7B,OAAO,CAAC,MAAM,EAAE;QACnBiC,IAAI,EAAE,KAAK;QACXC,GAAG,EAAEL;MACP,CAAC,CAAC;MACF;IACF,CAAC,CAAC;;IAGF,IAAIM,QAAQ,GAAG,IAAI,CAACP,UAAU,CAACQ,MAAM,CAAC,UAAUC,GAAG,EAAEC,MAAM,EAAE;MAC3D,IAAIC,UAAU,GAAGD,MAAM,CAACT,IAAI,CAAC,CAAC,CAAC;;MAE/B,IAAIU,UAAU,KAAKV,IAAI,EAAE;QACvB,OAAOQ,GAAG;MACZ;MAEA,OAAOA,GAAG,CAACG,MAAM,CAAC,CAACD,UAAU,CAAC,CAAC;IACjC,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;IACVM,QAAQ,CAACM,OAAO,CAAC,UAAUC,OAAO,EAAE;MAClC,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,MAAM,CAACH,aAAa,CAACjB,MAAM,EAAEY,CAAC,EAAE,EAAE;QACpD,IAAIQ,MAAM,CAACH,aAAa,CAACL,CAAC,CAAC,CAAC9B,IAAI,CAACsC,MAAM,EAAEY,OAAO,CAAC,EAAE;UACjD;QACF;MACF,CAAC,CAAC;;MAGF,IAAIA,OAAO,CAAC3C,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QACjC+B,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;UACrBiC,IAAI,EAAE,SAAS;UACfU,IAAI,EAAED,OAAO,CAAClB,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC;QAEF;MACF,CAAC,CAAC;MACF;;MAGAkB,OAAO,GAAGA,OAAO,CAACjB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;MAErClB,KAAK,GAAG,UAAU,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEhC,IAAInC,KAAK,EAAE;QACTuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;UACrBiC,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC,CAAC;QAEF;MACF;MAEArC,KAAK,GAAG,+BAA+B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAErD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACc,QAAQ,GAAGC,UAAU,CAACvC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC;QAEA,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACgB,KAAK,GAAGxC,KAAK,CAAC,CAAC,CAAC;QACxB;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,oCAAoC,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE1D,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACc,QAAQ,GAAGlC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACzC;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,6BAA6B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEnD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACiB,OAAO,GAAGrC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACxC;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,uCAAuC,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE7D,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACkB,MAAM,GAAGtC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACvC;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,+CAA+C,CAACC,IAAI,CAACkC,OAAO,CAAC;MAErE,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACkB,MAAM,GAAGtC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACvC;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,+BAA+B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAErD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACmB,YAAY,GAAG3C,KAAK,CAAC,CAAC,CAAC;QAC/B;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,2BAA2B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEjD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG7C,QAAQ,CAACmB,cAAc,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;UACzC0B,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC,CAAC;QAEFd,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,gCAAgC,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEtD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACoB,OAAO,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC7C,KAAK,CAAC,CAAC,CAAC,CAAC;QACtC;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,oBAAoB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE1C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZ,IAAIY,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;UAE1C,IAAIY,UAAU,CAACkC,GAAG,EAAE;YAClBtB,KAAK,CAACG,GAAG,GAAGf,UAAU,CAACkC,GAAG;UAC5B;UAEA,IAAIlC,UAAU,CAACmC,SAAS,EAAE;YACxBvB,KAAK,CAACwB,SAAS,GAAGlD,cAAc,CAACc,UAAU,CAACmC,SAAS,CAAC;UACxD;QACF;QAEAxB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,2BAA2B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEjD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;UAE5C,IAAIwB,KAAK,CAACZ,UAAU,CAACqC,UAAU,EAAE;YAC/B,IAAInC,KAAK,GAAGU,KAAK,CAACZ,UAAU,CAACqC,UAAU,CAACnC,KAAK,CAAC,GAAG,CAAC;YAClD,IAAIoC,UAAU,GAAG,CAAC,CAAC;YAEnB,IAAIpC,KAAK,CAAC,CAAC,CAAC,EAAE;cACZoC,UAAU,CAACC,KAAK,GAAG/C,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC3C;YAEA,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;cACZoC,UAAU,CAACE,MAAM,GAAGhD,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC5C;YAEAU,KAAK,CAACZ,UAAU,CAACqC,UAAU,GAAGC,UAAU;UAC1C;UAEA,IAAI1B,KAAK,CAACZ,UAAU,CAACyC,SAAS,EAAE;YAC9B7B,KAAK,CAACZ,UAAU,CAACyC,SAAS,GAAGjD,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAACyC,SAAS,EAAE,EAAE,CAAC;UACvE;UAEA,IAAI7B,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,EAAE;YAClCY,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,GAAG2B,UAAU,CAACf,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,CAAC;UAC7E;UAEA,IAAIY,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,EAAE;YAClCY,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,GAAGR,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC;UAC/E;QACF;QAEAW,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,sBAAsB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE5C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9C;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,iBAAiB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEvC,IAAInC,KAAK,EAAE;QACTuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;UACrBiC,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC,CAAC;QAEF;MACF;MAEArC,KAAK,GAAG,uBAAuB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE7C,IAAInC,KAAK,EAAE;QACTuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;UACrBiC,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC,CAAC;QAEF;MACF;MAEArC,KAAK,GAAG,kCAAkC,CAACC,IAAI,CAACkC,OAAO,CAAC;MAExD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAAC8B,cAAc,GAAGtD,KAAK,CAAC,CAAC,CAAC;UAC/BwB,KAAK,CAAC+B,cAAc,GAAG,IAAIC,IAAI,CAACxD,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C;QAEAuB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,oBAAoB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE1C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;UAE9C,IAAIwB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,EAAE;YACvB,IAAIjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC/D,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACgE,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;cAC9DlC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,GAAGjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC/D,SAAS,CAAC,CAAC,CAAC;YACxD;YAEA8B,KAAK,CAACZ,UAAU,CAAC6C,EAAE,GAAGjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAACzD,KAAK,CAAC,OAAO,CAAC;YACxDwB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,GAAGrD,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7DjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,GAAGrD,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7DjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,GAAGrD,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7DjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,GAAGrD,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC7DjC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,GAAG,IAAIE,WAAW,CAACnC,KAAK,CAACZ,UAAU,CAAC6C,EAAE,CAAC;UAC5D;QACF;QAEAlC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,sBAAsB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE5C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;UAC5CwB,KAAK,CAACZ,UAAU,CAAC,aAAa,CAAC,GAAG2B,UAAU,CAACf,KAAK,CAACZ,UAAU,CAAC,aAAa,CAAC,CAAC;UAC7EY,KAAK,CAACZ,UAAU,CAACgD,OAAO,GAAG,KAAK,CAACf,IAAI,CAACrB,KAAK,CAACZ,UAAU,CAACgD,OAAO,CAAC;QACjE;QAEArC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,8BAA8B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEpD,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAAClC,IAAI,GAAGU,KAAK,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;UACLwB,KAAK,CAAClC,IAAI,GAAG,EAAE;QACjB;QAEAiC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,yBAAyB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE/C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAAClC,IAAI,GAAGU,KAAK,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;UACLwB,KAAK,CAAClC,IAAI,GAAG,EAAE;QACjB;QAEAiC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,wBAAwB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE9C,IAAInC,KAAK,EAAE;QACTwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QAED,IAAIrC,KAAK,CAAC,CAAC,CAAC,EAAE;UACZwB,KAAK,CAAClC,IAAI,GAAGU,KAAK,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;UACLwB,KAAK,CAAClC,IAAI,GAAG,EAAE;QACjB;QAEAiC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,oBAAoB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE1C,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAE5C,IAAIwB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAAC,kBAAkB,CAAC,EAAE;UACvDrC,KAAK,CAACZ,UAAU,CAAC,kBAAkB,CAAC,GAAGR,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC;QAC3F;QAEA,IAAIY,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAAC,6BAA6B,CAAC,EAAE;UAClErC,KAAK,CAACZ,UAAU,CAAC,6BAA6B,CAAC,GAAGY,KAAK,CAACZ,UAAU,CAAC,6BAA6B,CAAC,CAACE,KAAK,CAACnB,GAAG,CAAC;QAC9G;QAEA4B,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,oBAAoB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE1C,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,UAAU,CAAC,CAACkC,OAAO,CAAC,UAAU3B,GAAG,EAAE;UAClC,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAGgC,UAAU,CAACf,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QACF,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC2B,OAAO,CAAC,UAAU3B,GAAG,EAAE;UAC5C,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAG,KAAK,CAACsC,IAAI,CAACrB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QAEF,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAAC,WAAW,CAAC,EAAE;UAChDrC,KAAK,CAACZ,UAAU,CAACoC,SAAS,GAAGlD,cAAc,CAAC0B,KAAK,CAACZ,UAAU,CAACmC,SAAS,CAAC;QACzE;QAEAxB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,8BAA8B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEpD,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAACkC,OAAO,CAAC,UAAU3B,GAAG,EAAE;UACvE,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAGgC,UAAU,CAACf,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QACF,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC2B,OAAO,CAAC,UAAU3B,GAAG,EAAE;UACjE,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAG,KAAK,CAACsC,IAAI,CAACrB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QAEFgB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,wBAAwB,CAACC,IAAI,CAACkC,OAAO,CAAC;MAE9C,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,aAAa,CAAC,CAACkC,OAAO,CAAC,UAAU3B,GAAG,EAAE;UACrC,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAGgC,UAAU,CAACf,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QAEFgB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,4BAA4B,CAACC,IAAI,CAACkC,OAAO,CAAC;MAElD,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAACkC,OAAO,CAAC,UAAU3B,GAAG,EAAE;UAC7D,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAGH,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,EAAE,EAAE,CAAC;YAC3D,IAAIuD,MAAM,GAAGvD,GAAG,KAAK,kBAAkB,GAAG,QAAQ,GAAG,QAAQ;YAC7DiB,KAAK,CAACZ,UAAU,CAACoC,SAAS,GAAGxB,KAAK,CAACZ,UAAU,CAACoC,SAAS,IAAI,CAAC,CAAC;YAC7DxB,KAAK,CAACZ,UAAU,CAACoC,SAAS,CAACc,MAAM,CAAC,GAAGtC,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,CAAC,CAAC;;YAE5D,OAAOiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC;UAC9B;QACF,CAAC,CAAC;QAEFgB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF;MAEAxB,KAAK,GAAG,gCAAgC,CAACC,IAAI,CAACkC,OAAO,CAAC;MAEtD,IAAInC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;QACrBwB,KAAK,GAAG;UACNE,IAAI,EAAE,KAAK;UACXW,OAAO,EAAE;QACX,CAAC;QACDb,KAAK,CAACZ,UAAU,GAAGD,eAAe,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,UAAU,EAAE,WAAW,CAAC,CAACkC,OAAO,CAAC,UAAU3B,GAAG,EAAE;UAC/C,IAAIiB,KAAK,CAACZ,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;YACxCiB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,GAAGH,QAAQ,CAACoB,KAAK,CAACZ,UAAU,CAACL,GAAG,CAAC,EAAE,EAAE,CAAC;UAC7D;QACF,CAAC,CAAC;QAEFgB,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE+B,KAAK,CAAC;QAE7B;MACF,CAAC,CAAC;;MAGFD,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;QACrBiC,IAAI,EAAE,KAAK;QACXpC,IAAI,EAAE6C,OAAO,CAAClB,KAAK,CAAC,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KARE;EAWA9B,MAAM,CAAC4E,SAAS,GAAG,SAASA,SAASA,CAACC,IAAI,EAAE;IAC1C,IAAIC,MAAM,GAAG,IAAI;IAEjB,IAAIC,UAAU,GAAGF,IAAI,CAACE,UAAU;MAC5BC,UAAU,GAAGH,IAAI,CAACG,UAAU;MAC5BC,UAAU,GAAGJ,IAAI,CAACI,UAAU;MAC5BC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAE1B,IAAI,OAAOD,UAAU,KAAK,UAAU,EAAE;MACpCA,UAAU,GAAG,SAASA,UAAUA,CAAC9C,IAAI,EAAE;QACrC,OAAOA,IAAI;MACb,CAAC;IACH;IAEA,IAAI,CAACF,aAAa,CAAC/B,IAAI,CAAC,UAAUiC,IAAI,EAAE;MACtC,IAAItB,KAAK,GAAGkE,UAAU,CAACjE,IAAI,CAACqB,IAAI,CAAC;MAEjC,IAAItB,KAAK,EAAE;QACTiE,MAAM,CAACxE,OAAO,CAAC,MAAM,EAAE;UACrBiC,IAAI,EAAE,QAAQ;UACdpC,IAAI,EAAE8E,UAAU,CAAC9C,IAAI,CAAC;UACtB6C,UAAU,EAAEA,UAAU;UACtBE,OAAO,EAAEA;QACX,CAAC,CAAC;QAEF,OAAO,IAAI;MACb;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA,KANE;EASAlF,MAAM,CAACmF,YAAY,GAAG,SAASA,YAAYA,CAACC,KAAK,EAAE;IACjD,IAAIL,UAAU,GAAGK,KAAK,CAACL,UAAU;MAC7BM,GAAG,GAAGD,KAAK,CAACC,GAAG;IAEnB,IAAIC,KAAK,GAAG,SAASA,KAAKA,CAACnD,IAAI,EAAE;MAC/B,IAAI4C,UAAU,CAACrB,IAAI,CAACvB,IAAI,CAAC,EAAE;QACzB,OAAOkD,GAAG,CAAClD,IAAI,CAAC;MAClB;MAEA,OAAOA,IAAI;IACb,CAAC;IAED,IAAI,CAACD,UAAU,CAAChC,IAAI,CAACoF,KAAK,CAAC;EAC7B,CAAC;EAED,OAAOtD,WAAW;AACpB,CAAC,CAACzC,MAAM,CAAC;AAET,IAAIgG,SAAS,GAAG,SAASA,SAASA,CAACC,GAAG,EAAE;EACtC,OAAOA,GAAG,CAACjB,WAAW,CAAC,CAAC,CAACxC,OAAO,CAAC,QAAQ,EAAE,UAAU0D,CAAC,EAAE;IACtD,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAAClE,UAAU,EAAE;EACrD,IAAIV,MAAM,GAAG,CAAC,CAAC;EACf6E,MAAM,CAACC,IAAI,CAACpE,UAAU,CAAC,CAACsB,OAAO,CAAC,UAAU3B,GAAG,EAAE;IAC7CL,MAAM,CAACwE,SAAS,CAACnE,GAAG,CAAC,CAAC,GAAGK,UAAU,CAACL,GAAG,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOL,MAAM;AACf,CAAC,CAAC,CAAC;AACH;AACA;AACA;;AAGA,IAAI+E,WAAW,GAAG,SAASA,WAAWA,CAACC,QAAQ,EAAE;EAC/C,IAAIC,aAAa,GAAGD,QAAQ,CAACC,aAAa;IACtCC,cAAc,GAAGF,QAAQ,CAACE,cAAc;IACxCC,kBAAkB,GAAGH,QAAQ,CAACG,kBAAkB;EAEpD,IAAI,CAACF,aAAa,EAAE;IAClB;EACF;EAEA,IAAIG,GAAG,GAAG,uBAAuB;EACjC,IAAIC,EAAE,GAAG,UAAU;EACnB,IAAIC,GAAG,GAAG,cAAc;EACxB,IAAIC,iBAAiB,GAAGL,cAAc,IAAIA,cAAc,GAAG,CAAC;EAC5D,IAAIM,eAAe,GAAGL,kBAAkB,IAAIA,kBAAkB,GAAG,CAAC;EAElE,IAAID,cAAc,IAAI,CAACD,aAAa,CAACtB,cAAc,CAAC0B,EAAE,CAAC,EAAE;IACvDJ,aAAa,CAACI,EAAE,CAAC,GAAGE,iBAAiB;IACrC,IAAI,CAAChG,OAAO,CAAC,MAAM,EAAE;MACnBkG,OAAO,EAAEL,GAAG,GAAG,+CAA+C,GAAGG,iBAAiB,GAAG;IACvF,CAAC,CAAC;EACJ;EAEA,IAAIA,iBAAiB,IAAIN,aAAa,CAACI,EAAE,CAAC,GAAGE,iBAAiB,EAAE;IAC9D,IAAI,CAAChG,OAAO,CAAC,MAAM,EAAE;MACnBkG,OAAO,EAAEL,GAAG,GAAG,uBAAuB,GAAGH,aAAa,CAACI,EAAE,CAAC,GAAG,2BAA2B,GAAGE,iBAAiB,GAAG;IACjH,CAAC,CAAC;IACFN,aAAa,CAACI,EAAE,CAAC,GAAGE,iBAAiB;EACvC,CAAC,CAAC;;EAGF,IAAIJ,kBAAkB,IAAI,CAACF,aAAa,CAACtB,cAAc,CAAC2B,GAAG,CAAC,EAAE;IAC5DL,aAAa,CAACK,GAAG,CAAC,GAAGH,kBAAkB,GAAG,CAAC;IAC3C,IAAI,CAAC5F,OAAO,CAAC,MAAM,EAAE;MACnBkG,OAAO,EAAEL,GAAG,GAAG,wDAAwD,GAAGH,aAAa,CAACK,GAAG,CAAC,GAAG;IACjG,CAAC,CAAC;EACJ,CAAC,CAAC;;EAGF,IAAIH,kBAAkB,IAAIF,aAAa,CAACK,GAAG,CAAC,GAAGE,eAAe,EAAE;IAC9D,IAAI,CAACjG,OAAO,CAAC,MAAM,EAAE;MACnBkG,OAAO,EAAEL,GAAG,GAAG,4BAA4B,GAAGH,aAAa,CAACK,GAAG,CAAC,GAAG,+BAA+B,GAAGE,eAAe,GAAG;IACzH,CAAC,CAAC;IACFP,aAAa,CAACK,GAAG,CAAC,GAAGE,eAAe;EACtC;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIE,MAAM,GAAG,aAAa,UAAU7G,OAAO,EAAE;EAC3CN,cAAc,CAACmH,MAAM,EAAE7G,OAAO,CAAC;EAE/B,SAAS6G,MAAMA,CAAA,EAAG;IAChB,IAAI5G,KAAK;IAETA,KAAK,GAAGD,OAAO,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IAClCD,KAAK,CAAC6G,UAAU,GAAG,IAAI/G,UAAU,CAAC,CAAC;IACnCE,KAAK,CAAC8G,WAAW,GAAG,IAAI3E,WAAW,CAAC,CAAC;IAErCnC,KAAK,CAAC6G,UAAU,CAACE,IAAI,CAAC/G,KAAK,CAAC8G,WAAW,CAAC;IACxC;;IAGA,IAAIE,IAAI,GAAGpH,sBAAsB,CAACI,KAAK,CAAC;IACxC;;IAGA,IAAIiH,IAAI,GAAG,EAAE;IACb,IAAIC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErB,IAAIC,UAAU,CAAC,CAAC;;IAEhB,IAAIC,IAAI;IAER,IAAIC,QAAQ,GAAG,KAAK;IAEpB,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAG,CAAC,CAAC;IAE7B,IAAIC,kBAAkB,GAAG;MACvB,OAAO,EAAE,CAAC,CAAC;MACX,OAAO,EAAE,CAAC,CAAC;MACX,iBAAiB,EAAE,CAAC,CAAC;MACrB,WAAW,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;IACH;;IAEA,IAAIC,YAAY,GAAG,+CAA+C,CAAC,CAAC;;IAEpE,IAAIC,eAAe,GAAG,CAAC,CAAC,CAAC;;IAEzBzH,KAAK,CAACkG,QAAQ,GAAG;MACfwB,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,EAAE;MACvBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;IACH;IACA;;IAEA,IAAIC,gBAAgB,GAAG,CAAC,CAAC,CAAC;;IAE1B,IAAIC,oBAAoB,GAAG,CAAC;IAE5B9H,KAAK,CAAC+H,EAAE,CAAC,KAAK,EAAE,YAAY;MAC1B;MACA;MACA,IAAIb,UAAU,CAACvE,GAAG,IAAI,CAACuE,UAAU,CAACc,KAAK,IAAI,CAACd,UAAU,CAACe,YAAY,EAAE;QACnE;MACF;MAEA,IAAI,CAACf,UAAU,CAAC1B,GAAG,IAAI2B,UAAU,EAAE;QACjCD,UAAU,CAAC1B,GAAG,GAAG2B,UAAU;MAC7B;MAEA,IAAI,CAACD,UAAU,CAAC3F,GAAG,IAAI6F,IAAI,EAAE;QAC3BF,UAAU,CAAC3F,GAAG,GAAG6F,IAAI;MACvB;MAEA,IAAI,CAACF,UAAU,CAACgB,QAAQ,IAAI,OAAOT,eAAe,KAAK,QAAQ,EAAE;QAC/DP,UAAU,CAACgB,QAAQ,GAAGT,eAAe;MACvC;MAEAzH,KAAK,CAACkG,QAAQ,CAACiC,cAAc,GAAGjB,UAAU;IAC5C,CAAC,CAAC,CAAC,CAAC;;IAGJlH,KAAK,CAAC8G,WAAW,CAACiB,EAAE,CAAC,MAAM,EAAE,UAAUK,KAAK,EAAE;MAC5C,IAAIC,UAAU;MACd,IAAIC,SAAS;MACb,CAAC;QACChC,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;UAClB;UACA,CAAC,CAAC;YACA7C,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;cAC1B,IAAI2E,KAAK,CAAC3E,OAAO,EAAE;gBACjB,IAAI,CAACyC,QAAQ,CAACzC,OAAO,GAAG2E,KAAK,CAAC3E,OAAO;cACvC;YACF,CAAC;YACD,aAAa,EAAE,SAASiE,UAAUA,CAAA,EAAG;cACnC,IAAI,CAACxB,QAAQ,CAACwB,UAAU,GAAGU,KAAK,CAACxE,OAAO;cAExC,IAAI,EAAE,SAAS,IAAIwE,KAAK,CAAC,EAAE;gBACzB,IAAI,CAAC3H,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF,IAAI,CAACT,QAAQ,CAACwB,UAAU,GAAG,IAAI;cACjC;YACF,CAAC;YACD1D,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;cAC9B,IAAIA,SAAS,GAAG,CAAC,CAAC;cAElB,IAAI,QAAQ,IAAIoE,KAAK,EAAE;gBACrBlB,UAAU,CAAClD,SAAS,GAAGA,SAAS;gBAChCA,SAAS,CAAC7C,MAAM,GAAGiH,KAAK,CAACjH,MAAM;gBAE/B,IAAI,EAAE,QAAQ,IAAIiH,KAAK,CAAC,EAAE;kBACxB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kBACkBA,KAAK,CAAC/G,MAAM,GAAGwG,gBAAgB;gBACjC;cACF;cAEA,IAAI,QAAQ,IAAIO,KAAK,EAAE;gBACrBlB,UAAU,CAAClD,SAAS,GAAGA,SAAS;gBAChCA,SAAS,CAAC3C,MAAM,GAAG+G,KAAK,CAAC/G,MAAM;cACjC;cAEAwG,gBAAgB,GAAG7D,SAAS,CAAC3C,MAAM,GAAG2C,SAAS,CAAC7C,MAAM;YACxD,CAAC;YACDoH,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;cAC1B,IAAI,CAACrC,QAAQ,CAACsC,OAAO,GAAG,IAAI;YAC9B,CAAC;YACDC,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB,IAAI,EAAE,eAAe,IAAI,IAAI,CAACvC,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAACA,QAAQ,CAACwC,aAAa,GAAG,CAAC;gBAC/B,IAAI,CAACjI,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cAEA,IAAI,EAAE,uBAAuB,IAAI,IAAI,CAACT,QAAQ,CAAC,EAAE;gBAC/C,IAAI,CAACA,QAAQ,CAACyC,qBAAqB,GAAG,CAAC;gBACvC,IAAI,CAAClI,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cAEA,IAAIyB,KAAK,CAAC9E,QAAQ,GAAG,CAAC,EAAE;gBACtB4D,UAAU,CAAC5D,QAAQ,GAAG8E,KAAK,CAAC9E,QAAQ;cACtC;cAEA,IAAI8E,KAAK,CAAC9E,QAAQ,KAAK,CAAC,EAAE;gBACxB4D,UAAU,CAAC5D,QAAQ,GAAG,IAAI;gBAC1B,IAAI,CAAC7C,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cAEA,IAAI,CAACT,QAAQ,CAAC0B,QAAQ,GAAGX,IAAI;YAC/B,CAAC;YACD1F,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB,IAAI,CAAC6G,KAAK,CAACxG,UAAU,EAAE;gBACrB,IAAI,CAACnB,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF,CAAC,CAAC;;cAGF,IAAIyB,KAAK,CAACxG,UAAU,CAACgH,MAAM,KAAK,MAAM,EAAE;gBACtCxB,IAAI,GAAG,IAAI;gBACX;cACF;cAEA,IAAI,CAACgB,KAAK,CAACxG,UAAU,CAACkC,GAAG,EAAE;gBACzB,IAAI,CAACrD,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cAEA,IAAIyB,KAAK,CAACxG,UAAU,CAACiH,SAAS,KAAK,gCAAgC,EAAE;gBACnE,IAAI,CAAC3C,QAAQ,CAAC4C,iBAAiB,GAAG,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC;;gBAEzE,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,CAAC,mBAAmB,CAAC,GAAG;kBACrDlH,UAAU,EAAEwG,KAAK,CAACxG;gBACpB,CAAC;gBACD;cACF;cAEA,IAAIwG,KAAK,CAACxG,UAAU,CAACiH,SAAS,KAAK,yBAAyB,EAAE;gBAC5D,IAAI,CAAC3C,QAAQ,CAAC4C,iBAAiB,GAAG,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC;;gBAEzE,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,CAAC,yBAAyB,CAAC,GAAG;kBAC3DnG,GAAG,EAAEyF,KAAK,CAACxG,UAAU,CAACkC;gBACxB,CAAC;gBACD;cACF,CAAC,CAAC;cACF;;cAGA,IAAIsE,KAAK,CAACxG,UAAU,CAACiH,SAAS,KAAKrB,YAAY,EAAE;gBAC/C,IAAIuB,aAAa,GAAG,CAAC,YAAY,EAAE,gBAAgB,EAAE,iBAAiB,CAAC;gBAEvE,IAAIA,aAAa,CAACvI,OAAO,CAAC4H,KAAK,CAACxG,UAAU,CAACgH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;kBACzD,IAAI,CAACnI,OAAO,CAAC,MAAM,EAAE;oBACnBkG,OAAO,EAAE;kBACX,CAAC,CAAC;kBACF;gBACF;gBAEA,IAAIyB,KAAK,CAACxG,UAAU,CAACgH,MAAM,KAAK,iBAAiB,EAAE;kBACjD,IAAI,CAACnI,OAAO,CAAC,MAAM,EAAE;oBACnBkG,OAAO,EAAE;kBACX,CAAC,CAAC;gBACJ;gBAEA,IAAIyB,KAAK,CAACxG,UAAU,CAACkC,GAAG,CAACpD,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,yBAAyB,EAAE;kBACvE,IAAI,CAACD,OAAO,CAAC,MAAM,EAAE;oBACnBkG,OAAO,EAAE;kBACX,CAAC,CAAC;kBACF;gBACF;gBAEA,IAAI,EAAEyB,KAAK,CAACxG,UAAU,CAACoH,KAAK,IAAIZ,KAAK,CAACxG,UAAU,CAACoH,KAAK,CAACtI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE;kBAChF,IAAI,CAACD,OAAO,CAAC,MAAM,EAAE;oBACnBkG,OAAO,EAAE;kBACX,CAAC,CAAC;kBACF;gBACF,CAAC,CAAC;gBACF;;gBAGA,IAAI,CAACT,QAAQ,CAAC4C,iBAAiB,GAAG,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,IAAI,CAAC,CAAC;gBACvE,IAAI,CAAC5C,QAAQ,CAAC4C,iBAAiB,CAAC,oBAAoB,CAAC,GAAG;kBACtDlH,UAAU,EAAE;oBACVqH,WAAW,EAAEb,KAAK,CAACxG,UAAU,CAACiH,SAAS;oBACvC;oBACAK,KAAK,EAAEd,KAAK,CAACxG,UAAU,CAACoH,KAAK,CAACtI,SAAS,CAAC,CAAC;kBAC3C,CAAC;kBACD;kBACAyI,IAAI,EAAEtJ,qBAAqB,CAACuI,KAAK,CAACxG,UAAU,CAACkC,GAAG,CAAChC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChE,CAAC;gBACD;cACF;cAEA,IAAI,CAACsG,KAAK,CAACxG,UAAU,CAACgH,MAAM,EAAE;gBAC5B,IAAI,CAACnI,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ,CAAC,CAAC;;cAGFS,IAAI,GAAG;gBACLgC,MAAM,EAAEhB,KAAK,CAACxG,UAAU,CAACgH,MAAM,IAAI,SAAS;gBAC5CjG,GAAG,EAAEyF,KAAK,CAACxG,UAAU,CAACkC;cACxB,CAAC;cAED,IAAI,OAAOsE,KAAK,CAACxG,UAAU,CAAC6C,EAAE,KAAK,WAAW,EAAE;gBAC9C2C,IAAI,CAACiC,EAAE,GAAGjB,KAAK,CAACxG,UAAU,CAAC6C,EAAE;cAC/B;YACF,CAAC;YACD,gBAAgB,EAAE,SAASiE,aAAaA,CAAA,EAAG;cACzC,IAAI,CAACY,QAAQ,CAAClB,KAAK,CAAC1E,MAAM,CAAC,EAAE;gBAC3B,IAAI,CAACjD,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE,mCAAmC,GAAGyB,KAAK,CAAC1E;gBACvD,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACwC,QAAQ,CAACwC,aAAa,GAAGN,KAAK,CAAC1E,MAAM;YAC5C,CAAC;YACD,wBAAwB,EAAE,SAASiF,qBAAqBA,CAAA,EAAG;cACzD,IAAI,CAACW,QAAQ,CAAClB,KAAK,CAAC1E,MAAM,CAAC,EAAE;gBAC3B,IAAI,CAACjD,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE,2CAA2C,GAAGyB,KAAK,CAAC1E;gBAC/D,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACwC,QAAQ,CAACyC,qBAAqB,GAAGP,KAAK,CAAC1E,MAAM;cAClD+D,eAAe,GAAGW,KAAK,CAAC1E,MAAM;YAChC,CAAC;YACD,eAAe,EAAE,SAASC,YAAYA,CAAA,EAAG;cACvC,IAAI,CAAC,WAAW,CAACE,IAAI,CAACuE,KAAK,CAACzE,YAAY,CAAC,EAAE;gBACzC,IAAI,CAAClD,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE,kCAAkC,GAAGyB,KAAK,CAACmB;gBACtD,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACrD,QAAQ,CAACvC,YAAY,GAAGyE,KAAK,CAACzE,YAAY;YACjD,CAAC;YACD6B,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB2B,UAAU,GAAG,CAAC,CAAC;cAEf,IAAIiB,KAAK,CAACzF,GAAG,EAAE;gBACbwE,UAAU,CAACxE,GAAG,GAAGyF,KAAK,CAACzF,GAAG;cAC5B;cAEA,IAAIyF,KAAK,CAACpE,SAAS,EAAE;gBACnBmD,UAAU,CAACnD,SAAS,GAAGoE,KAAK,CAACpE,SAAS;cACxC;cAEA,IAAIoD,IAAI,EAAE;gBACRD,UAAU,CAAC5F,GAAG,GAAG6F,IAAI;cACvB;YACF,CAAC;YACD,YAAY,EAAE,SAASoC,SAASA,CAAA,EAAG;cACjC,IAAI,CAACtD,QAAQ,CAACuD,SAAS,GAAGxC,IAAI;cAC9B,IAAI,CAACf,QAAQ,CAACwD,WAAW,GAAG,IAAI,CAACxD,QAAQ,CAACwD,WAAW,IAAInC,kBAAkB;cAE3E,IAAI,CAACa,KAAK,CAACxG,UAAU,EAAE;gBACrB,IAAI,CAACnB,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACO,UAAU,CAACtF,UAAU,EAAE;gBAC1BsF,UAAU,CAACtF,UAAU,GAAG,CAAC,CAAC;cAC5B;cAEAjC,QAAQ,CAACuH,UAAU,CAACtF,UAAU,EAAEwG,KAAK,CAACxG,UAAU,CAAC;YACnD,CAAC;YACD+H,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;cACtB,IAAI,CAACzD,QAAQ,CAACwD,WAAW,GAAG,IAAI,CAACxD,QAAQ,CAACwD,WAAW,IAAInC,kBAAkB;cAE3E,IAAI,EAAEa,KAAK,CAACxG,UAAU,IAAIwG,KAAK,CAACxG,UAAU,CAACgI,IAAI,IAAIxB,KAAK,CAACxG,UAAU,CAAC,UAAU,CAAC,IAAIwG,KAAK,CAACxG,UAAU,CAACiI,IAAI,CAAC,EAAE;gBACzG,IAAI,CAACpJ,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF,CAAC,CAAC;;cAGF,IAAImD,cAAc,GAAG,IAAI,CAAC5D,QAAQ,CAACwD,WAAW,CAACtB,KAAK,CAACxG,UAAU,CAACgI,IAAI,CAAC;cACrEE,cAAc,CAAC1B,KAAK,CAACxG,UAAU,CAAC,UAAU,CAAC,CAAC,GAAGkI,cAAc,CAAC1B,KAAK,CAACxG,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;cACjGyG,UAAU,GAAGyB,cAAc,CAAC1B,KAAK,CAACxG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;cAE3D0G,SAAS,GAAG;gBACVyB,OAAO,EAAE,MAAM,CAAClG,IAAI,CAACuE,KAAK,CAACxG,UAAU,CAACoI,OAAO;cAC/C,CAAC;cAED,IAAI1B,SAAS,CAACyB,OAAO,EAAE;gBACrBzB,SAAS,CAAC2B,UAAU,GAAG,IAAI;cAC7B,CAAC,MAAM;gBACL3B,SAAS,CAAC2B,UAAU,GAAG,MAAM,CAACpG,IAAI,CAACuE,KAAK,CAACxG,UAAU,CAACsI,UAAU,CAAC;cACjE;cAEA,IAAI9B,KAAK,CAACxG,UAAU,CAACuI,QAAQ,EAAE;gBAC7B7B,SAAS,CAAC8B,QAAQ,GAAGhC,KAAK,CAACxG,UAAU,CAACuI,QAAQ;cAChD;cAEA,IAAI/B,KAAK,CAACxG,UAAU,CAACkC,GAAG,EAAE;gBACxBwE,SAAS,CAAC3F,GAAG,GAAGyF,KAAK,CAACxG,UAAU,CAACkC,GAAG;cACtC;cAEA,IAAIsE,KAAK,CAACxG,UAAU,CAAC,aAAa,CAAC,EAAE;gBACnC0G,SAAS,CAAC+B,UAAU,GAAGjC,KAAK,CAACxG,UAAU,CAAC,aAAa,CAAC;cACxD;cAEA,IAAIwG,KAAK,CAACxG,UAAU,CAAC0I,eAAe,EAAE;gBACpChC,SAAS,CAACiC,eAAe,GAAGnC,KAAK,CAACxG,UAAU,CAAC0I,eAAe;cAC9D;cAEA,IAAIlC,KAAK,CAACxG,UAAU,CAAC4I,MAAM,EAAE;gBAC3BlC,SAAS,CAACmC,MAAM,GAAG,MAAM,CAAC5G,IAAI,CAACuE,KAAK,CAACxG,UAAU,CAAC4I,MAAM,CAAC;cACzD,CAAC,CAAC;;cAGFnC,UAAU,CAACD,KAAK,CAACxG,UAAU,CAACiI,IAAI,CAAC,GAAGvB,SAAS;YAC/C,CAAC;YACDoC,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;cACtCjD,eAAe,IAAI,CAAC;cACpBP,UAAU,CAACwD,aAAa,GAAG,IAAI;cAC/B,IAAI,CAACxE,QAAQ,CAACyB,mBAAmB,CAACtH,IAAI,CAAC4G,IAAI,CAAC9F,MAAM,CAAC;YACrD,CAAC;YACD,mBAAmB,EAAE,SAASwJ,eAAeA,CAAA,EAAG;cAC9C,IAAI,OAAO,IAAI,CAACzE,QAAQ,CAAC5B,cAAc,KAAK,WAAW,EAAE;gBACvD;gBACA;gBACA;gBACA;gBACA,IAAI,CAAC4B,QAAQ,CAAC5B,cAAc,GAAG8D,KAAK,CAAC9D,cAAc;gBACnD,IAAI,CAAC4B,QAAQ,CAAC3B,cAAc,GAAG6D,KAAK,CAAC7D,cAAc;cACrD;cAEA2C,UAAU,CAAC5C,cAAc,GAAG8D,KAAK,CAAC9D,cAAc;cAChD4C,UAAU,CAAC3C,cAAc,GAAG6D,KAAK,CAAC7D,cAAc;YAClD,CAAC;YACDqG,cAAc,EAAE,SAASA,cAAcA,CAAA,EAAG;cACxC,IAAI,CAACtB,QAAQ,CAAClB,KAAK,CAAC9E,QAAQ,CAAC,IAAI8E,KAAK,CAAC9E,QAAQ,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC7C,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE,oCAAoC,GAAGyB,KAAK,CAAC9E;gBACxD,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAAC4C,QAAQ,CAACE,cAAc,GAAGgC,KAAK,CAAC9E,QAAQ;cAC7C2C,WAAW,CAAChG,IAAI,CAAC,IAAI,EAAE,IAAI,CAACiG,QAAQ,CAAC;YACvC,CAAC;YACD2E,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;cACtB,IAAI,CAACzC,KAAK,CAACxG,UAAU,IAAIkJ,KAAK,CAAC1C,KAAK,CAACxG,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE;gBAC/D,IAAI,CAACnB,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACT,QAAQ,CAAC2E,KAAK,GAAG;gBACpBE,UAAU,EAAE3C,KAAK,CAACxG,UAAU,CAAC,aAAa,CAAC;gBAC3CoJ,OAAO,EAAE5C,KAAK,CAACxG,UAAU,CAACgD;cAC5B,CAAC;YACH,CAAC;YACD,SAAS,EAAE,SAASqG,MAAMA,CAAA,EAAG;cAC3B/D,UAAU,CAAC+D,MAAM,GAAG7C,KAAK,CAAC9H,IAAI;YAChC,CAAC;YACD,cAAc,EAAE,SAAS4K,UAAUA,CAAA,EAAG;cACpChE,UAAU,CAACgE,UAAU,GAAG9C,KAAK,CAAC9H,IAAI;YACpC,CAAC;YACD,QAAQ,EAAE,SAAS6K,KAAKA,CAAA,EAAG;cACzBjE,UAAU,CAACiE,KAAK,GAAG/C,KAAK,CAAC9H,IAAI;YAC/B,CAAC;YACD,MAAM,EAAE,SAAS8K,IAAIA,CAAA,EAAG;cACtB,IAAI,CAAClF,QAAQ,CAACkF,IAAI,GAAGtF,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cACpD,IAAI,CAACyJ,wBAAwB,CAAC,aAAa,EAAEjD,KAAK,CAACxG,UAAU,EAAE,CAAC,kBAAkB,CAAC,CAAC;YACtF,CAAC;YACD,MAAM,EAAE,SAAS0J,IAAIA,CAAA,EAAG;cACtB,IAAI/I,MAAM,GAAG,IAAI;cAEjB8E,QAAQ,GAAG,IAAI,CAAC,CAAC;;cAEjB,IAAIkE,YAAY,GAAG,IAAI,CAACrF,QAAQ,CAAC0B,QAAQ,CAACzG,MAAM;cAChD,IAAImK,IAAI,GAAGxF,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cAC1CsF,UAAU,CAACc,KAAK,GAAGd,UAAU,CAACc,KAAK,IAAI,EAAE;cACzCd,UAAU,CAACc,KAAK,CAAC3H,IAAI,CAACiL,IAAI,CAAC;cAE3B,IAAIA,IAAI,CAACtH,SAAS,EAAE;gBAClB,IAAI,CAACsH,IAAI,CAACtH,SAAS,CAACa,cAAc,CAAC,QAAQ,CAAC,EAAE;kBAC5CyG,IAAI,CAACtH,SAAS,CAAC3C,MAAM,GAAGyG,oBAAoB;gBAC9C;gBAEAA,oBAAoB,GAAGwD,IAAI,CAACtH,SAAS,CAAC3C,MAAM,GAAGiK,IAAI,CAACtH,SAAS,CAAC7C,MAAM;cACtE;cAEA,IAAIqK,SAAS,GAAGtE,UAAU,CAACc,KAAK,CAAC7G,MAAM,GAAG,CAAC;cAC3C,IAAI,CAACkK,wBAAwB,CAAC,eAAe,GAAGG,SAAS,GAAG,gBAAgB,GAAGD,YAAY,EAAEnD,KAAK,CAACxG,UAAU,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;cAEnI,IAAI,IAAI,CAACsE,QAAQ,CAACuF,gBAAgB,EAAE;gBAClC,IAAI,CAACvF,QAAQ,CAACuF,gBAAgB,CAACvI,OAAO,CAAC,UAAUwI,CAAC,EAAE3J,CAAC,EAAE;kBACrD,IAAI,CAAC2J,CAAC,CAAC7G,cAAc,CAAC,UAAU,CAAC,EAAE;oBACjCtC,MAAM,CAAC9B,OAAO,CAAC,MAAM,EAAE;sBACrBkG,OAAO,EAAE,2BAA2B,GAAG5E,CAAC,GAAG;oBAC7C,CAAC,CAAC;kBACJ;gBACF,CAAC,CAAC;cACJ;YACF,CAAC;YACD,gBAAgB,EAAE,SAASoE,aAAaA,CAAA,EAAG;cACzC,IAAItE,KAAK,GAAG,IAAI,CAACqE,QAAQ,CAACC,aAAa,GAAGL,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cAEzE,IAAI,CAACC,KAAK,CAACgD,cAAc,CAAC,gBAAgB,CAAC,EAAE;gBAC3ChD,KAAK,CAAC8J,cAAc,GAAG,KAAK;gBAC5B,IAAI,CAAClL,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cAEAV,WAAW,CAAChG,IAAI,CAAC,IAAI,EAAE,IAAI,CAACiG,QAAQ,CAAC;cAErC,IAAIrE,KAAK,CAAC+J,iBAAiB,IAAI,CAAC/J,KAAK,CAACgD,cAAc,CAAC,cAAc,CAAC,EAAE;gBACpE,IAAI,CAACpE,OAAO,CAAC,MAAM,EAAE;kBACnBkG,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;YACF,CAAC;YACD,cAAc,EAAE,SAASkF,WAAWA,CAAA,EAAG;cACrC;cACA,IAAIN,YAAY,GAAG,IAAI,CAACrF,QAAQ,CAAC0B,QAAQ,CAACzG,MAAM;cAChD,IAAI2K,IAAI,GAAGhG,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cAC1C,IAAImK,MAAM,GAAGD,IAAI,CAACpJ,IAAI,IAAIoJ,IAAI,CAACpJ,IAAI,KAAK,MAAM;cAC9CwE,UAAU,CAACe,YAAY,GAAGf,UAAU,CAACe,YAAY,IAAI,EAAE;cACvDf,UAAU,CAACe,YAAY,CAAC5H,IAAI,CAACyL,IAAI,CAAC;cAElC,IAAIA,IAAI,CAAC9H,SAAS,EAAE;gBAClB,IAAI,CAAC8H,IAAI,CAAC9H,SAAS,CAACa,cAAc,CAAC,QAAQ,CAAC,EAAE;kBAC5C;kBACAiH,IAAI,CAAC9H,SAAS,CAAC3C,MAAM,GAAG0K,MAAM,GAAGjE,oBAAoB,GAAG,CAAC;kBAEzD,IAAIiE,MAAM,EAAE;oBACVjE,oBAAoB,GAAGgE,IAAI,CAAC9H,SAAS,CAAC3C,MAAM,GAAGyK,IAAI,CAAC9H,SAAS,CAAC7C,MAAM;kBACtE;gBACF;cACF;cAEA,IAAI6K,KAAK,GAAG9E,UAAU,CAACe,YAAY,CAAC9G,MAAM,GAAG,CAAC;cAC9C,IAAI,CAACkK,wBAAwB,CAAC,uBAAuB,GAAGW,KAAK,GAAG,gBAAgB,GAAGT,YAAY,EAAEnD,KAAK,CAACxG,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;cAEnI,IAAI,CAACkK,IAAI,CAACpJ,IAAI,EAAE;gBACd;cACF,CAAC,CAAC;cACF;;cAGA,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmF,UAAU,CAACe,YAAY,CAAC9G,MAAM,GAAG,CAAC,EAAEY,CAAC,EAAE,EAAE;gBAC3D,IAAIkK,SAAS,GAAG/E,UAAU,CAACe,YAAY,CAAClG,CAAC,CAAC;gBAE1C,IAAI,CAACkK,SAAS,CAACvJ,IAAI,EAAE;kBACnB;gBACF;gBAEA,IAAIuJ,SAAS,CAACvJ,IAAI,KAAKoJ,IAAI,CAACpJ,IAAI,EAAE;kBAChC,IAAI,CAACjC,OAAO,CAAC,MAAM,EAAE;oBACnBkG,OAAO,EAAE,uBAAuB,GAAGqF,KAAK,GAAG,gBAAgB,GAAGT,YAAY,GAAG,qBAAqB,GAAGO,IAAI,CAACpJ,IAAI,GAAG,oBAAoB,GAAGX;kBAC1I,CAAC,CAAC;gBACJ;cACF;YACF,CAAC;YACD,kBAAkB,EAAE,SAASmK,eAAeA,CAAA,EAAG;cAC7C,IAAIC,MAAM,GAAGrG,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cAC5C,IAAI,CAACsE,QAAQ,CAACuF,gBAAgB,GAAG,IAAI,CAACvF,QAAQ,CAACuF,gBAAgB,IAAI,EAAE;cACrE,IAAI,CAACvF,QAAQ,CAACuF,gBAAgB,CAACpL,IAAI,CAAC8L,MAAM,CAAC;cAC3C,IAAIH,KAAK,GAAG,IAAI,CAAC9F,QAAQ,CAACuF,gBAAgB,CAACtK,MAAM,GAAG,CAAC;cACrD,IAAIiL,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;cAElC,IAAI/E,QAAQ,EAAE;gBACZ+E,QAAQ,CAAC/L,IAAI,CAAC,WAAW,CAAC;cAC5B;cAEA,IAAI,CAACgL,wBAAwB,CAAC,2BAA2B,GAAGW,KAAK,EAAE5D,KAAK,CAACxG,UAAU,EAAEwK,QAAQ,CAAC;YAChG,CAAC;YACD,UAAU,EAAE,SAASC,OAAOA,CAAA,EAAG;cAC7B,IAAI,CAACnG,QAAQ,CAACmG,OAAO,GAAGvG,aAAa,CAACsC,KAAK,CAACxG,UAAU,CAAC;cACvD,IAAI,CAACyJ,wBAAwB,CAAC,iBAAiB,EAAEjD,KAAK,CAACxG,UAAU,EAAE,CAAC,aAAa,CAAC,CAAC;cAEnF,IAAI,IAAI,CAACsE,QAAQ,CAACmG,OAAO,CAACC,UAAU,EAAE;gBACpC,IAAI,CAACpG,QAAQ,CAACG,kBAAkB,GAAG,IAAI,CAACH,QAAQ,CAACmG,OAAO,CAACC,UAAU;cACrE;cAEArG,WAAW,CAAChG,IAAI,CAAC,IAAI,EAAE,IAAI,CAACiG,QAAQ,CAAC;YACvC;UACF,CAAC,EAAEkC,KAAK,CAAC/E,OAAO,CAAC,IAAIiE,IAAI,EAAErH,IAAI,CAAC+G,IAAI,CAAC;QACvC,CAAC;QACDrE,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;UAClBuE,UAAU,CAACvE,GAAG,GAAGyF,KAAK,CAACzF,GAAG;UAC1BsE,IAAI,CAAC5G,IAAI,CAAC6G,UAAU,CAAC,CAAC,CAAC;;UAEvB,IAAI,IAAI,CAAChB,QAAQ,CAACE,cAAc,IAAI,EAAE,UAAU,IAAIc,UAAU,CAAC,EAAE;YAC/D,IAAI,CAACzG,OAAO,CAAC,MAAM,EAAE;cACnBkG,OAAO,EAAE;YACX,CAAC,CAAC;YACFO,UAAU,CAAC5D,QAAQ,GAAG,IAAI,CAAC4C,QAAQ,CAACE,cAAc;UACpD,CAAC,CAAC;;UAGF,IAAIgB,IAAI,EAAE;YACRF,UAAU,CAAC3F,GAAG,GAAG6F,IAAI;UACvB;UAEAF,UAAU,CAACgB,QAAQ,GAAGT,eAAe,CAAC,CAAC;;UAEvC,IAAIN,UAAU,EAAE;YACdD,UAAU,CAAC1B,GAAG,GAAG2B,UAAU;UAC7B,CAAC,CAAC;;UAGFW,oBAAoB,GAAG,CAAC,CAAC,CAAC;;UAE1BZ,UAAU,GAAG,CAAC,CAAC;QACjB,CAAC;QACDqF,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG,CAAC;QAAA,CAC5B;QACDC,MAAM,EAAE,SAASA,MAAMA,CAAA,EAAG;UACxB;UACA,IAAIpE,KAAK,CAAC/C,OAAO,EAAE;YACjB6B,UAAU,CAACsF,MAAM,GAAGtF,UAAU,CAACsF,MAAM,IAAI,CAAC,CAAC;YAC3CtF,UAAU,CAACsF,MAAM,CAACpE,KAAK,CAACjD,UAAU,CAAC,GAAGiD,KAAK,CAAC9H,IAAI,CAAC,CAAC;UACpD,CAAC,MAAM;YACL,IAAI,CAAC4F,QAAQ,CAACsG,MAAM,GAAG,IAAI,CAACtG,QAAQ,CAACsG,MAAM,IAAI,CAAC,CAAC;YACjD,IAAI,CAACtG,QAAQ,CAACsG,MAAM,CAACpE,KAAK,CAACjD,UAAU,CAAC,GAAGiD,KAAK,CAAC9H,IAAI;UACrD;QACF;MACF,CAAC,EAAE8H,KAAK,CAAC1F,IAAI,CAAC,CAACzC,IAAI,CAAC+G,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAOhH,KAAK;EACd;EAEA,IAAIG,MAAM,GAAGyG,MAAM,CAACxG,SAAS;EAE7BD,MAAM,CAACkL,wBAAwB,GAAG,SAASA,wBAAwBA,CAACoB,UAAU,EAAE7K,UAAU,EAAEwK,QAAQ,EAAE;IACpG,IAAIM,OAAO,GAAG,EAAE;IAChBN,QAAQ,CAAClJ,OAAO,CAAC,UAAU3B,GAAG,EAAE;MAC9B,IAAI,CAACK,UAAU,CAACiD,cAAc,CAACtD,GAAG,CAAC,EAAE;QACnCmL,OAAO,CAACrM,IAAI,CAACkB,GAAG,CAAC;MACnB;IACF,CAAC,CAAC;IAEF,IAAImL,OAAO,CAACvL,MAAM,EAAE;MAClB,IAAI,CAACV,OAAO,CAAC,MAAM,EAAE;QACnBkG,OAAO,EAAE8F,UAAU,GAAG,gCAAgC,GAAGC,OAAO,CAACC,IAAI,CAAC,IAAI;MAC5E,CAAC,CAAC;IACJ;EACF;EACA;AACF;AACA;AACA;AACA,KAJE;EAOAxM,MAAM,CAACE,IAAI,GAAG,SAASA,IAAIA,CAACuM,KAAK,EAAE;IACjC,IAAI,CAAC/F,UAAU,CAACxG,IAAI,CAACuM,KAAK,CAAC;EAC7B;EACA;AACF;AACA;AACA;AACA,KAJE;EAOAzM,MAAM,CAAC0M,GAAG,GAAG,SAASA,GAAGA,CAAA,EAAG;IAC1B;IACA,IAAI,CAAChG,UAAU,CAACxG,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACI,OAAO,CAAC,KAAK,CAAC;EACrB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KARE;EAWAN,MAAM,CAAC4E,SAAS,GAAG,SAASA,SAASA,CAAC+H,OAAO,EAAE;IAC7C,IAAI,CAAChG,WAAW,CAAC/B,SAAS,CAAC+H,OAAO,CAAC;EACrC;EACA;AACF;AACA;AACA;AACA;AACA;AACA,KANE;EASA3M,MAAM,CAACmF,YAAY,GAAG,SAASA,YAAYA,CAACwH,OAAO,EAAE;IACnD,IAAI,CAAChG,WAAW,CAACxB,YAAY,CAACwH,OAAO,CAAC;EACxC,CAAC;EAED,OAAOlG,MAAM;AACf,CAAC,CAAClH,MAAM,CAAC;AAET,SAASI,UAAU,EAAEqC,WAAW,EAAEyE,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}