{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"updataFile1test\",\n  data() {\n    return {\n      file: [],\n      dropflie: null,\n      filelist: null\n    };\n  },\n  methods: {\n    viewNumbers() {\n      if (this.file != 0) return this.file.length + '个文件';\n      return '请选择目录';\n    },\n    SuLvZhuangHuang(i) {\n      if (i < 1024) {\n        return i.toFixed(2) + ' B/s';\n      } else if (i < 1024 * 1024) {\n        return (i / 1024).toFixed(2) + ' KB/s';\n      } else if (i < 1024 * 1024 * 1024) {\n        return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\n      } else {\n        return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\n      }\n    },\n    selectFile() {\n      this.filelist = this.$refs.yu.files;\n      let file = [];\n      for (let i = 0; i < this.filelist.length; i++) {\n        file[i] = {\n          'name': this.filelist[i].name,\n          'size': this.SuLvZhuangHuang(this.filelist[i].size),\n          'index': i\n        };\n      }\n      this.file = file;\n    },\n    dropfiles(name) {\n      this.file = this.file.filter(function (i) {\n        return i.name != name;\n      });\n      this.dropflie = [];\n      this.dropflie.push(name);\n    },\n    async upadtaFiles() {\n      let uploadedBytesnold = 0;\n      for (let i = 0; i < this.filelist.length; i++) {\n        if (this.dropflie == null) {\n          let fromdata = new FormData();\n          fromdata.append('file', this.filelist[i]);\n          await axios({\n            url: this.$store.state.api + '/uploader',\n            method: \"post\",\n            data: fromdata,\n            onUploadProgress: progressEvent => {\n              let persent = progressEvent.loaded / progressEvent.total * 100 | 0;\n              let uploadedBytes = progressEvent.loaded;\n              let uploadedBytesnew = uploadedBytes;\n              let speeds = uploadedBytesnew - uploadedBytesnold;\n              this.$store.state.FilesTyoes = '进度条';\n              this.$store.state.files[i] = {\n                'name': this.filelist[i].name,\n                'size': this.filelist[i].size,\n                'id': i,\n                'progress': persent,\n                'speed': speeds\n              };\n            }\n          });\n        } else {\n          if (!this.dropflie.includes(this.filelist[i].name)) {\n            let fromdata = new FormData();\n            fromdata.append('file', this.filelist[i]);\n            await axios({\n              url: this.$store.state.api + '/uploader',\n              method: \"post\",\n              data: fromdata,\n              onUploadProgress: progressEvent => {\n                let persent = progressEvent.loaded / progressEvent.total * 100 | 0;\n                let uploadedBytes = progressEvent.loaded;\n                let uploadedBytesnew = uploadedBytes;\n                let speeds = uploadedBytesnew - uploadedBytesnold;\n                this.$store.state.FilesTyoes = '进度条';\n                this.$store.state.files[i] = {\n                  'name': this.filelist[i].name,\n                  'size': this.filelist[i].size,\n                  'progress': persent,\n                  'speed': speeds\n                };\n              }\n            });\n          }\n        }\n      }\n      axios({\n        url: this.$store.state.api + '/DirsFileList',\n        method: \"post\",\n        params: {\n          'DirsFileList': this.$store.state.DirPath\n        }\n      }).then(res => {\n        this.$store.state.DirsFileList = res.data.data;\n        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n          this.$store.state.DirsFileList[i] = {\n            'index': i,\n            'data': this.$store.state.DirsFileList[i],\n            \"FileType\": '查看文件'\n          };\n        }\n        axios({\n          url: this.$store.state.api + \"/OpenDir\",\n          method: 'post'\n        }).then(res => {\n          let h = Object.values(res.data.su);\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n            for (let j = 0; j <= h.length; j++) {\n              if (this.$store.state.DirsFileList[i].data == h[j]) {\n                this.$store.state.DirsFileList[i].FileType = '文件夹';\n                break;\n              }\n            }\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","file","dropflie","filelist","methods","viewNumbers","length","SuLvZhuangHuang","i","toFixed","selectFile","$refs","yu","files","size","dropfiles","filter","push","upadtaFiles","uploadedBytesnold","fromdata","FormData","append","url","$store","state","api","method","onUploadProgress","progressEvent","persent","loaded","total","uploadedBytes","uploadedBytesnew","speeds","FilesTyoes","includes","params","DirPath","then","res","DirsFileList","h","Object","values","su","j","FileType"],"sources":["C:\\Users\\Administered\\Desktop\\gitclone\\v0.1.0\\restvue003\\src\\components\\updataFile1.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"juzhong\">\n            <label for=\"inputfile\">\n                <input type=\"file\" @change=\"selectFile()\" ref=\"yu\" Multiple v-show=0 id=\"inputfile\" />\n                <span class=\"buttonbrlue\">选择文件</span>\n            </label>\n            <span>{{ viewNumbers() }}</span>\n            <button @click=\"upadtaFiles()\" class=\"buttonyellow\" v-if=\"file.length != 0\">上传文件</button>\n        </div>\n        <el-table :data=\"file\" border style=\"width: 100%\" v-if=\"file.length != 0\" class=\"tableheight\">\n            <el-table-column prop=\"name\" label=\"Name\" width=\"180\"></el-table-column>\n            <el-table-column prop=\"size\" label=\"size\" width=\"180\"></el-table-column>\n            <el-table-column label=\"drop\" width=\"180\">\n                <template #default=\"scope\">\n                    <el-button @click=\" dropfiles(scope.row.name)\">删除文件</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\nexport default {\n    name: \"updataFile1test\",\n    data() {\n        return {\n            file: [],\n            dropflie: null,\n            filelist: null\n        }\n    },\n    methods: {\n        viewNumbers() {\n            if (this.file != 0)\n                return this.file.length + '个文件'\n            return '请选择目录'\n        },\n        SuLvZhuangHuang(i) {\n            if (i < 1024) {\n                return i.toFixed(2) + ' B/s';\n            } else if (i < 1024 * 1024) {\n                return (i / 1024).toFixed(2) + ' KB/s';\n            } else if (i < 1024 * 1024 * 1024) {\n                return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\n            } else {\n                return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\n            }\n        },\n        selectFile() {\n            this.filelist = this.$refs.yu.files\n            let file = []\n            for (let i = 0; i < this.filelist.length; i++) {\n                file[i] = { 'name': this.filelist[i].name, 'size': this.SuLvZhuangHuang(this.filelist[i].size), 'index': i }\n            }\n            this.file = file\n        },\n        dropfiles(name) {\n            this.file = this.file.filter(function (i) {\n                return i.name != name\n            })\n            this.dropflie = []\n            this.dropflie.push(name)\n        },\n       async upadtaFiles() {\n        let uploadedBytesnold=0\n            for (let i = 0; i < this.filelist.length; i++) {\n                if (this.dropflie == null) {\n                    let fromdata = new FormData()\n                    fromdata.append('file', this.filelist[i])\n                    await axios({\n                        url: this.$store.state.api + '/uploader',\n                        method: \"post\",\n                        data: fromdata,\n                        onUploadProgress: progressEvent => {\n                            let persent = (progressEvent.loaded / progressEvent.total * 100 | 0)\n                            let  uploadedBytes = progressEvent.loaded;\n                            let uploadedBytesnew=uploadedBytes\n                            let speeds=uploadedBytesnew-uploadedBytesnold\n                            this.$store.state.FilesTyoes = '进度条'\n                            this.$store.state.files[i]={\n                            'name':this.filelist[i].name,\n                            'size':this.filelist[i].size,\n                            'id':i,\n                            'progress':persent,\n                            'speed':speeds}\n      },                   \n\n                    })\n                } else {\n                    if (!this.dropflie.includes(this.filelist[i].name)) {\n                        let fromdata = new FormData()\n                        fromdata.append('file', this.filelist[i])\n                        await axios({\n                            url: this.$store.state.api + '/uploader',\n                            method: \"post\",\n                            data: fromdata,\n                            onUploadProgress: progressEvent => {\n                            let persent = (progressEvent.loaded / progressEvent.total * 100 | 0)\n                            let  uploadedBytes = progressEvent.loaded;\n                            let uploadedBytesnew=uploadedBytes\n                            let speeds=uploadedBytesnew-uploadedBytesnold\n                            this.$store.state.FilesTyoes = '进度条'\n                            this.$store.state.files[i]={'name':this.filelist[i].name,'size':this.filelist[i].size,'progress':persent,'speed':speeds}\n      },                   \n                        })\n                    }\n                }\n            }\n         axios({\n            url: this.$store.state.api + '/DirsFileList',\n            method: \"post\",\n            params: {\n            'DirsFileList': this.$store.state.DirPath\n          },\n        }).then(res => {\n          this.$store.state.DirsFileList = res.data.data\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": '查看文件' }\n          }\n          axios({\n              url: this.$store.state.api + \"/OpenDir\",\n              method: 'post',\n            }).then(res => {\n              let h = Object.values(res.data.su)\n              for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                for (let j = 0; j <= h.length; j++) {\n                  if (this.$store.state.DirsFileList[i].data == h[j]) {\n                    this.$store.state.DirsFileList[i].FileType = '文件夹'\n                    break\n                  }\n                }\n              }\n\n            })\n        })\n       \n        }\n        \n    }\n\n}\n</script>\n<style scoped>\n.tableheight {\n    height: 320px;\n    overflow-y: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.buttonbrlue {\n    background-color: rgb(64, 158, 255);\n    border: none;\n    color: white;\n    padding: 5px 10px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    opacity: 0.8;\n}\n\n.juzhong {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n\n.buttonyellow {\n    background-color: rgb(239, 210, 22);\n    border: none;\n    color: white;\n    padding: 5px 10px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n    border-radius: 4px;\n    opacity: 0.8;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}