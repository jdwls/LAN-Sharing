{"ast":null,"code":"var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\r\n * Returns a string that describes the type of source based on a video source object's\r\n * media type.\r\n *\r\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\r\n *\r\n * @param {string} type\r\n *        Video source object media type\r\n * @return {('hls'|'dash'|'vhs-json'|null)}\r\n *         VHS source type string\r\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n  return null;\n};","map":{"version":3,"names":["MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","type","test"],"sources":["C:/git/v0.1.0/restvue003/node_modules/@videojs/vhs-utils/es/media-types.js"],"sourcesContent":["var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\r\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\r\n/**\r\n * Returns a string that describes the type of source based on a video source object's\r\n * media type.\r\n *\r\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\r\n *\r\n * @param {string} type\r\n *        Video source object media type\r\n * @return {('hls'|'dash'|'vhs-json'|null)}\r\n *         VHS source type string\r\n */\r\n\r\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\r\n  if (MPEGURL_REGEX.test(type)) {\r\n    return 'hls';\r\n  }\r\n\r\n  if (DASH_REGEX.test(type)) {\r\n    return 'dash';\r\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\r\n  // source URL.\r\n  //\r\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\r\n  //\r\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\r\n  // project, and the +json suffix identifies the structure of the media type.\r\n\r\n\r\n  if (type === 'application/vnd.videojs.vhs+json') {\r\n    return 'vhs-json';\r\n  }\r\n\r\n  return null;\r\n};"],"mappings":"AAAA,IAAIA,aAAa,GAAG,wDAAwD;AAC5E,IAAIC,UAAU,GAAG,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,wBAAwB,GAAG,SAASA,wBAAwBA,CAACC,IAAI,EAAE;EAC5E,IAAIH,aAAa,CAACI,IAAI,CAACD,IAAI,CAAC,EAAE;IAC5B,OAAO,KAAK;EACd;EAEA,IAAIF,UAAU,CAACG,IAAI,CAACD,IAAI,CAAC,EAAE;IACzB,OAAO,MAAM;EACf,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;;EAGA,IAAIA,IAAI,KAAK,kCAAkC,EAAE;IAC/C,OAAO,UAAU;EACnB;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}