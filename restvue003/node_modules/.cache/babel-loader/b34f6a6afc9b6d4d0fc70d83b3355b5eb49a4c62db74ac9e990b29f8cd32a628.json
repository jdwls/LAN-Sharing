{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios';\n\nexport default {\n  name: \"updataFile1test\",\n  data() {\n    return {\n      file: [],\n      dropflie: [],\n      filelist: null\n    };\n  },\n  methods: {\n    filesize() {\n      if (this.file != 0) return this.file.length + '个文件';\n      return '请选择目录';\n    },\n    SuLvZhuangHuang(i) {\n      if (i < 1024) {\n        return i.toFixed(2) + ' B/s';\n      } else if (i < 1024 * 1024) {\n        return (i / 1024).toFixed(2) + ' KB/s';\n      } else if (i < 1024 * 1024 * 1024) {\n        return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\n      } else {\n        return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\n      }\n    },\n    async testop() {\n      const filelist = await this.$refs.yu.files;\n      this.filelist = await $event.target.files;\n      let file = [];\n      for (let i = 0; i < filelist.length; i++) {\n        file[i] = {\n          'name': filelist[i].name,\n          'size': this.SuLvZhuangHuang(filelist[i].size),\n          'index': i\n        };\n      }\n      this.file = file;\n      this.$refs.yu.value = '';\n    },\n    files(name) {\n      this.file = this.file.filter(function (i) {\n        return i.name != name;\n      });\n      this.dropflie.push(name);\n    },\n    scyu() {\n      // let formData = new FormData();\n      console.log(this.filelist);\n      // for (let i = 0; i < this.filelist.length; i++) {\n\n      //     for (let j = 0; j < this.dropflie.length; j++) {\n      //         // console.log(this.filelist[i]);\n      //         if (this.filelist[i].name != this.dropflie[j]) {\n      //             formData.append('file', this.filelist[i]);\n\n      // axios({\n      //     url: this.$store.state.api + '/uploader',\n      //     method: 'POST',\n      //     data: { formData },\n      //     headers: {\n      //         'Content-Type': 'multipart/form-data'\n      //     }\n      // })\n    }\n  }\n};\n\n// }\n// }\n\n// }","map":{"version":3,"names":["name","data","file","dropflie","filelist","methods","filesize","length","SuLvZhuangHuang","i","toFixed","testop","$refs","yu","files","$event","target","size","value","filter","push","scyu","console","log"],"sources":["C:\\git\\v0.1.0\\restvue003\\src\\components\\updataFile1test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <label for=\"inputfile\">\r\n            <input type=\"file\" @change=\"testop()\" ref=\"yu\" Multiple v-show=0 id=\"inputfile\" />\r\n            <span class=\"spanxx\">上传文件</span>\r\n        </label>\r\n        <span>{{ filesize() }}</span>\r\n        <button @click=\"scyu()\">上传文件</button>\r\n        <el-table :data=\"file\" border style=\"width: 100%\" v-if=\"file.length != 0\" class=\"pp\">\r\n            <el-table-column prop=\"name\" label=\"Name\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"size\" label=\"size\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"drop\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                    <el-button @click=\" files(scope.row.name)\">删除文件</el-button>\r\n\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios';\r\n\r\nexport default {\r\n    name: \"updataFile1test\",\r\n    data() {\r\n        return {\r\n            file: [],\r\n            dropflie: [],\r\n            filelist: null\r\n        }\r\n    },\r\n    methods: {\r\n        filesize() {\r\n            if (this.file != 0)\r\n                return this.file.length + '个文件'\r\n            return '请选择目录'\r\n        },\r\n        SuLvZhuangHuang(i) {\r\n            if (i < 1024) {\r\n                return i.toFixed(2) + ' B/s';\r\n            } else if (i < 1024 * 1024) {\r\n                return (i / 1024).toFixed(2) + ' KB/s';\r\n            } else if (i < 1024 * 1024 * 1024) {\r\n                return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\r\n            } else {\r\n                return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\r\n            }\r\n        },\r\n        async testop() {\r\n            const filelist = await this.$refs.yu.files\r\n            this.filelist = await $event.target.files\r\n            let file = []\r\n            for (let i = 0; i < filelist.length; i++) {\r\n                file[i] = { 'name': filelist[i].name, 'size': this.SuLvZhuangHuang(filelist[i].size), 'index': i }\r\n            }\r\n            this.file = file\r\n            this.$refs.yu.value = ''\r\n\r\n        },\r\n        files(name) {\r\n            this.file = this.file.filter(function (i) {\r\n                return i.name != name\r\n            })\r\n\r\n            this.dropflie.push(name)\r\n\r\n        },\r\n        scyu() {\r\n\r\n\r\n            // let formData = new FormData();\r\n            console.log(this.filelist);\r\n            // for (let i = 0; i < this.filelist.length; i++) {\r\n\r\n\r\n            //     for (let j = 0; j < this.dropflie.length; j++) {\r\n            //         // console.log(this.filelist[i]);\r\n            //         if (this.filelist[i].name != this.dropflie[j]) {\r\n            //             formData.append('file', this.filelist[i]);\r\n\r\n            // axios({\r\n            //     url: this.$store.state.api + '/uploader',\r\n            //     method: 'POST',\r\n            //     data: { formData },\r\n            //     headers: {\r\n            //         'Content-Type': 'multipart/form-data'\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n        // }\r\n    // }\r\n\r\n// }\r\n</script>\r\n\r\n<style scoped>\r\n.pp {\r\n    height: 320px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.spanxx {\r\n    background-color: rgb(64, 158, 255);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    opacity: 0.8;\r\n}\r\n</style>"],"mappings":";AAwBA;;AAEA,eAAe;EACXA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACJ,IAAG,IAAK,CAAC,EACd,OAAO,IAAI,CAACA,IAAI,CAACK,MAAK,GAAI,KAAI;MAClC,OAAO,OAAM;IACjB,CAAC;IACDC,eAAeA,CAACC,CAAC,EAAE;MACf,IAAIA,CAAA,GAAI,IAAI,EAAE;QACV,OAAOA,CAAC,CAACC,OAAO,CAAC,CAAC,IAAI,MAAM;MAChC,OAAO,IAAID,CAAA,GAAI,IAAG,GAAI,IAAI,EAAE;QACxB,OAAO,CAACA,CAAA,GAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MAC1C,OAAO,IAAID,CAAA,GAAI,IAAG,GAAI,IAAG,GAAI,IAAI,EAAE;QAC/B,OAAO,CAACA,CAAA,IAAK,IAAG,GAAI,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MACnD,OAAO;QACH,OAAO,CAACD,CAAA,IAAK,IAAG,GAAI,IAAG,GAAI,IAAI,CAAC,EAAEC,OAAO,CAAC,CAAC,IAAI,OAAO;MAC1D;IACJ,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACX,MAAMP,QAAO,GAAI,MAAM,IAAI,CAACQ,KAAK,CAACC,EAAE,CAACC,KAAI;MACzC,IAAI,CAACV,QAAO,GAAI,MAAMW,MAAM,CAACC,MAAM,CAACF,KAAI;MACxC,IAAIZ,IAAG,GAAI,EAAC;MACZ,KAAK,IAAIO,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,QAAQ,CAACG,MAAM,EAAEE,CAAC,EAAE,EAAE;QACtCP,IAAI,CAACO,CAAC,IAAI;UAAE,MAAM,EAAEL,QAAQ,CAACK,CAAC,CAAC,CAACT,IAAI;UAAE,MAAM,EAAE,IAAI,CAACQ,eAAe,CAACJ,QAAQ,CAACK,CAAC,CAAC,CAACQ,IAAI,CAAC;UAAE,OAAO,EAAER;QAAE;MACrG;MACA,IAAI,CAACP,IAAG,GAAIA,IAAG;MACf,IAAI,CAACU,KAAK,CAACC,EAAE,CAACK,KAAI,GAAI,EAAC;IAE3B,CAAC;IACDJ,KAAKA,CAACd,IAAI,EAAE;MACR,IAAI,CAACE,IAAG,GAAI,IAAI,CAACA,IAAI,CAACiB,MAAM,CAAC,UAAUV,CAAC,EAAE;QACtC,OAAOA,CAAC,CAACT,IAAG,IAAKA,IAAG;MACxB,CAAC;MAED,IAAI,CAACG,QAAQ,CAACiB,IAAI,CAACpB,IAAI;IAE3B,CAAC;IACDqB,IAAIA,CAAA,EAAG;MAGH;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,QAAQ,CAAC;MAC1B;;MAGA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AAEJ;;AAEQ;AACJ;;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}