{"ast":null,"code":"import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-53561290\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"juzhong\"\n};\nconst _hoisted_2 = {\n  for: \"inputfile\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"buttonbrlue\"\n}, \"选择文件\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = $event => $options.selectFile()),\n    ref: \"yu\",\n    Multiple: \"\",\n    id: \"inputfile\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vShow, 0]]), _hoisted_3]), _createElementVNode(\"span\", null, _toDisplayString($options.viewNumbers()), 1 /* TEXT */), $data.file.length != 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[1] || (_cache[1] = $event => $options.upadtaFiles()),\n    class: \"buttonyellow\"\n  }, \"上传文件\")) : _createCommentVNode(\"v-if\", true)]), $data.file.length != 0 ? (_openBlock(), _createBlock(_component_el_table, {\n    key: 0,\n    data: $data.file,\n    border: \"\",\n    style: {\n      \"width\": \"100%\"\n    },\n    class: \"tableheight\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"Name\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"size\",\n      label: \"size\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"drop\",\n      width: \"180\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        onClick: $event => $options.dropfiles(scope.row.name)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"删除文件\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","for","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","onChange","_cache","$event","$options","selectFile","ref","Multiple","id","_hoisted_3","_toDisplayString","viewNumbers","$data","file","length","key","onClick","upadtaFiles","_createCommentVNode","_createBlock","_component_el_table","data","border","style","default","_withCtx","_createVNode","_component_el_table_column","prop","label","width","scope","_component_el_button","dropfiles","row","name","_createTextVNode","_"],"sources":["D:\\code\\lan\\LAN-Sharing\\restvue003\\src\\components\\updataFile1.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"juzhong\">\r\n            <label for=\"inputfile\">\r\n                <input type=\"file\" @change=\"selectFile()\" ref=\"yu\" Multiple v-show=0 id=\"inputfile\" />\r\n                <span class=\"buttonbrlue\">选择文件</span>\r\n            </label>\r\n            <span>{{ viewNumbers() }}</span>\r\n            <button @click=\"upadtaFiles()\" class=\"buttonyellow\" v-if=\"file.length != 0\">上传文件</button>\r\n        </div>\r\n        <el-table :data=\"file\" border style=\"width: 100%\" v-if=\"file.length != 0\" class=\"tableheight\">\r\n            <el-table-column prop=\"name\" label=\"Name\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"size\" label=\"size\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"drop\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                    <el-button @click=\" dropfiles(scope.row.name)\">删除文件</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: \"updataFile1test\",\r\n    data() {\r\n        return {\r\n            file: [],\r\n            dropflie: null,\r\n            filelist: null\r\n        }\r\n    },\r\n    methods: {\r\n        viewNumbers() {\r\n            if (this.file != 0)\r\n                return this.file.length + '个文件'\r\n            return '请选择目录'\r\n        },\r\n        SuLvZhuangHuang(i) {\r\n            if (i < 1024) {\r\n                return i.toFixed(2) + ' B/s';\r\n            } else if (i < 1024 * 1024) {\r\n                return (i / 1024).toFixed(2) + ' KB/s';\r\n            } else if (i < 1024 * 1024 * 1024) {\r\n                return (i / (1024 * 1024)).toFixed(2) + ' MB/s';\r\n            } else {\r\n                return (i / (1024 * 1024 * 1024)).toFixed(2) + ' GB/s';\r\n            }\r\n        },\r\n        selectFile() {\r\n            this.filelist = this.$refs.yu.files\r\n            let file = []\r\n            for (let i = 0; i < this.filelist.length; i++) {\r\n                file[i] = { 'name': this.filelist[i].name, 'size': this.SuLvZhuangHuang(this.filelist[i].size), 'index': i }\r\n            }\r\n            this.file = file\r\n        },\r\n        dropfiles(name) {\r\n            this.file = this.file.filter(function (i) {\r\n                return i.name != name\r\n            })\r\n            this.dropflie = []\r\n            this.dropflie.push(name)\r\n        },\r\n       async upadtaFiles() {\r\n        let uploadedBytesnold=0\r\n            for (let i = 0; i < this.filelist.length; i++) {\r\n                if (this.dropflie == null) {\r\n                    let fromdata = new FormData()\r\n                    fromdata.append('file', this.filelist[i])\r\n                    await axios({\r\n                        url: this.$store.state.api + '/uploader',\r\n                        method: \"post\",\r\n                        data: fromdata,\r\n                        onUploadProgress: progressEvent => {\r\n                            let persent = (progressEvent.loaded / progressEvent.total * 100 | 0)\r\n                            let  uploadedBytes = progressEvent.loaded;\r\n                            let uploadedBytesnew=uploadedBytes\r\n                            let speeds=uploadedBytesnew-uploadedBytesnold\r\n                            this.$store.state.FilesTyoes = '进度条'\r\n                            this.$store.state.files[i]={\r\n                            'name':this.filelist[i].name,\r\n                            'size':this.filelist[i].size,\r\n                            'id':i,\r\n                            'progress':persent,\r\n                            'speed':speeds}\r\n      },                   \r\n\r\n                    })\r\n                } else {\r\n                    if (!this.dropflie.includes(this.filelist[i].name)) {\r\n                        let fromdata = new FormData()\r\n                        fromdata.append('file', this.filelist[i])\r\n                        await axios({\r\n                            url: this.$store.state.api + '/uploader',\r\n                            method: \"post\",\r\n                            data: fromdata,\r\n                            onUploadProgress: progressEvent => {\r\n                            let persent = (progressEvent.loaded / progressEvent.total * 100 | 0)\r\n                            let  uploadedBytes = progressEvent.loaded;\r\n                            let uploadedBytesnew=uploadedBytes\r\n                            let speeds=uploadedBytesnew-uploadedBytesnold\r\n                            this.$store.state.FilesTyoes = '进度条'\r\n                            this.$store.state.files[i]={'name':this.filelist[i].name,'size':this.filelist[i].size,'progress':persent,'speed':speeds}\r\n      },                   \r\n                        })\r\n                    }\r\n                }\r\n            }\r\n         axios({\r\n            url: this.$store.state.api + '/DirsFileList',\r\n            method: \"post\",\r\n            params: {\r\n            'DirsFileList': this.$store.state.DirPath\r\n          },\r\n        }).then(res => {\r\n          this.$store.state.DirsFileList = res.data.data\r\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": '查看文件' }\r\n          }\r\n          axios({\r\n              url: this.$store.state.api + \"/OpenDir\",\r\n              method: 'post',\r\n            }).then(res => {\r\n              let h = Object.values(res.data.su)\r\n              for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n                for (let j = 0; j <= h.length; j++) {\r\n                  if (this.$store.state.DirsFileList[i].data == h[j]) {\r\n                    this.$store.state.DirsFileList[i].FileType = '文件夹'\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n\r\n            })\r\n        })\r\n       \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n.tableheight {\r\n    height: 320px;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.buttonbrlue {\r\n    background-color: rgb(64, 158, 255);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    opacity: 0.8;\r\n}\r\n\r\n.juzhong {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n\r\n.buttonyellow {\r\n    background-color: rgb(239, 210, 22);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    opacity: 0.8;\r\n}\r\n</style>"],"mappings":";;;EAEaA,KAAK,EAAC;AAAS;;EACTC,GAAG,EAAC;AAAW;gEAElBC,mBAAA,CAAqC;EAA/BF,KAAK,EAAC;AAAa,GAAC,MAAI;;;;;uBAJ1CG,mBAAA,CAkBM,cAjBFD,mBAAA,CAOM,OAPNE,UAOM,GANFF,mBAAA,CAGQ,SAHRG,UAGQ,G,gBAFJH,mBAAA,CAAsF;IAA/EI,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;IAAIC,GAAG,EAAC,IAAI;IAACC,QAAQ,EAAR,EAAQ;IAAUC,EAAE,EAAC;4DAAL,CAAC,E,GACpEC,UAAqC,C,GAEzCb,mBAAA,CAAgC,cAAAc,gBAAA,CAAvBN,QAAA,CAAAO,WAAW,oBACsCC,KAAA,CAAAC,IAAI,CAACC,MAAM,S,cAArEjB,mBAAA,CAAyF;IARrGkB,GAAA;IAQqBC,OAAK,EAAAd,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAa,WAAW;IAAIvB,KAAK,EAAC;KAAuC,MAAI,KAR5FwB,mBAAA,e,GAUgEN,KAAA,CAAAC,IAAI,CAACC,MAAM,S,cAAnEK,YAAA,CAQWC,mBAAA;IAlBnBL,GAAA;IAUmBM,IAAI,EAAET,KAAA,CAAAC,IAAI;IAAES,MAAM,EAAN,EAAM;IAACC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAAyB7B,KAAK,EAAC;;IAVxF8B,OAAA,EAAAC,QAAA,CAWY,MAAwE,CAAxEC,YAAA,CAAwEC,0BAAA;MAAvDC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAChDJ,YAAA,CAAwEC,0BAAA;MAAvDC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAChDJ,YAAA,CAIkBC,0BAAA;MAJDE,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;MACrBN,OAAO,EAAAC,QAAA,CACiDM,KAD1C,KACrBL,YAAA,CAA+DM,oBAAA;QAAnDhB,OAAK,EAAAb,MAAA,IAAGC,QAAA,CAAA6B,SAAS,CAACF,KAAK,CAACG,GAAG,CAACC,IAAI;;QAfhEX,OAAA,EAAAC,QAAA,CAemE,MAAI,CAfvEW,gBAAA,CAemE,MAAI,E;QAfvEC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;iCAAAnB,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}