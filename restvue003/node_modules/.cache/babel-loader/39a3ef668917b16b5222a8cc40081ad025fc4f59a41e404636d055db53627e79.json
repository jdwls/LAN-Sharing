{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_button, {\n    class: _normalizeClass([{\n      disabled: $data.isDisabled\n    }, \"tets\"]),\n    onClick: $options.topleveldirectory\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 返回上级目录 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"class\", \"onClick\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_button","class","_normalizeClass","disabled","$data","isDisabled","onClick","$options","topleveldirectory","default","_withCtx","_createTextVNode","_"],"sources":["D:\\code\\lan\\LAN-Sharing\\restvue003\\src\\components\\TopLevelDirectory.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-button :class=\"{ disabled: isDisabled }\" @click=\"topleveldirectory\" class=\"tets\">\r\n            返回上级目录\r\n        </el-button>\r\n    </div>\r\n</template>\r\n\r\n<script defer>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"TopLevelDirectory\",\r\n    data() {\r\n        return {\r\n            isDisabled: false, // 使用Vue的数据驱动控制按钮禁用状态\r\n        };\r\n    },\r\n    methods: {\r\n        async topleveldirectory() {\r\n             // 禁用按钮\r\n            let getDirs=await this.getDirs()\r\n            if(getDirs==this.$store.state.DirPath){\r\n                this.isDisabled = true;\r\n                this.isDisabledTiem()\r\n            }\r\n            else{\r\n                await this.TopLevelDirectory()\r\n            }\r\n        },\r\n         async getDirs(){\r\n            const response =\r\n            await axios({\r\n            url: this.$store.state.api + '/getDirs',\r\n            method: 'get',\r\n        });\r\n        return response.data.data; // 返回数据\r\n           }, \r\n        async isDisabledTiem(){\r\n            setTimeout(() => {\r\n                    this.isDisabled = false;\r\n                }, 1000);\r\n        },\r\n        async TopLevelDirectory(){\r\n        await axios({\r\n                url:this.$store.state.api +'/TopLevelDirectory',\r\n                method:'get',\r\n                params:{\r\n                    'TopLevelDirectoryPathName':this.$store.state.DirPath\r\n                }\r\n            }).then(async res=>{\r\n                if(res.data.type=='成功'){\r\n                    this.$store.state.DirPath=await this.getDirs()\r\n                    this.$store.dispatch('DirsFileList')\r\n                    this.$store.dispatch('openDirs')\r\n                    this.$store.dispatch('filesypess')\r\n                    \r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.disabled {\r\n    pointer-events: none;\r\n}\r\n</style>\r\n"],"mappings":";;;uBACIA,mBAAA,CAIM,cAHFC,YAAA,CAEYC,oBAAA;IAFAC,KAAK,EAFzBC,eAAA;MAAAC,QAAA,EAEuCC,KAAA,CAAAC;IAAU,GAAqC,MAAM;IAAtCC,OAAK,EAAEC,QAAA,CAAAC;;IAF7DC,OAAA,EAAAC,QAAA,CAE6F,MAErF,CAJRC,gBAAA,CAE6F,UAErF,E;IAJRC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}