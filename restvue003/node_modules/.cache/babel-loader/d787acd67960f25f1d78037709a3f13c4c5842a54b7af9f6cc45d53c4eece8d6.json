{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"updataFile2test\",\n  data() {\n    return {\n      filedir: [],\n      dropflie: null\n    };\n  },\n  methods: {\n    selectionDirs() {\n      this.filedir = this.$refs.updataDirs.files;\n      console.log(this.filedir);\n      let file = [];\n      for (let i = 0; i < this.filedir.length; i++) {\n        file[i] = {\n          'name': this.filedir[i].webkitRelativePath,\n          'size': this.filedir[i].size,\n          'index': i\n        };\n      }\n      this.filedir = file;\n    },\n    dropfiles(name) {\n      this.filedir = this.filedir.filter(function (i) {\n        console.log(i.name, 1);\n        return i.name != name;\n      });\n      this.dropflie = [];\n      this.dropflie.push(name);\n    },\n    async updataDirs() {\n      let uploadedBytesnold = 0;\n      for (let i = 0; i < this.filedir.length; i++) {\n        let fromdata = new FormData();\n        fromdata.append('file', this.$refs.updataDirs.files[i]);\n        if (this.dropflie == null) {\n          axios({\n            url: this.$store.state.api + '/uploaders',\n            method: \"post\",\n            data: fromdata,\n            onUploadProgress: progressEvent => {\n              let persent = progressEvent.loaded / progressEvent.total * 100 | 0;\n              let uploadedBytes = progressEvent.loaded;\n              let uploadedBytesnew = uploadedBytes;\n              let speeds = uploadedBytesnew - uploadedBytesnold;\n              this.$store.state.FilesTyoes = '进度条';\n              this.$store.state.files[i] = {\n                'name': this.filedir[i].webkitRelativePath,\n                'size': this.filedir[i].size,\n                'progress': persent,\n                'speed': speeds\n              };\n            }\n          });\n        }\n      }\n      axios({\n        url: this.$store.state.api + '/DirsFileList',\n        method: \"post\",\n        params: {\n          'DirsFileList': this.$store.state.DirPath\n        }\n      }).then(res => {\n        this.$store.state.DirsFileList = res.data.data;\n        for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n          this.$store.state.DirsFileList[i] = {\n            'index': i,\n            'data': this.$store.state.DirsFileList[i],\n            \"FileType\": '查看文件'\n          };\n        }\n        axios({\n          url: this.$store.state.api + \"/OpenDir\",\n          method: 'post'\n        }).then(res => {\n          let h = Object.values(res.data.su);\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n            for (let j = 0; j <= h.length; j++) {\n              if (this.$store.state.DirsFileList[i].data == h[j]) {\n                this.$store.state.DirsFileList[i].FileType = '文件夹';\n                break;\n              }\n            }\n          }\n        });\n      });\n    },\n    viewNumbers() {\n      if (this.filedir != 0) return this.filedir.length + '个文件';\n      return '请选择目录';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","filedir","dropflie","methods","selectionDirs","$refs","updataDirs","files","console","log","file","i","length","webkitRelativePath","size","dropfiles","filter","push","uploadedBytesnold","fromdata","FormData","append","url","$store","state","api","method","onUploadProgress","progressEvent","persent","loaded","total","uploadedBytes","uploadedBytesnew","speeds","FilesTyoes","params","DirPath","then","res","DirsFileList","h","Object","values","su","j","FileType","viewNumbers"],"sources":["C:\\Users\\Administered\\Desktop\\gitclone\\v0.1.0\\restvue003\\src\\components\\updataFile2test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <label for=\"selectionDirs\">\r\n            <input type=\"file\" @change=\"selectionDirs\" id=\"selectionDirs\" directory multiple webkitdirectory ref=\"updataDirs\" v-show=\"0\">\r\n            <span class=\"buttonbulrs\" >选择目录</span>\r\n            <span>{{ viewNumbers() }}</span>\r\n        </label>\r\n        <span @click=\"updataDirs()\" class=\"buttonbulrs\" v-if=\"filedir.length != 0\">上传目录</span>\r\n        <el-table :data=\"filedir\" border style=\"width: 100%\" v-if=\"filedir.length!=0\"> \r\n             <el-table-column prop=\"name\" label=\"Name\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"size\" label=\"size\" width=\"180\"></el-table-column> \r\n             <el-table-column label=\"drop\" width=\"180\">\r\n                <template #default=\"scope\">\r\n                    <el-button @click=\" dropfiles(scope.row.name)\">删除文件</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default{\r\n    name:\"updataFile2test\",\r\n    data(){\r\n        return{\r\n            filedir:[],\r\n            dropflie:null\r\n        }\r\n    },\r\n    methods:{\r\n        selectionDirs(){\r\n            this.filedir = this.$refs.updataDirs.files\r\n            console.log( this.filedir);\r\n            let file=[]\r\n            for (let i = 0; i < this.filedir.length; i++) {\r\n                file[i] = { 'name': this.filedir[i].webkitRelativePath, \r\n                'size': this.filedir[i].size,\r\n                 'index': i }\r\n            }\r\n            this.filedir=file\r\n        },\r\n        dropfiles(name){\r\n            this.filedir = this.filedir.filter(function (i) {\r\n                console.log(i.name,1);\r\n                return i.name != name\r\n            })\r\n            this.dropflie = []\r\n            this.dropflie.push(name)\r\n        },\r\n        async updataDirs(){\r\n            let uploadedBytesnold=0\r\n            for(let i=0;i<this.filedir.length;i++){\r\n                let fromdata = new FormData()\r\n                fromdata.append('file', this.$refs.updataDirs.files[i])\r\n                if(this.dropflie==null){\r\n                    axios({\r\n                        url: this.$store.state.api + '/uploaders',\r\n                        method: \"post\",\r\n                        data: fromdata,\r\n                        onUploadProgress: progressEvent => {\r\n                            let persent = (progressEvent.loaded / progressEvent.total * 100 | 0)\r\n                            let uploadedBytes = progressEvent.loaded;\r\n                            let uploadedBytesnew=uploadedBytes\r\n                            let speeds=uploadedBytesnew-uploadedBytesnold\r\n                            this.$store.state.FilesTyoes = '进度条'\r\n                            this.$store.state.files[i]={\r\n                            'name':this.filedir[i].webkitRelativePath,\r\n                            'size':this.filedir[i].size,\r\n                            'progress':persent,\r\n                            'speed':speeds\r\n                        }\r\n      },                   \r\n                    })\r\n                }\r\n            }\r\n            axios({\r\n            url: this.$store.state.api + '/DirsFileList',\r\n            method: \"post\",\r\n            params: {\r\n            'DirsFileList': this.$store.state.DirPath\r\n          },\r\n        }).then(res => {\r\n          this.$store.state.DirsFileList = res.data.data\r\n          for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n            this.$store.state.DirsFileList[i] = { 'index': i, 'data': this.$store.state.DirsFileList[i], \"FileType\": '查看文件' }\r\n          }\r\n          axios({\r\n              url: this.$store.state.api + \"/OpenDir\",\r\n              method: 'post',\r\n            }).then(res => {\r\n              let h = Object.values(res.data.su)\r\n              for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\r\n                for (let j = 0; j <= h.length; j++) {\r\n                  if (this.$store.state.DirsFileList[i].data == h[j]) {\r\n                    this.$store.state.DirsFileList[i].FileType = '文件夹'\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n\r\n            })\r\n        })\r\n        },\r\n        viewNumbers(){\r\n            if (this.filedir != 0)\r\n                return this.filedir.length + '个文件'\r\n            return '请选择目录'\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.buttonbulrs {\r\n    background-color: rgb(21, 194, 197);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    opacity: 0.8;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}