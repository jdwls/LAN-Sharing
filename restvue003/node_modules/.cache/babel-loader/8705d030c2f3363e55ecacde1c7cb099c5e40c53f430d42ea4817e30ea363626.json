{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"路径:\" + _toDisplayString(_ctx.$store.state.DirPath), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","$store","state","DirPath"],"sources":["C:\\Users\\Administered\\Desktop\\LAN-Sharing-0.1.0\\restvue003\\src\\components\\DirPath.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>路径:{{ $store.state.DirPath }}</h1>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default{\r\n    name:'DirPath',\r\n    data(){\r\n        return{\r\n            DirPath:''\r\n        }\r\n    },\r\n     mounted(){\r\n        \r\n            axios({\r\n                url:this.$store.state.api+'/OptionDir',\r\n                method:\"post\",\r\n            }).then(res=>{\r\n                this.$store.state.DirPath=res.data.data\r\n                if(res.data.type=='成功选择目录'){\r\n                    window.location.reload()\r\n                }\r\n                axios({\r\n                    url:this.$store.state.api+\"/filesypess\",\r\n                    method:\"get\",\r\n                    params:{\r\n                'filesypessPath':this.$store.state.DirPath\r\n            }\r\n        }).then(res=>{\r\n            this.$store.state.otherDirsType=res.data.data\r\n            let h=Object.values(res.data.filesypessPathlistTypes)\r\n            for(let i=0;i<h.length;i++){\r\n                this.$store.state.DirsFileList[h[i].index].FileType=h[i].filesypessPathlistType\r\n            }\r\n        })\r\n         })\r\n        \r\n        \r\n    }\r\n}\r\n</script>"],"mappings":";;uBACIA,mBAAA,CAEM,cADFC,mBAAA,CAAsC,YAAlC,KAAG,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}