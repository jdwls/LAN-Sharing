{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"TopLevelDirectory\",\n  methods: {\n    topleveldirectory() {\n      let that = this;\n      document.querySelector('.tets').classList.add('disabled');\n      let m = that.$store.state.DirPath.split('/');\n      console.log(m.length);\n      if (m.length > 2) {\n        axios({\n          url: that.$store.state.api + '/TopLevelDirectory',\n          method: 'get',\n          params: {\n            'TopLevelDirectoryPathName': that.$store.state.DirPath\n          }\n        }).then(res => {\n          if (res.data.data !== '') {\n            that.$store.state.DirPath = res.data.data;\n            axios({\n              url: that.$store.state.api + '/DirsFileList',\n              method: \"post\",\n              params: {\n                'DirsFileList': that.$store.state.DirPath\n              }\n            }).then(res => {\n              console.log(res.data.data);\n              that.$store.state.DirsFileList = res.data.data;\n              for (let i = 0; i < that.$store.state.DirsFileList.length; i++) {\n                that.$store.state.DirsFileList[i] = {\n                  'index': i,\n                  'data': that.$store.state.DirsFileList[i],\n                  \"FileType\": false\n                };\n              }\n              axios({\n                url: that.$store.state.api + \"/OpenDir\",\n                method: 'post'\n              }).then(res => {\n                let h = Object.values(res.data.su);\n                for (let i = 0; i < that.$store.state.DirsFileList.length; i++) {\n                  for (let j = 0; j <= h.length; j++) {\n                    if (that.$store.state.DirsFileList[i].data == h[j]) {\n                      that.$store.state.DirsFileList[i].FileType = '文件夹';\n                      break;\n                    }\n                  }\n                }\n                axios({\n                  url: that.$store.state.api + \"/filesypess\",\n                  method: \"get\",\n                  params: {\n                    'filesypessPath': that.$store.state.DirPath\n                  }\n                }).then(res => {\n                  that.$store.state.otherDirsType = res.data.data;\n                  let h = Object.values(res.data.filesypessPathlistTypes);\n                  for (let i = 0; i < h.length; i++) {\n                    console.log(that);\n                    that.$store.state.DirsFileList[h[i].index].FileType = h[i].filesypessPathlistType;\n                  }\n                });\n              });\n            });\n          }\n        });\n      } else {\n        axios({\n          url: that.$store.state.api + '/OptionDir',\n          method: \"post\"\n        }).then(res => {\n          that.$store.state.DirPath = res.data.data;\n          axios({\n            url: that.$store.state.api + '/DirsFileList',\n            method: \"post\",\n            params: {\n              'DirsFileList': that.$store.state.DirPath\n            }\n          }).then(res => {\n            console.log(res.data.data);\n            that.$store.state.DirsFileList = res.data.data;\n            for (let i = 0; i < that.$store.state.DirsFileList.length; i++) {\n              that.$store.state.DirsFileList[i] = {\n                'index': i,\n                'data': that.$store.state.DirsFileList[i],\n                \"FileType\": false\n              };\n              axios({\n                url: that.$store.state.api + \"/OpenDir\",\n                method: 'post'\n              }).then(res => {\n                let h = Object.values(res.data.su);\n                for (let i = 0; i < that.$store.state.DirsFileList.length; i++) {\n                  for (let j = 0; j <= h.length; j++) {\n                    if (that.$store.state.DirsFileList[i].data == h[j]) {\n                      that.$store.state.DirsFileList[i].FileType = '文件夹';\n                      break;\n                    }\n                  }\n                }\n              });\n            }\n          });\n        });\n      }\n      setTimeout(function () {\n        document.querySelector(\".tets\").classList.remove('disabled');\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","methods","topleveldirectory","that","document","querySelector","classList","add","m","$store","state","DirPath","split","console","log","length","url","api","method","params","then","res","data","DirsFileList","i","h","Object","values","su","j","FileType","otherDirsType","filesypessPathlistTypes","index","filesypessPathlistType","setTimeout","remove"],"sources":["C:\\Users\\Admin\\Desktop\\LAN-Sharing-0.1.0\\restvue003\\src\\components\\TopLevelDirectory.vue"],"sourcesContent":["<template>\n    <div>\n        <el-button @click=\"topleveldirectory()\" class=\"tets\">\n            返回上级目录\n        </el-button>\n    </div>\n</template>\n<script defer>\nimport axios from 'axios';\n\n\nexport default{\n    name:\"TopLevelDirectory\",\n    methods:{\n        \n        topleveldirectory(){\n            let that=this\n            document.querySelector('.tets').classList.add('disabled')\n            let m=that.$store.state.DirPath.split('/')\n            console.log(m.length);\n            if(m.length>2){\n            axios({\n                url:that.$store.state.api+'/TopLevelDirectory',\n                method:'get',\n                params:{\n                    'TopLevelDirectoryPathName':that.$store.state.DirPath\n                }\n            }).then(res=>{\n                if(res.data.data!==''){\n                that.$store.state.DirPath=res.data.data\n                axios({\n            url:that.$store.state.api+'/DirsFileList',\n            method:\"post\",\n            params:{\n                            'DirsFileList':that.$store.state.DirPath\n                        },\n        }).then(res=>{\n            console.log(res.data.data);\n            that.$store.state.DirsFileList=res.data.data\n            for(let i=0;i<that.$store.state.DirsFileList.length;i++){\n            that.$store.state.DirsFileList[i]={'index':i,'data':that.$store.state.DirsFileList[i],\"FileType\":false}\n           \n        }\n        axios({\n                url:that.$store.state.api+\"/OpenDir\",\n                method:'post',\n            }).then(res=>{\n                let h=Object.values(res.data.su)\n                for(let i=0;i<that.$store.state.DirsFileList.length;i++){\n                    for(let j=0;j<=h.length;j++){\n                        if(that.$store.state.DirsFileList[i].data==h[j]){\n                            that.$store.state.DirsFileList[i].FileType='文件夹'\n                            break\n                        }\n                    }\n                }\n                axios({\n                    url:that.$store.state.api+\"/filesypess\",\n                    method:\"get\",\n                    params:{\n                'filesypessPath':that.$store.state.DirPath\n            }\n        }).then(res=>{\n            that.$store.state.otherDirsType=res.data.data\n            let h=Object.values(res.data.filesypessPathlistTypes)\n            for(let i=0;i<h.length;i++){\n                console.log(that);\n                that.$store.state.DirsFileList[h[i].index].FileType=h[i].filesypessPathlistType\n                \n                \n            }\n        })        \n            }) \n        })\n    } \n    \n})\n        }\n        else{\n            \n                axios({\n                url:that.$store.state.api+'/OptionDir',\n                method:\"post\",\n            }).then(res=>{\n                that.$store.state.DirPath=res.data.data\n                axios({\n            url:that.$store.state.api+'/DirsFileList',\n            method:\"post\",\n            params:{\n                            'DirsFileList':that.$store.state.DirPath\n                        },\n        }).then(res=>{\n            console.log(res.data.data);\n            that.$store.state.DirsFileList=res.data.data\n            for(let i=0;i<that.$store.state.DirsFileList.length;i++){\n            that.$store.state.DirsFileList[i]={'index':i,'data':that.$store.state.DirsFileList[i],\"FileType\":false}\n            axios({\n                url:that.$store.state.api+\"/OpenDir\",\n                method:'post',\n            }).then(res=>{\n                let h=Object.values(res.data.su)\n                for(let i=0;i<that.$store.state.DirsFileList.length;i++){\n                    for(let j=0;j<=h.length;j++){\n                        if(that.$store.state.DirsFileList[i].data==h[j]){\n                            that.$store.state.DirsFileList[i].FileType='文件夹'\n                            break\n                        }\n                    }\n                }\n                    \n            }) \n        }\n        })\n         })\n           \n        }\n        setTimeout(function(){\n            document.querySelector(\".tets\").classList.remove('disabled')\n        },1000)\n    }\n    }\n}\n</script>\n<style scoped>\n.disabled{\n    pointer-events: none;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}