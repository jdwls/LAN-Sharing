{"ast":null,"code":"import { ElMessageBox } from \"element-plus\";\nimport axios from \"axios\";\nimport { KeyMain } from \"@/components/Common/KeyMain.js\";\nexport default {\n  name: \"LogupView\",\n  data() {\n    return {\n      form: {\n        name: \"\",\n        password: \"\",\n        Twopassword: \"\"\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      const UsesCheck = /^[A-Za-z0-9_]{6,12}$/;\n      const passwordCheck = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&.])[A-Za-z\\d@$!%*?&.]{8,16}$/;\n      if (this.form.name == \"\" || this.form.password == \"\" || this.form.Twopassword == \"\") {\n        ElMessageBox.alert(\"用户名和密码不能为空\", \"为空检测\", {\n          showConfirmButton: true,\n          confirmButtonText: \"确认\"\n        }).then(() => {\n          this.form.name = \"\";\n          this.form.password = \"\";\n          this.form.Twopassword = \"\";\n        }).catch(() => {\n          console.log(\"无\");\n        });\n        return 0;\n      }\n      if (this.form.name.match(UsesCheck) == null) {\n        ElMessageBox.alert(\"用户名只能包含大小写字母、数字和下划线，且长度在6到12个字符之间\", \"用户名错误\", {\n          showConfirmButton: true,\n          confirmButtonText: \"确认\"\n        }).then(() => {\n          this.form.name = \"\";\n          this.form.password = \"\";\n          this.form.Twopassword = \"\";\n        }).catch(() => {\n          console.log(\"无\");\n        });\n        return 0;\n      }\n      if (this.form.password.match(passwordCheck) == null) {\n        ElMessageBox.alert(\"一个大写字母、一个小写字母、一个数字和一个特殊字符，且长度至少为8个字符\", \"密码错误\", {\n          showConfirmButton: true,\n          confirmButtonText: \"确认\"\n        }).then(() => {\n          this.form.name = \"\";\n          this.form.password = \"\";\n          this.form.Twopassword = \"\";\n        }).catch(() => {\n          console.log(\"无\");\n        });\n        return 0;\n      }\n      if (this.form.password != this.form.Twopassword) {\n        ElMessageBox.alert(\"第一次输入的密码需要第二次一样\", \"密码没有重复\", {\n          showConfirmButton: true,\n          confirmButtonText: \"确认\"\n        }).then(() => {\n          this.form.name = \"\";\n          this.form.password = \"\";\n          this.form.Twopassword = \"\";\n        }).catch(() => {\n          console.log(\"无\");\n        });\n        return 0;\n      }\n      if (this.form.password.match(passwordCheck) != null && this.form.Twopassword.match(passwordCheck) != null && this.form.name.match(UsesCheck) != null && this.form.Twopassword != \"\" && this.form.password != \"\" && this.form.name) {\n        axios({\n          url: this.$store.state.api + \"/Logup\",\n          method: \"get\",\n          params: {\n            name: this.form.name,\n            MD5AESBehind: KeyMain(this.form.password),\n            Time: Date.now()\n          }\n        }).then(res => {\n          console.log(res.data.error);\n          if (res.data.error == \"用户名已经存在,请重新输入用户名\") {\n            ElMessageBox.alert(\"用户名已经存在：\" + res.data.message, \"用户名已经存在\", {\n              showConfirmButton: true,\n              confirmButtonText: \"确认\"\n            }).then(() => {\n              return 0;\n            }).catch(() => {\n              return 0;\n            });\n          } else {\n            ElMessageBox.alert(\"用户创建名为：\" + res.data.message, \"用户创建成功\", {\n              showConfirmButton: true,\n              confirmButtonText: \"确认\"\n            }).then(() => {\n              this.form.name = \"\";\n              this.form.password = \"\";\n              this.form.Twopassword = \"\";\n              this.$store.state.dialogVisible = false;\n              this.$store.state.FilesTyoes = \"登录\";\n              this.$store.state.dialogVisible = true;\n            }).catch(() => {\n              return 0;\n            });\n          }\n        });\n      }\n    },\n    resetForm() {\n      ElMessageBox.alert(\"重置成功\", \"重置成功\", {\n        showConfirmButton: true,\n        confirmButtonText: \"确认\"\n      }).then(() => {\n        this.form.name = \"\";\n        this.form.password = \"\";\n        this.form.Twopassword = \"\";\n      }).catch(() => {\n        console.log(\"无\");\n      });\n      return 0;\n    }\n  }\n};","map":{"version":3,"names":["ElMessageBox","axios","KeyMain","name","data","form","password","Twopassword","methods","submitForm","UsesCheck","passwordCheck","alert","showConfirmButton","confirmButtonText","then","catch","console","log","match","url","$store","state","api","method","params","MD5AESBehind","Time","Date","now","res","error","message","dialogVisible","FilesTyoes","resetForm"],"sources":["C:\\Users\\Admin\\Desktop\\codes\\restvue003\\src\\components\\ViewLogup\\LogupView.vue"],"sourcesContent":["<template>\r\n  <div class=\"InputStyle\">\r\n    <el-form :model=\"form\" label-width=\"auto\" style=\"width: 45%\">\r\n      <el-form-item label=\"用户名:\">\r\n        <el-input v-model=\"form.name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码:\">\r\n        <el-input v-model=\"form.password\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"在输入一次密码:\">\r\n        <el-input v-model=\"form.Twopassword\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm()\">注册</el-button>\r\n      <el-button @click=\"resetForm()\">重置</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessageBox } from \"element-plus\";\r\nimport axios from \"axios\";\r\nimport { KeyMain } from \"@/components/Common/KeyMain.js\";\r\nexport default {\r\n  name: \"LogupView\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: \"\",\r\n        password: \"\",\r\n        Twopassword: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      const UsesCheck = /^[A-Za-z0-9_]{6,12}$/;\r\n      const passwordCheck =\r\n        /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&.])[A-Za-z\\d@$!%*?&.]{8,16}$/;\r\n      if (\r\n        this.form.name == \"\" ||\r\n        this.form.password == \"\" ||\r\n        this.form.Twopassword == \"\"\r\n      ) {\r\n        ElMessageBox.alert(\"用户名和密码不能为空\", \"为空检测\", {\r\n          showConfirmButton: true,\r\n          confirmButtonText: \"确认\",\r\n        })\r\n          .then(() => {\r\n            this.form.name = \"\";\r\n            this.form.password = \"\";\r\n            this.form.Twopassword = \"\";\r\n          })\r\n          .catch(() => {\r\n            console.log(\"无\");\r\n          });\r\n        return 0;\r\n      }\r\n      if (this.form.name.match(UsesCheck) == null) {\r\n        ElMessageBox.alert(\r\n          \"用户名只能包含大小写字母、数字和下划线，且长度在6到12个字符之间\",\r\n          \"用户名错误\",\r\n          {\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"确认\",\r\n          }\r\n        )\r\n          .then(() => {\r\n            this.form.name = \"\";\r\n            this.form.password = \"\";\r\n            this.form.Twopassword = \"\";\r\n          })\r\n          .catch(() => {\r\n            console.log(\"无\");\r\n          });\r\n        return 0;\r\n      }\r\n      if (this.form.password.match(passwordCheck) == null) {\r\n        ElMessageBox.alert(\r\n          \"一个大写字母、一个小写字母、一个数字和一个特殊字符，且长度至少为8个字符\",\r\n          \"密码错误\",\r\n          {\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"确认\",\r\n          }\r\n        )\r\n          .then(() => {\r\n            this.form.name = \"\";\r\n            this.form.password = \"\";\r\n            this.form.Twopassword = \"\";\r\n          })\r\n          .catch(() => {\r\n            console.log(\"无\");\r\n          });\r\n\r\n        return 0;\r\n      }\r\n      if (this.form.password != this.form.Twopassword) {\r\n        ElMessageBox.alert(\"第一次输入的密码需要第二次一样\", \"密码没有重复\", {\r\n          showConfirmButton: true,\r\n          confirmButtonText: \"确认\",\r\n        })\r\n          .then(() => {\r\n            this.form.name = \"\";\r\n            this.form.password = \"\";\r\n            this.form.Twopassword = \"\";\r\n          })\r\n          .catch(() => {\r\n            console.log(\"无\");\r\n          });\r\n        return 0;\r\n      }\r\n      if (\r\n        this.form.password.match(passwordCheck) != null &&\r\n        this.form.Twopassword.match(passwordCheck) != null &&\r\n        this.form.name.match(UsesCheck) != null &&\r\n        this.form.Twopassword != \"\" &&\r\n        this.form.password != \"\" &&\r\n        this.form.name\r\n      ) {\r\n        axios({\r\n          url: this.$store.state.api + \"/Logup\",\r\n          method: \"get\",\r\n          params: {\r\n            name: this.form.name,\r\n            MD5AESBehind: KeyMain(this.form.password),\r\n            Time: Date.now(),\r\n          },\r\n        }).then((res) => {\r\n          console.log(res.data.error);\r\n\r\n          if (res.data.error == \"用户名已经存在,请重新输入用户名\") {\r\n            ElMessageBox.alert(\r\n              \"用户名已经存在：\" + res.data.message,\r\n              \"用户名已经存在\",\r\n              {\r\n                showConfirmButton: true,\r\n                confirmButtonText: \"确认\",\r\n              }\r\n            )\r\n              .then(() => {\r\n                return 0;\r\n              })\r\n              .catch(() => {\r\n                return 0;\r\n              });\r\n          } else {\r\n            ElMessageBox.alert(\r\n              \"用户创建名为：\" + res.data.message,\r\n              \"用户创建成功\",\r\n              {\r\n                showConfirmButton: true,\r\n                confirmButtonText: \"确认\",\r\n              }\r\n            )\r\n              .then(() => {\r\n                this.form.name = \"\";\r\n                this.form.password = \"\";\r\n                this.form.Twopassword = \"\";\r\n                this.$store.state.dialogVisible = false;\r\n                this.$store.state.FilesTyoes = \"登录\";\r\n                this.$store.state.dialogVisible = true;\r\n              })\r\n              .catch(() => {\r\n                return 0;\r\n              });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    resetForm() {\r\n      ElMessageBox.alert(\"重置成功\", \"重置成功\", {\r\n        showConfirmButton: true,\r\n        confirmButtonText: \"确认\",\r\n      })\r\n        .then(() => {\r\n          this.form.name = \"\";\r\n          this.form.password = \"\";\r\n          this.form.Twopassword = \"\";\r\n        })\r\n        .catch(() => {\r\n          console.log(\"无\");\r\n        });\r\n      return 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.InputStyle {\r\n  padding-bottom: 2%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}