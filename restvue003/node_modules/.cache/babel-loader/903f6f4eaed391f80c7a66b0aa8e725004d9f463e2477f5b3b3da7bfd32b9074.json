{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  name: \"NewDir\",\n  methods: {\n    NewDir() {\n      ElMessageBox.prompt('请输入文件名:', '新建文件夹', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[a-zA-Z0-9_-]+$/,\n        inputErrorMessage: '请输入文件名'\n      }).then(({\n        value\n      }) => {\n        ElMessage({\n          type: 'success',\n          message: `你文件夹名称是:${value}`\n        });\n        axios({\n          url: this.$store.state.api + '/NewDir',\n          method: \"get\",\n          params: {\n            'NewDirName': value,\n            'NewDirPath': this.$store.state.DirPath\n          }\n        }).then(res => {\n          if (res.data == '成功') {\n            axios({\n              url: this.$store.state.api + '/DirsFileList',\n              method: \"post\",\n              params: {\n                'DirsFileList': this.$store.state.DirPath\n              }\n            }).then(res => {\n              console.log(res.data.data);\n              this.$store.state.DirsFileList = res.data.data;\n              for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                this.$store.state.DirsFileList[i] = {\n                  'index': i,\n                  'data': this.$store.state.DirsFileList[i],\n                  \"FileType\": false\n                };\n                axios({\n                  url: this.$store.state.api + \"/OpenDir\",\n                  method: 'post'\n                }).then(res => {\n                  let h = Object.values(res.data.su);\n                  for (let i = 0; i < this.$store.state.DirsFileList.length; i++) {\n                    for (let j = 0; j <= h.length; j++) {\n                      if (this.$store.state.DirsFileList[i].data == h[j]) {\n                        this.$store.state.DirsFileList[i].FileType = '文件夹';\n                        break;\n                      }\n                    }\n                  }\n                });\n              }\n            });\n            axios({\n              url: this.$store.state.api + \"/filesypess\",\n              method: \"get\",\n              params: {\n                'filesypessPath': this.$store.state.DirPath\n              }\n            }).then(res => {\n              this.$store.state.otherDirsType = res.data.data;\n              let h = Object.values(res.data.filesypessPathlistTypes);\n              for (let i = 0; i < h.length; i++) {\n                this.$store.state.DirsFileList[h[i].index].FileType = h[i].filesypessPathlistType;\n              }\n            });\n          }\n        });\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '你取消新建文件夹'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","ElMessage","ElMessageBox","name","methods","NewDir","prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","value","type","message","url","$store","state","api","method","params","DirPath","res","data","console","log","DirsFileList","i","length","h","Object","values","su","j","FileType","otherDirsType","filesypessPathlistTypes","index","filesypessPathlistType","catch"],"sources":["C:\\Users\\Administered\\Desktop\\restvue003\\src\\components\\NewDir.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <el-button @click=\"NewDir\">新建文件</el-button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nexport default{\r\n    name:\"NewDir\",\r\n    methods:{\r\n        NewDir(){\r\n    ElMessageBox.prompt('请输入文件名:', '新建文件夹', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    inputPattern:\r\n    /^[a-zA-Z0-9_-]+$/,\r\n    inputErrorMessage: '请输入文件名',\r\n  })\r\n    .then(({ value }) => {\r\n      ElMessage({\r\n        type: 'success',\r\n        message: `你文件夹名称是:${value}`,\r\n\r\n      })\r\n      axios({\r\n        url:this.$store.state.api+'/NewDir',\r\n        method:\"get\",\r\n        params:{\r\n            'NewDirName':value,\r\n            'NewDirPath':this.$store.state.DirPath\r\n        }\r\n      }).then(res=>{\r\n        if(res.data=='成功'){\r\n            axios({\r\n            url:this.$store.state.api+'/DirsFileList',\r\n            method:\"post\",\r\n            params:{\r\n                            'DirsFileList':this.$store.state.DirPath\r\n                        },\r\n        }).then(res=>{\r\n            console.log(res.data.data);\r\n            this.$store.state.DirsFileList=res.data.data\r\n            for(let i=0;i<this.$store.state.DirsFileList.length;i++){\r\n            this.$store.state.DirsFileList[i]={'index':i,'data':this.$store.state.DirsFileList[i],\"FileType\":false}\r\n            axios({\r\n                url:this.$store.state.api+\"/OpenDir\",\r\n                method:'post',\r\n            }).then(res=>{\r\n                let h=Object.values(res.data.su)\r\n                for(let i=0;i<this.$store.state.DirsFileList.length;i++){\r\n                    for(let j=0;j<=h.length;j++){\r\n                        if(this.$store.state.DirsFileList[i].data==h[j]){\r\n                            this.$store.state.DirsFileList[i].FileType='文件夹'\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                    \r\n            }) \r\n        }\r\n        })\r\n        axios({\r\n                    url:this.$store.state.api+\"/filesypess\",\r\n                    method:\"get\",\r\n                    params:{\r\n                'filesypessPath':this.$store.state.DirPath\r\n            }\r\n        }).then(res=>{\r\n            this.$store.state.otherDirsType=res.data.data\r\n            let h=Object.values(res.data.filesypessPathlistTypes)\r\n            for(let i=0;i<h.length;i++){\r\n                this.$store.state.DirsFileList[h[i].index].FileType=h[i].filesypessPathlistType\r\n            }\r\n        })\r\n        }\r\n      })\r\n      \r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '你取消新建文件夹',\r\n      })\r\n    })\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}