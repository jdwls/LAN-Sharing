{"ast":null,"code":"import { VideoPlayer } from 'vue-video-player';\nimport 'video.js/dist/video-js.css';\nexport default {\n  name: 'VideoPlay',\n  components: {\n    VideoPlayer\n  },\n  data() {\n    return {\n      playerOptions: {\n        playbackRates: [0.5, 1.0, 1.5, 2.0],\n        // 可选的播放速度\n        autoplay: true,\n        // 如果为true,浏览器准备好时开始回放\n        muted: false,\n        // 默认情况下将会消除任何音频。\n        loop: false,\n        // 是否视频一结束就重新开始。\n        preload: 'auto',\n        // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: 'zh-CN',\n        aspectRatio: '16:9',\n        // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true,\n        // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        sources: [{\n          type: \"video/mp4\",\n          // 类型\n          src: this.$store.state.api + '/VideoPlay?VideoPlay=' + this.$store.state.DirPath + '/' + this.$store.state.OfficEword // url地址\n        }],\n        poster: '',\n        // 封面地址\n        notSupportedMessage: '此视频暂无法播放，请稍后再试',\n        // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        controlBar: {\n          timeDivider: true,\n          // 当前时间和持续时间的分隔符\n          durationDisplay: true,\n          // 显示持续时间\n          remainingTimeDisplay: false,\n          // 是否显示剩余时间功能\n          fullscreenToggle: true // 是否显示全屏按钮\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["VideoPlayer","name","components","data","playerOptions","playbackRates","autoplay","muted","loop","preload","language","aspectRatio","fluid","sources","type","src","$store","state","api","DirPath","OfficEword","poster","notSupportedMessage","controlBar","timeDivider","durationDisplay","remainingTimeDisplay","fullscreenToggle"],"sources":["C:\\git\\v0.1.0\\restvue003\\src\\components\\VideoPlay.vue"],"sourcesContent":["<template>\n    <div v-if=\"$store.state.VideoPlayercontrols\">\n        <VideoPlayer\n        controls\n        class=\"video-player vjs-custom-skin\" \n        :options=\"playerOptions\"\n        ></VideoPlayer>\n    </div>\n</template>\n<script>\nimport { VideoPlayer } from 'vue-video-player'\nimport 'video.js/dist/video-js.css'\nexport default{\n    name:'VideoPlay',\n    components: {\n        VideoPlayer\n  },\n  data(){\n    return{\n        playerOptions:{\n            playbackRates: [0.5, 1.0, 1.5, 2.0], // 可选的播放速度\n                autoplay: true,  // 如果为true,浏览器准备好时开始回放\n                muted: false,     // 默认情况下将会消除任何音频。\n                loop: false,      // 是否视频一结束就重新开始。\n                preload: 'auto',  // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n                language: 'zh-CN',\n                aspectRatio: '16:9',  // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n                fluid: true,  // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n                sources: [{\n                    type: \"video/mp4\",  // 类型\n                    src: this.$store.state.api+'/VideoPlay?VideoPlay='+this.$store.state.DirPath+'/'+this.$store.state.OfficEword             // url地址\n                }],\n                poster: '',  // 封面地址\n                notSupportedMessage: '此视频暂无法播放，请稍后再试',  // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\n                controlBar: {\n                    timeDivider: true,           // 当前时间和持续时间的分隔符\n                    durationDisplay: true,       // 显示持续时间\n                    remainingTimeDisplay: false, // 是否显示剩余时间功能\n                    fullscreenToggle: true       // 是否显示全屏按钮\n                }\n\n        }\n    }\n  },\n}\n</script>\n"],"mappings":"AAUA,SAASA,WAAU,QAAS,kBAAiB;AAC7C,OAAO,4BAA2B;AAClC,eAAc;EACVC,IAAI,EAAC,WAAW;EAChBC,UAAU,EAAE;IACRF;EACN,CAAC;EACDG,IAAIA,CAAA,EAAE;IACJ,OAAM;MACFC,aAAa,EAAC;QACVC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAAE;QACjCC,QAAQ,EAAE,IAAI;QAAG;QACjBC,KAAK,EAAE,KAAK;QAAM;QAClBC,IAAI,EAAE,KAAK;QAAO;QAClBC,OAAO,EAAE,MAAM;QAAG;QAClBC,QAAQ,EAAE,OAAO;QACjBC,WAAW,EAAE,MAAM;QAAG;QACtBC,KAAK,EAAE,IAAI;QAAG;QACdC,OAAO,EAAE,CAAC;UACNC,IAAI,EAAE,WAAW;UAAG;UACpBC,GAAG,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,GAAC,uBAAuB,GAAC,IAAI,CAACF,MAAM,CAACC,KAAK,CAACE,OAAO,GAAC,GAAG,GAAC,IAAI,CAACH,MAAM,CAACC,KAAK,CAACG,UAAS,CAAc;QAC9H,CAAC,CAAC;QACFC,MAAM,EAAE,EAAE;QAAG;QACbC,mBAAmB,EAAE,gBAAgB;QAAG;QACxCC,UAAU,EAAE;UACRC,WAAW,EAAE,IAAI;UAAY;UAC7BC,eAAe,EAAE,IAAI;UAAQ;UAC7BC,oBAAoB,EAAE,KAAK;UAAE;UAC7BC,gBAAgB,EAAE,IAAG,CAAQ;QACjC;MAER;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}