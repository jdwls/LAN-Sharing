{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar conventions = require(\"./conventions\");\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\r\n * A prerequisite for `[].filter`, to drop elements that are empty\r\n * @param {string} input\r\n * @returns {boolean}\r\n */\nfunction notEmptyString(input) {\n  return input !== '';\n}\n/**\r\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\r\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\r\n *\r\n * @param {string} input\r\n * @returns {string[]} (can be empty)\r\n */\nfunction splitOnASCIIWhitespace(input) {\n  // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n  return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n}\n\n/**\r\n * Adds element as a key to current if it is not already present.\r\n *\r\n * @param {Record<string, boolean | undefined>} current\r\n * @param {string} element\r\n * @returns {Record<string, boolean | undefined>}\r\n */\nfunction orderedSetReducer(current, element) {\n  if (!current.hasOwnProperty(element)) {\n    current[element] = true;\n  }\n  return current;\n}\n\n/**\r\n * @see https://infra.spec.whatwg.org/#ordered-set\r\n * @param {string} input\r\n * @returns {string[]}\r\n */\nfunction toOrderedSet(input) {\n  if (!input) return [];\n  var list = splitOnASCIIWhitespace(input);\n  return Object.keys(list.reduce(orderedSetReducer, {}));\n}\n\n/**\r\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\r\n * which we can not rely on being available.\r\n *\r\n * @param {any[]} list\r\n * @returns {function(any): boolean}\r\n */\nfunction arrayIncludes(list) {\n  return function (element) {\n    return list && list.indexOf(element) !== -1;\n  };\n}\nfunction copy(src, dest) {\n  for (var p in src) {\n    if (Object.prototype.hasOwnProperty.call(src, p)) {\n      dest[p] = src[p];\n    }\n  }\n}\n\n/**\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\r\n */\nfunction _extends(Class, Super) {\n  var pt = Class.prototype;\n  if (!(pt instanceof Super)) {\n    function t() {}\n    ;\n    t.prototype = Super.prototype;\n    t = new t();\n    copy(pt, t);\n    Class.prototype = pt = t;\n  }\n  if (pt.constructor != Class) {\n    if (typeof Class != 'function') {\n      console.error(\"unknown Class:\" + Class);\n    }\n    pt.constructor = Class;\n  }\n}\n\n// Node Types\nvar NodeType = {};\nvar ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\nvar ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\nvar TEXT_NODE = NodeType.TEXT_NODE = 3;\nvar CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\nvar ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\nvar ENTITY_NODE = NodeType.ENTITY_NODE = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE = NodeType.COMMENT_NODE = 8;\nvar DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\nvar DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\nvar DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\nvar NOTATION_NODE = NodeType.NOTATION_NODE = 12;\n\n// ExceptionCode\nvar ExceptionCode = {};\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR = ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\nvar DOMSTRING_SIZE_ERR = ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\nvar HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\nvar WRONG_DOCUMENT_ERR = ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\nvar INVALID_CHARACTER_ERR = ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\nvar NO_DATA_ALLOWED_ERR = ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\nvar NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\nvar NOT_SUPPORTED_ERR = ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\nvar INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10);\n//level2\nvar INVALID_STATE_ERR = ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\nvar SYNTAX_ERR = ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\nvar INVALID_MODIFICATION_ERR = ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\nvar NAMESPACE_ERR = ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\nvar INVALID_ACCESS_ERR = ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n\n/**\r\n * DOM Level 2\r\n * Object DOMException\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\r\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\r\n */\nfunction DOMException(code, message) {\n  if (message instanceof Error) {\n    var error = message;\n  } else {\n    error = this;\n    Error.call(this, ExceptionMessage[code]);\n    this.message = ExceptionMessage[code];\n    if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n  }\n  error.code = code;\n  if (message) this.message = this.message + \": \" + message;\n  return error;\n}\n;\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode, DOMException);\n\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\r\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\r\n * The items in the NodeList are accessible via an integral index, starting from 0.\r\n */\nfunction NodeList() {}\n;\nNodeList.prototype = {\n  /**\r\n   * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\r\n   * @standard level1\r\n   */\n  length: 0,\n  /**\r\n   * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\r\n   * @standard level1\r\n   * @param index  unsigned long\r\n   *   Index into the collection.\r\n   * @return Node\r\n   * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\r\n   */\n  item: function (index) {\n    return index >= 0 && index < this.length ? this[index] : null;\n  },\n  toString: function (isHTML, nodeFilter) {\n    for (var buf = [], i = 0; i < this.length; i++) {\n      serializeToString(this[i], buf, isHTML, nodeFilter);\n    }\n    return buf.join('');\n  },\n  /**\r\n   * @private\r\n   * @param {function (Node):boolean} predicate\r\n   * @returns {Node[]}\r\n   */\n  filter: function (predicate) {\n    return Array.prototype.filter.call(this, predicate);\n  },\n  /**\r\n   * @private\r\n   * @param {Node} item\r\n   * @returns {number}\r\n   */\n  indexOf: function (item) {\n    return Array.prototype.indexOf.call(this, item);\n  }\n};\nfunction LiveNodeList(node, refresh) {\n  this._node = node;\n  this._refresh = refresh;\n  _updateLiveList(this);\n}\nfunction _updateLiveList(list) {\n  var inc = list._node._inc || list._node.ownerDocument._inc;\n  if (list._inc !== inc) {\n    var ls = list._refresh(list._node);\n    __set__(list, 'length', ls.length);\n    if (!list.$$length || ls.length < list.$$length) {\n      for (var i = ls.length; (i in list); i++) {\n        if (Object.prototype.hasOwnProperty.call(list, i)) {\n          delete list[i];\n        }\n      }\n    }\n    copy(ls, list);\n    list._inc = inc;\n  }\n}\nLiveNodeList.prototype.item = function (i) {\n  _updateLiveList(this);\n  return this[i] || null;\n};\n_extends(LiveNodeList, NodeList);\n\n/**\r\n * Objects implementing the NamedNodeMap interface are used\r\n * to represent collections of nodes that can be accessed by name.\r\n * Note that NamedNodeMap does not inherit from NodeList;\r\n * NamedNodeMaps are not maintained in any particular order.\r\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\r\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\r\n * and does not imply that the DOM specifies an order to these Nodes.\r\n * NamedNodeMap objects in the DOM are live.\r\n * used for attributes or DocumentType entities\r\n */\nfunction NamedNodeMap() {}\n;\nfunction _findNodeIndex(list, node) {\n  var i = list.length;\n  while (i--) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n}\nfunction _addNamedNode(el, list, newAttr, oldAttr) {\n  if (oldAttr) {\n    list[_findNodeIndex(list, oldAttr)] = newAttr;\n  } else {\n    list[list.length++] = newAttr;\n  }\n  if (el) {\n    newAttr.ownerElement = el;\n    var doc = el.ownerDocument;\n    if (doc) {\n      oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n      _onAddAttribute(doc, el, newAttr);\n    }\n  }\n}\nfunction _removeNamedNode(el, list, attr) {\n  //console.log('remove attr:'+attr)\n  var i = _findNodeIndex(list, attr);\n  if (i >= 0) {\n    var lastIndex = list.length - 1;\n    while (i < lastIndex) {\n      list[i] = list[++i];\n    }\n    list.length = lastIndex;\n    if (el) {\n      var doc = el.ownerDocument;\n      if (doc) {\n        _onRemoveAttribute(doc, el, attr);\n        attr.ownerElement = null;\n      }\n    }\n  } else {\n    throw new DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n  }\n}\nNamedNodeMap.prototype = {\n  length: 0,\n  item: NodeList.prototype.item,\n  getNamedItem: function (key) {\n    //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n    //\t\t\treturn null;\n    //\t\t}\n    //console.log()\n    var i = this.length;\n    while (i--) {\n      var attr = this[i];\n      //console.log(attr.nodeName,key)\n      if (attr.nodeName == key) {\n        return attr;\n      }\n    }\n  },\n  setNamedItem: function (attr) {\n    var el = attr.ownerElement;\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n    var oldAttr = this.getNamedItem(attr.nodeName);\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n    return oldAttr;\n  },\n  /* returns Node */\n  setNamedItemNS: function (attr) {\n    // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n    var el = attr.ownerElement,\n      oldAttr;\n    if (el && el != this._ownerElement) {\n      throw new DOMException(INUSE_ATTRIBUTE_ERR);\n    }\n    oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n    _addNamedNode(this._ownerElement, this, attr, oldAttr);\n    return oldAttr;\n  },\n  /* returns Node */\n  removeNamedItem: function (key) {\n    var attr = this.getNamedItem(key);\n    _removeNamedNode(this._ownerElement, this, attr);\n    return attr;\n  },\n  // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n  //for level2\n  removeNamedItemNS: function (namespaceURI, localName) {\n    var attr = this.getNamedItemNS(namespaceURI, localName);\n    _removeNamedNode(this._ownerElement, this, attr);\n    return attr;\n  },\n  getNamedItemNS: function (namespaceURI, localName) {\n    var i = this.length;\n    while (i--) {\n      var node = this[i];\n      if (node.localName == localName && node.namespaceURI == namespaceURI) {\n        return node;\n      }\n    }\n    return null;\n  }\n};\n\n/**\r\n * The DOMImplementation interface represents an object providing methods\r\n * which are not dependent on any particular document.\r\n * Such an object is returned by the `Document.implementation` property.\r\n *\r\n * __The individual methods describe the differences compared to the specs.__\r\n *\r\n * @constructor\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\r\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\r\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\r\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\r\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\r\n */\nfunction DOMImplementation() {}\nDOMImplementation.prototype = {\n  /**\r\n   * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\r\n   * The different implementations fairly diverged in what kind of features were reported.\r\n   * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\r\n   *\r\n   * @deprecated It is deprecated and modern browsers return true in all cases.\r\n   *\r\n   * @param {string} feature\r\n   * @param {string} [version]\r\n   * @returns {boolean} always true\r\n   *\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\r\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\r\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\r\n   */\n  hasFeature: function (feature, version) {\n    return true;\n  },\n  /**\r\n   * Creates an XML Document object of the specified type with its document element.\r\n   *\r\n   * __It behaves slightly different from the description in the living standard__:\r\n   * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\r\n   * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\r\n   * - this implementation is not validating names or qualified names\r\n   *   (when parsing XML strings, the SAX parser takes care of that)\r\n   *\r\n   * @param {string|null} namespaceURI\r\n   * @param {string} qualifiedName\r\n   * @param {DocumentType=null} doctype\r\n   * @returns {Document}\r\n   *\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\r\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\r\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\r\n   *\r\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n   */\n  createDocument: function (namespaceURI, qualifiedName, doctype) {\n    var doc = new Document();\n    doc.implementation = this;\n    doc.childNodes = new NodeList();\n    doc.doctype = doctype || null;\n    if (doctype) {\n      doc.appendChild(doctype);\n    }\n    if (qualifiedName) {\n      var root = doc.createElementNS(namespaceURI, qualifiedName);\n      doc.appendChild(root);\n    }\n    return doc;\n  },\n  /**\r\n   * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\r\n   *\r\n   * __This behavior is slightly different from the in the specs__:\r\n   * - this implementation is not validating names or qualified names\r\n   *   (when parsing XML strings, the SAX parser takes care of that)\r\n   *\r\n   * @param {string} qualifiedName\r\n   * @param {string} [publicId]\r\n   * @param {string} [systemId]\r\n   * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\r\n   * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\r\n   *\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\r\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\r\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\r\n   *\r\n   * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n   * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n   * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n   */\n  createDocumentType: function (qualifiedName, publicId, systemId) {\n    var node = new DocumentType();\n    node.name = qualifiedName;\n    node.nodeName = qualifiedName;\n    node.publicId = publicId || '';\n    node.systemId = systemId || '';\n    return node;\n  }\n};\n\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\r\n */\n\nfunction Node() {}\n;\nNode.prototype = {\n  firstChild: null,\n  lastChild: null,\n  previousSibling: null,\n  nextSibling: null,\n  attributes: null,\n  parentNode: null,\n  childNodes: null,\n  ownerDocument: null,\n  nodeValue: null,\n  namespaceURI: null,\n  prefix: null,\n  localName: null,\n  // Modified in DOM Level 2:\n  insertBefore: function (newChild, refChild) {\n    //raises\n    return _insertBefore(this, newChild, refChild);\n  },\n  replaceChild: function (newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n  },\n  removeChild: function (oldChild) {\n    return _removeChild(this, oldChild);\n  },\n  appendChild: function (newChild) {\n    return this.insertBefore(newChild, null);\n  },\n  hasChildNodes: function () {\n    return this.firstChild != null;\n  },\n  cloneNode: function (deep) {\n    return cloneNode(this.ownerDocument || this, this, deep);\n  },\n  // Modified in DOM Level 2:\n  normalize: function () {\n    var child = this.firstChild;\n    while (child) {\n      var next = child.nextSibling;\n      if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n        this.removeChild(next);\n        child.appendData(next.data);\n      } else {\n        child.normalize();\n        child = next;\n      }\n    }\n  },\n  // Introduced in DOM Level 2:\n  isSupported: function (feature, version) {\n    return this.ownerDocument.implementation.hasFeature(feature, version);\n  },\n  // Introduced in DOM Level 2:\n  hasAttributes: function () {\n    return this.attributes.length > 0;\n  },\n  /**\r\n   * Look up the prefix associated to the given namespace URI, starting from this node.\r\n   * **The default namespace declarations are ignored by this method.**\r\n   * See Namespace Prefix Lookup for details on the algorithm used by this method.\r\n   *\r\n   * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\r\n   *\r\n   * @param {string | null} namespaceURI\r\n   * @returns {string | null}\r\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\r\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\r\n   * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\r\n   * @see https://github.com/xmldom/xmldom/issues/322\r\n   */\n  lookupPrefix: function (namespaceURI) {\n    var el = this;\n    while (el) {\n      var map = el._nsMap;\n      //console.dir(map)\n      if (map) {\n        for (var n in map) {\n          if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n            return n;\n          }\n        }\n      }\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  lookupNamespaceURI: function (prefix) {\n    var el = this;\n    while (el) {\n      var map = el._nsMap;\n      //console.dir(map)\n      if (map) {\n        if (Object.prototype.hasOwnProperty.call(map, prefix)) {\n          return map[prefix];\n        }\n      }\n      el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n    }\n    return null;\n  },\n  // Introduced in DOM Level 3:\n  isDefaultNamespace: function (namespaceURI) {\n    var prefix = this.lookupPrefix(namespaceURI);\n    return prefix == null;\n  }\n};\nfunction _xmlEncoder(c) {\n  return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n}\ncopy(NodeType, Node);\ncopy(NodeType, Node.prototype);\n\n/**\r\n * @param callback return true for continue,false for break\r\n * @return boolean true: break visit;\r\n */\nfunction _visitNode(node, callback) {\n  if (callback(node)) {\n    return true;\n  }\n  if (node = node.firstChild) {\n    do {\n      if (_visitNode(node, callback)) {\n        return true;\n      }\n    } while (node = node.nextSibling);\n  }\n}\nfunction Document() {\n  this.ownerDocument = this;\n}\nfunction _onAddAttribute(doc, el, newAttr) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n  }\n}\nfunction _onRemoveAttribute(doc, el, newAttr, remove) {\n  doc && doc._inc++;\n  var ns = newAttr.namespaceURI;\n  if (ns === NAMESPACE.XMLNS) {\n    //update namespace\n    delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n  }\n}\n\n/**\r\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\r\n * Passing `newChild` means it will be appended.\r\n * Otherwise it's assumed that an item has been removed,\r\n * and `el.firstNode` and it's `.nextSibling` are used\r\n * to walk the current list of child nodes.\r\n *\r\n * @param {Document} doc\r\n * @param {Node} el\r\n * @param {Node} [newChild]\r\n * @private\r\n */\nfunction _onUpdateChild(doc, el, newChild) {\n  if (doc && doc._inc) {\n    doc._inc++;\n    //update childNodes\n    var cs = el.childNodes;\n    if (newChild) {\n      cs[cs.length++] = newChild;\n    } else {\n      var child = el.firstChild;\n      var i = 0;\n      while (child) {\n        cs[i++] = child;\n        child = child.nextSibling;\n      }\n      cs.length = i;\n      delete cs[cs.length];\n    }\n  }\n}\n\n/**\r\n * Removes the connections between `parentNode` and `child`\r\n * and any existing `child.previousSibling` or `child.nextSibling`.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n *\r\n * @param {Node} parentNode\r\n * @param {Node} child\r\n * @returns {Node} the child that was removed.\r\n * @private\r\n */\nfunction _removeChild(parentNode, child) {\n  var previous = child.previousSibling;\n  var next = child.nextSibling;\n  if (previous) {\n    previous.nextSibling = next;\n  } else {\n    parentNode.firstChild = next;\n  }\n  if (next) {\n    next.previousSibling = previous;\n  } else {\n    parentNode.lastChild = previous;\n  }\n  child.parentNode = null;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  _onUpdateChild(parentNode.ownerDocument, parentNode);\n  return child;\n}\n\n/**\r\n * Returns `true` if `node` can be a parent for insertion.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\nfunction hasValidParentNodeType(node) {\n  return node && (node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE);\n}\n\n/**\r\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\nfunction hasInsertableNodeType(node) {\n  return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.COMMENT_NODE || node.nodeType === Node.PROCESSING_INSTRUCTION_NODE);\n}\n\n/**\r\n * Returns true if `node` is a DOCTYPE node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\nfunction isDocTypeNode(node) {\n  return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\r\n * Returns true if the node is an element\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\nfunction isElementNode(node) {\n  return node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\r\n * Returns true if `node` is a text node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\nfunction isTextNode(node) {\n  return node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Document} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\nfunction isElementInsertionPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n  if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n    return false;\n  }\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Node} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\nfunction isElementReplacementPossible(doc, child) {\n  var parentChildNodes = doc.childNodes || [];\n  function hasElementChildThatIsNotChild(node) {\n    return isElementNode(node) && node !== child;\n  }\n  if (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n    return false;\n  }\n  var docTypeNode = find(parentChildNodes, isDocTypeNode);\n  return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\r\n * @private\r\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\r\n *\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n  // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n  if (!hasValidParentNodeType(parent)) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n  }\n  // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n  // not implemented!\n  // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n  if (child && child.parentNode !== parent) {\n    throw new DOMException(NOT_FOUND_ERR, 'child not in parent');\n  }\n  if (\n  // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n  !hasInsertableNodeType(node) ||\n  // 5. If either `node` is a Text node and `parent` is a document,\n  // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n  // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n  // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n  isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE) {\n    throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType);\n  }\n}\n\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || [];\n\n  // DocumentFragment\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode);\n    // If node has more than one element child or has a Text node child.\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    }\n    // Otherwise, if `node` has one element child and either `parent` has an element child,\n    // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n    if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  }\n  // Element\n  if (isElementNode(node)) {\n    // `parent` has an element child, `child` is a doctype,\n    // or `child` is non-null and a doctype is following `child`.\n    if (!isElementInsertionPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  }\n  // DocumentType\n  if (isDocTypeNode(node)) {\n    // `parent` has a doctype child,\n    if (find(parentChildNodes, isDocTypeNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n    var parentElementChild = find(parentChildNodes, isElementNode);\n    // `child` is non-null and an element is preceding `child`,\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    }\n    // or `child` is null and `parent` has an element child.\n    if (!child && parentElementChild) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n    }\n  }\n}\n\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n  var parentChildNodes = parent.childNodes || [];\n  var nodeChildNodes = node.childNodes || [];\n\n  // DocumentFragment\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    var nodeChildElements = nodeChildNodes.filter(isElementNode);\n    // If `node` has more than one element child or has a Text node child.\n    if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n    }\n    // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n    if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n    }\n  }\n  // Element\n  if (isElementNode(node)) {\n    // `parent` has an element child that is not `child` or a doctype is following `child`.\n    if (!isElementReplacementPossible(parent, child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n    }\n  }\n  // DocumentType\n  if (isDocTypeNode(node)) {\n    function hasDoctypeChildThatIsNotChild(node) {\n      return isDocTypeNode(node) && node !== child;\n    }\n\n    // `parent` has a doctype child that is not `child`,\n    if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n    }\n    var parentElementChild = find(parentChildNodes, isElementNode);\n    // or an element is preceding `child`.\n    if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n    }\n  }\n}\n\n/**\r\n * @private\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n  // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n  assertPreInsertionValidity1to5(parent, node, child);\n\n  // If parent is a document, and any of the statements below, switched on the interface node implements,\n  // are true, then throw a \"HierarchyRequestError\" DOMException.\n  if (parent.nodeType === Node.DOCUMENT_NODE) {\n    (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n  }\n  var cp = node.parentNode;\n  if (cp) {\n    cp.removeChild(node); //remove and update\n  }\n  if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    var newFirst = node.firstChild;\n    if (newFirst == null) {\n      return node;\n    }\n    var newLast = node.lastChild;\n  } else {\n    newFirst = newLast = node;\n  }\n  var pre = child ? child.previousSibling : parent.lastChild;\n  newFirst.previousSibling = pre;\n  newLast.nextSibling = child;\n  if (pre) {\n    pre.nextSibling = newFirst;\n  } else {\n    parent.firstChild = newFirst;\n  }\n  if (child == null) {\n    parent.lastChild = newLast;\n  } else {\n    child.previousSibling = newLast;\n  }\n  do {\n    newFirst.parentNode = parent;\n  } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n  _onUpdateChild(parent.ownerDocument || parent, parent);\n  //console.log(parent.lastChild.nextSibling == null)\n  if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n    node.firstChild = node.lastChild = null;\n  }\n  return node;\n}\n\n/**\r\n * Appends `newChild` to `parentNode`.\r\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n * @param {Node} parentNode\r\n * @param {Node} newChild\r\n * @returns {Node}\r\n * @private\r\n */\nfunction _appendSingleChild(parentNode, newChild) {\n  if (newChild.parentNode) {\n    newChild.parentNode.removeChild(newChild);\n  }\n  newChild.parentNode = parentNode;\n  newChild.previousSibling = parentNode.lastChild;\n  newChild.nextSibling = null;\n  if (newChild.previousSibling) {\n    newChild.previousSibling.nextSibling = newChild;\n  } else {\n    parentNode.firstChild = newChild;\n  }\n  parentNode.lastChild = newChild;\n  _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n  return newChild;\n}\nDocument.prototype = {\n  //implementation : null,\n  nodeName: '#document',\n  nodeType: DOCUMENT_NODE,\n  /**\r\n   * The DocumentType node of the document.\r\n   *\r\n   * @readonly\r\n   * @type DocumentType\r\n   */\n  doctype: null,\n  documentElement: null,\n  _inc: 1,\n  insertBefore: function (newChild, refChild) {\n    //raises\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      var child = newChild.firstChild;\n      while (child) {\n        var next = child.nextSibling;\n        this.insertBefore(child, refChild);\n        child = next;\n      }\n      return newChild;\n    }\n    _insertBefore(this, newChild, refChild);\n    newChild.ownerDocument = this;\n    if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n      this.documentElement = newChild;\n    }\n    return newChild;\n  },\n  removeChild: function (oldChild) {\n    if (this.documentElement == oldChild) {\n      this.documentElement = null;\n    }\n    return _removeChild(this, oldChild);\n  },\n  replaceChild: function (newChild, oldChild) {\n    //raises\n    _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n    newChild.ownerDocument = this;\n    if (oldChild) {\n      this.removeChild(oldChild);\n    }\n    if (isElementNode(newChild)) {\n      this.documentElement = newChild;\n    }\n  },\n  // Introduced in DOM Level 2:\n  importNode: function (importedNode, deep) {\n    return importNode(this, importedNode, deep);\n  },\n  // Introduced in DOM Level 2:\n  getElementById: function (id) {\n    var rtv = null;\n    _visitNode(this.documentElement, function (node) {\n      if (node.nodeType == ELEMENT_NODE) {\n        if (node.getAttribute('id') == id) {\n          rtv = node;\n          return true;\n        }\n      }\n    });\n    return rtv;\n  },\n  /**\r\n   * The `getElementsByClassName` method of `Document` interface returns an array-like object\r\n   * of all child elements which have **all** of the given class name(s).\r\n   *\r\n   * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\r\n   *\r\n   *\r\n   * Warning: This is a live LiveNodeList.\r\n   * Changes in the DOM will reflect in the array as the changes occur.\r\n   * If an element selected by this array no longer qualifies for the selector,\r\n   * it will automatically be removed. Be aware of this for iteration purposes.\r\n   *\r\n   * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\r\n   *\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\r\n   * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\r\n   */\n  getElementsByClassName: function (classNames) {\n    var classNamesSet = toOrderedSet(classNames);\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      if (classNamesSet.length > 0) {\n        _visitNode(base.documentElement, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE) {\n            var nodeClassNames = node.getAttribute('class');\n            // can be null if the attribute does not exist\n            if (nodeClassNames) {\n              // before splitting and iterating just compare them for the most common case\n              var matches = classNames === nodeClassNames;\n              if (!matches) {\n                var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n              }\n              if (matches) {\n                ls.push(node);\n              }\n            }\n          }\n        });\n      }\n      return ls;\n    });\n  },\n  //document factory method:\n  createElement: function (tagName) {\n    var node = new Element();\n    node.ownerDocument = this;\n    node.nodeName = tagName;\n    node.tagName = tagName;\n    node.localName = tagName;\n    node.childNodes = new NodeList();\n    var attrs = node.attributes = new NamedNodeMap();\n    attrs._ownerElement = node;\n    return node;\n  },\n  createDocumentFragment: function () {\n    var node = new DocumentFragment();\n    node.ownerDocument = this;\n    node.childNodes = new NodeList();\n    return node;\n  },\n  createTextNode: function (data) {\n    var node = new Text();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createComment: function (data) {\n    var node = new Comment();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createCDATASection: function (data) {\n    var node = new CDATASection();\n    node.ownerDocument = this;\n    node.appendData(data);\n    return node;\n  },\n  createProcessingInstruction: function (target, data) {\n    var node = new ProcessingInstruction();\n    node.ownerDocument = this;\n    node.tagName = node.nodeName = node.target = target;\n    node.nodeValue = node.data = data;\n    return node;\n  },\n  createAttribute: function (name) {\n    var node = new Attr();\n    node.ownerDocument = this;\n    node.name = name;\n    node.nodeName = name;\n    node.localName = name;\n    node.specified = true;\n    return node;\n  },\n  createEntityReference: function (name) {\n    var node = new EntityReference();\n    node.ownerDocument = this;\n    node.nodeName = name;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createElementNS: function (namespaceURI, qualifiedName) {\n    var node = new Element();\n    var pl = qualifiedName.split(':');\n    var attrs = node.attributes = new NamedNodeMap();\n    node.childNodes = new NodeList();\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.tagName = qualifiedName;\n    node.namespaceURI = namespaceURI;\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n    attrs._ownerElement = node;\n    return node;\n  },\n  // Introduced in DOM Level 2:\n  createAttributeNS: function (namespaceURI, qualifiedName) {\n    var node = new Attr();\n    var pl = qualifiedName.split(':');\n    node.ownerDocument = this;\n    node.nodeName = qualifiedName;\n    node.name = qualifiedName;\n    node.namespaceURI = namespaceURI;\n    node.specified = true;\n    if (pl.length == 2) {\n      node.prefix = pl[0];\n      node.localName = pl[1];\n    } else {\n      //el.prefix = null;\n      node.localName = qualifiedName;\n    }\n    return node;\n  }\n};\n_extends(Document, Node);\nfunction Element() {\n  this._nsMap = {};\n}\n;\nElement.prototype = {\n  nodeType: ELEMENT_NODE,\n  hasAttribute: function (name) {\n    return this.getAttributeNode(name) != null;\n  },\n  getAttribute: function (name) {\n    var attr = this.getAttributeNode(name);\n    return attr && attr.value || '';\n  },\n  getAttributeNode: function (name) {\n    return this.attributes.getNamedItem(name);\n  },\n  setAttribute: function (name, value) {\n    var attr = this.ownerDocument.createAttribute(name);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  removeAttribute: function (name) {\n    var attr = this.getAttributeNode(name);\n    attr && this.removeAttributeNode(attr);\n  },\n  //four real opeartion method\n  appendChild: function (newChild) {\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return this.insertBefore(newChild, null);\n    } else {\n      return _appendSingleChild(this, newChild);\n    }\n  },\n  setAttributeNode: function (newAttr) {\n    return this.attributes.setNamedItem(newAttr);\n  },\n  setAttributeNodeNS: function (newAttr) {\n    return this.attributes.setNamedItemNS(newAttr);\n  },\n  removeAttributeNode: function (oldAttr) {\n    //console.log(this == oldAttr.ownerElement)\n    return this.attributes.removeNamedItem(oldAttr.nodeName);\n  },\n  //get real attribute name,and remove it by removeAttributeNode\n  removeAttributeNS: function (namespaceURI, localName) {\n    var old = this.getAttributeNodeNS(namespaceURI, localName);\n    old && this.removeAttributeNode(old);\n  },\n  hasAttributeNS: function (namespaceURI, localName) {\n    return this.getAttributeNodeNS(namespaceURI, localName) != null;\n  },\n  getAttributeNS: function (namespaceURI, localName) {\n    var attr = this.getAttributeNodeNS(namespaceURI, localName);\n    return attr && attr.value || '';\n  },\n  setAttributeNS: function (namespaceURI, qualifiedName, value) {\n    var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n    attr.value = attr.nodeValue = \"\" + value;\n    this.setAttributeNode(attr);\n  },\n  getAttributeNodeNS: function (namespaceURI, localName) {\n    return this.attributes.getNamedItemNS(namespaceURI, localName);\n  },\n  getElementsByTagName: function (tagName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n          ls.push(node);\n        }\n      });\n      return ls;\n    });\n  },\n  getElementsByTagNameNS: function (namespaceURI, localName) {\n    return new LiveNodeList(this, function (base) {\n      var ls = [];\n      _visitNode(base, function (node) {\n        if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n          ls.push(node);\n        }\n      });\n      return ls;\n    });\n  }\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n_extends(Element, Node);\nfunction Attr() {}\n;\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr, Node);\nfunction CharacterData() {}\n;\nCharacterData.prototype = {\n  data: '',\n  substringData: function (offset, count) {\n    return this.data.substring(offset, offset + count);\n  },\n  appendData: function (text) {\n    text = this.data + text;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  },\n  insertData: function (offset, text) {\n    this.replaceData(offset, 0, text);\n  },\n  appendChild: function (newChild) {\n    throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n  },\n  deleteData: function (offset, count) {\n    this.replaceData(offset, count, \"\");\n  },\n  replaceData: function (offset, count, text) {\n    var start = this.data.substring(0, offset);\n    var end = this.data.substring(offset + count);\n    text = start + text + end;\n    this.nodeValue = this.data = text;\n    this.length = text.length;\n  }\n};\n_extends(CharacterData, Node);\nfunction Text() {}\n;\nText.prototype = {\n  nodeName: \"#text\",\n  nodeType: TEXT_NODE,\n  splitText: function (offset) {\n    var text = this.data;\n    var newText = text.substring(offset);\n    text = text.substring(0, offset);\n    this.data = this.nodeValue = text;\n    this.length = text.length;\n    var newNode = this.ownerDocument.createTextNode(newText);\n    if (this.parentNode) {\n      this.parentNode.insertBefore(newNode, this.nextSibling);\n    }\n    return newNode;\n  }\n};\n_extends(Text, CharacterData);\nfunction Comment() {}\n;\nComment.prototype = {\n  nodeName: \"#comment\",\n  nodeType: COMMENT_NODE\n};\n_extends(Comment, CharacterData);\nfunction CDATASection() {}\n;\nCDATASection.prototype = {\n  nodeName: \"#cdata-section\",\n  nodeType: CDATA_SECTION_NODE\n};\n_extends(CDATASection, CharacterData);\nfunction DocumentType() {}\n;\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType, Node);\nfunction Notation() {}\n;\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation, Node);\nfunction Entity() {}\n;\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity, Node);\nfunction EntityReference() {}\n;\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference, Node);\nfunction DocumentFragment() {}\n;\nDocumentFragment.prototype.nodeName = \"#document-fragment\";\nDocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment, Node);\nfunction ProcessingInstruction() {}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction, Node);\nfunction XMLSerializer() {}\nXMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n  return nodeSerializeToString.call(node, isHtml, nodeFilter);\n};\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml, nodeFilter) {\n  var buf = [];\n  var refNode = this.nodeType == 9 && this.documentElement || this;\n  var prefix = refNode.prefix;\n  var uri = refNode.namespaceURI;\n  if (uri && prefix == null) {\n    //console.log(prefix)\n    var prefix = refNode.lookupPrefix(uri);\n    if (prefix == null) {\n      //isHTML = true;\n      var visibleNamespaces = [{\n        namespace: uri,\n        prefix: null\n      }\n      //{namespace:uri,prefix:''}\n      ];\n    }\n  }\n  serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);\n  //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n  return buf.join('');\n}\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n  var prefix = node.prefix || '';\n  var uri = node.namespaceURI;\n  // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n  // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n  // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n  // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n  // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n  // > [...] Furthermore, the attribute value [...] must not be an empty string.\n  // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n  if (!uri) {\n    return false;\n  }\n  if (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n    return false;\n  }\n  var i = visibleNamespaces.length;\n  while (i--) {\n    var ns = visibleNamespaces[i];\n    // get namespace prefix\n    if (ns.prefix === prefix) {\n      return ns.namespace !== uri;\n    }\n  }\n  return true;\n}\n/**\r\n * Well-formed constraint: No < in Attribute Values\r\n * > The replacement text of any entity referred to directly or indirectly\r\n * > in an attribute value must not contain a <.\r\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\r\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\r\n *\r\n * Literal whitespace other than space that appear in attribute values\r\n * are serialized as their entity references, so they will be preserved.\r\n * (In contrast to whitespace literals in the input which are normalized to spaces)\r\n * @see https://www.w3.org/TR/xml11/#AVNormalize\r\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\r\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n  buf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"');\n}\nfunction serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n  if (!visibleNamespaces) {\n    visibleNamespaces = [];\n  }\n  if (nodeFilter) {\n    node = nodeFilter(node);\n    if (node) {\n      if (typeof node == 'string') {\n        buf.push(node);\n        return;\n      }\n    } else {\n      return;\n    }\n    //buf.sort.apply(attrs, attributeSorter);\n  }\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var len = attrs.length;\n      var child = node.firstChild;\n      var nodeName = node.tagName;\n      isHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML;\n      var prefixedNodeName = nodeName;\n      if (!isHTML && !node.prefix && node.namespaceURI) {\n        var defaultNS;\n        // lookup current default ns from `xmlns` attribute\n        for (var ai = 0; ai < attrs.length; ai++) {\n          if (attrs.item(ai).name === 'xmlns') {\n            defaultNS = attrs.item(ai).value;\n            break;\n          }\n        }\n        if (!defaultNS) {\n          // lookup current default ns in visibleNamespaces\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n            if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n              defaultNS = namespace.namespace;\n              break;\n            }\n          }\n        }\n        if (defaultNS !== node.namespaceURI) {\n          for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n            var namespace = visibleNamespaces[nsi];\n            if (namespace.namespace === node.namespaceURI) {\n              if (namespace.prefix) {\n                prefixedNodeName = namespace.prefix + ':' + nodeName;\n              }\n              break;\n            }\n          }\n        }\n      }\n      buf.push('<', prefixedNodeName);\n      for (var i = 0; i < len; i++) {\n        // add namespaces for attributes\n        var attr = attrs.item(i);\n        if (attr.prefix == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: attr.localName,\n            namespace: attr.value\n          });\n        } else if (attr.nodeName == 'xmlns') {\n          visibleNamespaces.push({\n            prefix: '',\n            namespace: attr.value\n          });\n        }\n      }\n      for (var i = 0; i < len; i++) {\n        var attr = attrs.item(i);\n        if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n          var prefix = attr.prefix || '';\n          var uri = attr.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n        serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n      }\n\n      // add namespace for current node\n      if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n        var prefix = node.prefix || '';\n        var uri = node.namespaceURI;\n        addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n        visibleNamespaces.push({\n          prefix: prefix,\n          namespace: uri\n        });\n      }\n      if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n        buf.push('>');\n        //if is cdata child node\n        if (isHTML && /^script$/i.test(nodeName)) {\n          while (child) {\n            if (child.data) {\n              buf.push(child.data);\n            } else {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            }\n            child = child.nextSibling;\n          }\n        } else {\n          while (child) {\n            serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n            child = child.nextSibling;\n          }\n        }\n        buf.push('</', prefixedNodeName, '>');\n      } else {\n        buf.push('/>');\n      }\n      // remove added visible namespaces\n      //visibleNamespaces.length = startVisibleNamespaces;\n      return;\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      var child = node.firstChild;\n      while (child) {\n        serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n        child = child.nextSibling;\n      }\n      return;\n    case ATTRIBUTE_NODE:\n      return addSerializedAttribute(buf, node.name, node.value);\n    case TEXT_NODE:\n      /**\r\n       * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\r\n       * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\r\n       * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\r\n       * `&amp;` and `&lt;` respectively.\r\n       * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\r\n       * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\r\n       * when that string is not marking the end of a CDATA section.\r\n       *\r\n       * In the content of elements, character data is any string of characters\r\n       * which does not contain the start-delimiter of any markup\r\n       * and does not include the CDATA-section-close delimiter, `]]>`.\r\n       *\r\n       * @see https://www.w3.org/TR/xml/#NT-CharData\r\n       * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\r\n       */\n      return buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));\n    case CDATA_SECTION_NODE:\n      return buf.push('<![CDATA[', node.data, ']]>');\n    case COMMENT_NODE:\n      return buf.push(\"<!--\", node.data, \"-->\");\n    case DOCUMENT_TYPE_NODE:\n      var pubid = node.publicId;\n      var sysid = node.systemId;\n      buf.push('<!DOCTYPE ', node.name);\n      if (pubid) {\n        buf.push(' PUBLIC ', pubid);\n        if (sysid && sysid != '.') {\n          buf.push(' ', sysid);\n        }\n        buf.push('>');\n      } else if (sysid && sysid != '.') {\n        buf.push(' SYSTEM ', sysid, '>');\n      } else {\n        var sub = node.internalSubset;\n        if (sub) {\n          buf.push(\" [\", sub, \"]\");\n        }\n        buf.push(\">\");\n      }\n      return;\n    case PROCESSING_INSTRUCTION_NODE:\n      return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n    case ENTITY_REFERENCE_NODE:\n      return buf.push('&', node.nodeName, ';');\n    //case ENTITY_NODE:\n    //case NOTATION_NODE:\n    default:\n      buf.push('??', node.nodeName);\n  }\n}\nfunction importNode(doc, node, deep) {\n  var node2;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      node2 = node.cloneNode(false);\n      node2.ownerDocument = doc;\n    //var attrs = node2.attributes;\n    //var len = attrs.length;\n    //for(var i=0;i<len;i++){\n    //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n    //}\n    case DOCUMENT_FRAGMENT_NODE:\n      break;\n    case ATTRIBUTE_NODE:\n      deep = true;\n      break;\n    //case ENTITY_REFERENCE_NODE:\n    //case PROCESSING_INSTRUCTION_NODE:\n    ////case TEXT_NODE:\n    //case CDATA_SECTION_NODE:\n    //case COMMENT_NODE:\n    //\tdeep = false;\n    //\tbreak;\n    //case DOCUMENT_NODE:\n    //case DOCUMENT_TYPE_NODE:\n    //cannot be imported.\n    //case ENTITY_NODE:\n    //case NOTATION_NODE：\n    //can not hit in level3\n    //default:throw e;\n  }\n  if (!node2) {\n    node2 = node.cloneNode(false); //false\n  }\n  node2.ownerDocument = doc;\n  node2.parentNode = null;\n  if (deep) {\n    var child = node.firstChild;\n    while (child) {\n      node2.appendChild(importNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n  return node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc, node, deep) {\n  var node2 = new node.constructor();\n  for (var n in node) {\n    if (Object.prototype.hasOwnProperty.call(node, n)) {\n      var v = node[n];\n      if (typeof v != \"object\") {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n  }\n  if (node.childNodes) {\n    node2.childNodes = new NodeList();\n  }\n  node2.ownerDocument = doc;\n  switch (node2.nodeType) {\n    case ELEMENT_NODE:\n      var attrs = node.attributes;\n      var attrs2 = node2.attributes = new NamedNodeMap();\n      var len = attrs.length;\n      attrs2._ownerElement = node2;\n      for (var i = 0; i < len; i++) {\n        node2.setAttributeNode(cloneNode(doc, attrs.item(i), true));\n      }\n      break;\n      ;\n    case ATTRIBUTE_NODE:\n      deep = true;\n  }\n  if (deep) {\n    var child = node.firstChild;\n    while (child) {\n      node2.appendChild(cloneNode(doc, child, deep));\n      child = child.nextSibling;\n    }\n  }\n  return node2;\n}\nfunction __set__(object, key, value) {\n  object[key] = value;\n}\n//do dynamic\ntry {\n  if (Object.defineProperty) {\n    Object.defineProperty(LiveNodeList.prototype, 'length', {\n      get: function () {\n        _updateLiveList(this);\n        return this.$$length;\n      }\n    });\n    Object.defineProperty(Node.prototype, 'textContent', {\n      get: function () {\n        return getTextContent(this);\n      },\n      set: function (data) {\n        switch (this.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            while (this.firstChild) {\n              this.removeChild(this.firstChild);\n            }\n            if (data || String(data)) {\n              this.appendChild(this.ownerDocument.createTextNode(data));\n            }\n            break;\n          default:\n            this.data = data;\n            this.value = data;\n            this.nodeValue = data;\n        }\n      }\n    });\n    function getTextContent(node) {\n      switch (node.nodeType) {\n        case ELEMENT_NODE:\n        case DOCUMENT_FRAGMENT_NODE:\n          var buf = [];\n          node = node.firstChild;\n          while (node) {\n            if (node.nodeType !== 7 && node.nodeType !== 8) {\n              buf.push(getTextContent(node));\n            }\n            node = node.nextSibling;\n          }\n          return buf.join('');\n        default:\n          return node.nodeValue;\n      }\n    }\n    __set__ = function (object, key, value) {\n      //console.log(value)\n      object['$$' + key] = value;\n    };\n  }\n} catch (e) {//ie8\n}\n\n//if(typeof require == 'function'){\nexports.DocumentType = DocumentType;\nexports.DOMException = DOMException;\nexports.DOMImplementation = DOMImplementation;\nexports.Element = Element;\nexports.Node = Node;\nexports.NodeList = NodeList;\nexports.XMLSerializer = XMLSerializer;\n//}","map":{"version":3,"names":["conventions","require","find","NAMESPACE","notEmptyString","input","splitOnASCIIWhitespace","split","filter","orderedSetReducer","current","element","hasOwnProperty","toOrderedSet","list","Object","keys","reduce","arrayIncludes","indexOf","copy","src","dest","p","prototype","call","_extends","Class","Super","pt","t","constructor","console","error","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","code","message","Error","captureStackTrace","NodeList","length","item","index","toString","isHTML","nodeFilter","buf","i","serializeToString","join","predicate","Array","LiveNodeList","node","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","attr","lastIndex","tagName","getNamedItem","key","nodeName","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","namespaceURI","localName","removeNamedItem","removeNamedItemNS","DOMImplementation","hasFeature","feature","version","createDocument","qualifiedName","doctype","Document","implementation","childNodes","appendChild","root","createElementNS","createDocumentType","publicId","systemId","DocumentType","name","Node","firstChild","lastChild","previousSibling","nextSibling","attributes","parentNode","nodeValue","prefix","insertBefore","newChild","refChild","_insertBefore","replaceChild","oldChild","assertPreReplacementValidityInDocument","removeChild","_removeChild","hasChildNodes","cloneNode","deep","normalize","child","next","nodeType","appendData","data","isSupported","hasAttributes","lookupPrefix","map","_nsMap","n","lookupNamespaceURI","isDefaultNamespace","_xmlEncoder","c","charCodeAt","_visitNode","callback","ns","XMLNS","value","remove","_onUpdateChild","cs","previous","hasValidParentNodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","hasDoctypeChildThatIsNotChild","_inDocumentAssertion","cp","newFirst","newLast","pre","_appendSingleChild","documentElement","importNode","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","push","createElement","Element","attrs","createDocumentFragment","DocumentFragment","createTextNode","Text","createComment","Comment","createCDATASection","CDATASection","createProcessingInstruction","target","ProcessingInstruction","createAttribute","Attr","specified","createEntityReference","EntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","setAttributeNode","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","CharacterData","substringData","offset","count","substring","text","insertData","replaceData","deleteData","start","end","splitText","newText","newNode","Notation","Entity","XMLSerializer","isHtml","nodeSerializeToString","refNode","uri","visibleNamespaces","namespace","needNamespaceDefine","XML","addSerializedAttribute","replace","len","prefixedNodeName","defaultNS","ai","nsi","test","slice","pubid","sysid","sub","internalSubset","node2","v","attrs2","object","defineProperty","get","getTextContent","set","String","e","exports"],"sources":["C:/git/v0.1.0/restvue003/node_modules/@xmldom/xmldom/lib/dom.js"],"sourcesContent":["var conventions = require(\"./conventions\");\r\n\r\nvar find = conventions.find;\r\nvar NAMESPACE = conventions.NAMESPACE;\r\n\r\n/**\r\n * A prerequisite for `[].filter`, to drop elements that are empty\r\n * @param {string} input\r\n * @returns {boolean}\r\n */\r\nfunction notEmptyString (input) {\r\n\treturn input !== ''\r\n}\r\n/**\r\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\r\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\r\n *\r\n * @param {string} input\r\n * @returns {string[]} (can be empty)\r\n */\r\nfunction splitOnASCIIWhitespace(input) {\r\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\r\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\r\n}\r\n\r\n/**\r\n * Adds element as a key to current if it is not already present.\r\n *\r\n * @param {Record<string, boolean | undefined>} current\r\n * @param {string} element\r\n * @returns {Record<string, boolean | undefined>}\r\n */\r\nfunction orderedSetReducer (current, element) {\r\n\tif (!current.hasOwnProperty(element)) {\r\n\t\tcurrent[element] = true;\r\n\t}\r\n\treturn current;\r\n}\r\n\r\n/**\r\n * @see https://infra.spec.whatwg.org/#ordered-set\r\n * @param {string} input\r\n * @returns {string[]}\r\n */\r\nfunction toOrderedSet(input) {\r\n\tif (!input) return [];\r\n\tvar list = splitOnASCIIWhitespace(input);\r\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\r\n}\r\n\r\n/**\r\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\r\n * which we can not rely on being available.\r\n *\r\n * @param {any[]} list\r\n * @returns {function(any): boolean}\r\n */\r\nfunction arrayIncludes (list) {\r\n\treturn function(element) {\r\n\t\treturn list && list.indexOf(element) !== -1;\r\n\t}\r\n}\r\n\r\nfunction copy(src,dest){\r\n\tfor(var p in src){\r\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\r\n\t\t\tdest[p] = src[p];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\r\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\r\n */\r\nfunction _extends(Class,Super){\r\n\tvar pt = Class.prototype;\r\n\tif(!(pt instanceof Super)){\r\n\t\tfunction t(){};\r\n\t\tt.prototype = Super.prototype;\r\n\t\tt = new t();\r\n\t\tcopy(pt,t);\r\n\t\tClass.prototype = pt = t;\r\n\t}\r\n\tif(pt.constructor != Class){\r\n\t\tif(typeof Class != 'function'){\r\n\t\t\tconsole.error(\"unknown Class:\"+Class)\r\n\t\t}\r\n\t\tpt.constructor = Class\r\n\t}\r\n}\r\n\r\n// Node Types\r\nvar NodeType = {}\r\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\r\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\r\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\r\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\r\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\r\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\r\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\r\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\r\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\r\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\r\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\r\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\r\n\r\n// ExceptionCode\r\nvar ExceptionCode = {}\r\nvar ExceptionMessage = {};\r\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\r\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\r\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\r\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\r\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\r\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\r\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\r\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\r\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\r\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\r\n//level2\r\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\r\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\r\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\r\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\r\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\r\n\r\n/**\r\n * DOM Level 2\r\n * Object DOMException\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\r\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\r\n */\r\nfunction DOMException(code, message) {\r\n\tif(message instanceof Error){\r\n\t\tvar error = message;\r\n\t}else{\r\n\t\terror = this;\r\n\t\tError.call(this, ExceptionMessage[code]);\r\n\t\tthis.message = ExceptionMessage[code];\r\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\r\n\t}\r\n\terror.code = code;\r\n\tif(message) this.message = this.message + \": \" + message;\r\n\treturn error;\r\n};\r\nDOMException.prototype = Error.prototype;\r\ncopy(ExceptionCode,DOMException)\r\n\r\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\r\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\r\n * The items in the NodeList are accessible via an integral index, starting from 0.\r\n */\r\nfunction NodeList() {\r\n};\r\nNodeList.prototype = {\r\n\t/**\r\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\r\n\t * @standard level1\r\n\t */\r\n\tlength:0,\r\n\t/**\r\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\r\n\t * @standard level1\r\n\t * @param index  unsigned long\r\n\t *   Index into the collection.\r\n\t * @return Node\r\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\r\n\t */\r\n\titem: function(index) {\r\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\r\n\t},\r\n\ttoString:function(isHTML,nodeFilter){\r\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\r\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\r\n\t\t}\r\n\t\treturn buf.join('');\r\n\t},\r\n\t/**\r\n\t * @private\r\n\t * @param {function (Node):boolean} predicate\r\n\t * @returns {Node[]}\r\n\t */\r\n\tfilter: function (predicate) {\r\n\t\treturn Array.prototype.filter.call(this, predicate);\r\n\t},\r\n\t/**\r\n\t * @private\r\n\t * @param {Node} item\r\n\t * @returns {number}\r\n\t */\r\n\tindexOf: function (item) {\r\n\t\treturn Array.prototype.indexOf.call(this, item);\r\n\t},\r\n};\r\n\r\nfunction LiveNodeList(node,refresh){\r\n\tthis._node = node;\r\n\tthis._refresh = refresh\r\n\t_updateLiveList(this);\r\n}\r\nfunction _updateLiveList(list){\r\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\r\n\tif (list._inc !== inc) {\r\n\t\tvar ls = list._refresh(list._node);\r\n\t\t__set__(list,'length',ls.length);\r\n\t\tif (!list.$$length || ls.length < list.$$length) {\r\n\t\t\tfor (var i = ls.length; i in list; i++) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\r\n\t\t\t\t\tdelete list[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcopy(ls,list);\r\n\t\tlist._inc = inc;\r\n\t}\r\n}\r\nLiveNodeList.prototype.item = function(i){\r\n\t_updateLiveList(this);\r\n\treturn this[i] || null;\r\n}\r\n\r\n_extends(LiveNodeList,NodeList);\r\n\r\n/**\r\n * Objects implementing the NamedNodeMap interface are used\r\n * to represent collections of nodes that can be accessed by name.\r\n * Note that NamedNodeMap does not inherit from NodeList;\r\n * NamedNodeMaps are not maintained in any particular order.\r\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\r\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\r\n * and does not imply that the DOM specifies an order to these Nodes.\r\n * NamedNodeMap objects in the DOM are live.\r\n * used for attributes or DocumentType entities\r\n */\r\nfunction NamedNodeMap() {\r\n};\r\n\r\nfunction _findNodeIndex(list,node){\r\n\tvar i = list.length;\r\n\twhile(i--){\r\n\t\tif(list[i] === node){return i}\r\n\t}\r\n}\r\n\r\nfunction _addNamedNode(el,list,newAttr,oldAttr){\r\n\tif(oldAttr){\r\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\r\n\t}else{\r\n\t\tlist[list.length++] = newAttr;\r\n\t}\r\n\tif(el){\r\n\t\tnewAttr.ownerElement = el;\r\n\t\tvar doc = el.ownerDocument;\r\n\t\tif(doc){\r\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\r\n\t\t\t_onAddAttribute(doc,el,newAttr);\r\n\t\t}\r\n\t}\r\n}\r\nfunction _removeNamedNode(el,list,attr){\r\n\t//console.log('remove attr:'+attr)\r\n\tvar i = _findNodeIndex(list,attr);\r\n\tif(i>=0){\r\n\t\tvar lastIndex = list.length-1\r\n\t\twhile(i<lastIndex){\r\n\t\t\tlist[i] = list[++i]\r\n\t\t}\r\n\t\tlist.length = lastIndex;\r\n\t\tif(el){\r\n\t\t\tvar doc = el.ownerDocument;\r\n\t\t\tif(doc){\r\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\r\n\t\t\t\tattr.ownerElement = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\r\n\t}\r\n}\r\nNamedNodeMap.prototype = {\r\n\tlength:0,\r\n\titem:NodeList.prototype.item,\r\n\tgetNamedItem: function(key) {\r\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\r\n//\t\t\treturn null;\r\n//\t\t}\r\n\t\t//console.log()\r\n\t\tvar i = this.length;\r\n\t\twhile(i--){\r\n\t\t\tvar attr = this[i];\r\n\t\t\t//console.log(attr.nodeName,key)\r\n\t\t\tif(attr.nodeName == key){\r\n\t\t\t\treturn attr;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsetNamedItem: function(attr) {\r\n\t\tvar el = attr.ownerElement;\r\n\t\tif(el && el!=this._ownerElement){\r\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\r\n\t\t}\r\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\r\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\r\n\t\treturn oldAttr;\r\n\t},\r\n\t/* returns Node */\r\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\r\n\t\tvar el = attr.ownerElement, oldAttr;\r\n\t\tif(el && el!=this._ownerElement){\r\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\r\n\t\t}\r\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\r\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\r\n\t\treturn oldAttr;\r\n\t},\r\n\r\n\t/* returns Node */\r\n\tremoveNamedItem: function(key) {\r\n\t\tvar attr = this.getNamedItem(key);\r\n\t\t_removeNamedNode(this._ownerElement,this,attr);\r\n\t\treturn attr;\r\n\r\n\r\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\r\n\r\n\t//for level2\r\n\tremoveNamedItemNS:function(namespaceURI,localName){\r\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\r\n\t\t_removeNamedNode(this._ownerElement,this,attr);\r\n\t\treturn attr;\r\n\t},\r\n\tgetNamedItemNS: function(namespaceURI, localName) {\r\n\t\tvar i = this.length;\r\n\t\twhile(i--){\r\n\t\t\tvar node = this[i];\r\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * The DOMImplementation interface represents an object providing methods\r\n * which are not dependent on any particular document.\r\n * Such an object is returned by the `Document.implementation` property.\r\n *\r\n * __The individual methods describe the differences compared to the specs.__\r\n *\r\n * @constructor\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\r\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\r\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\r\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\r\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\r\n */\r\nfunction DOMImplementation() {\r\n}\r\n\r\nDOMImplementation.prototype = {\r\n\t/**\r\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\r\n\t * The different implementations fairly diverged in what kind of features were reported.\r\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\r\n\t *\r\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\r\n\t *\r\n\t * @param {string} feature\r\n\t * @param {string} [version]\r\n\t * @returns {boolean} always true\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\r\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\r\n\t */\r\n\thasFeature: function(feature, version) {\r\n\t\t\treturn true;\r\n\t},\r\n\t/**\r\n\t * Creates an XML Document object of the specified type with its document element.\r\n\t *\r\n\t * __It behaves slightly different from the description in the living standard__:\r\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\r\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\r\n\t * - this implementation is not validating names or qualified names\r\n\t *   (when parsing XML strings, the SAX parser takes care of that)\r\n\t *\r\n\t * @param {string|null} namespaceURI\r\n\t * @param {string} qualifiedName\r\n\t * @param {DocumentType=null} doctype\r\n\t * @returns {Document}\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\r\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\r\n\t *\r\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n\t */\r\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\r\n\t\tvar doc = new Document();\r\n\t\tdoc.implementation = this;\r\n\t\tdoc.childNodes = new NodeList();\r\n\t\tdoc.doctype = doctype || null;\r\n\t\tif (doctype){\r\n\t\t\tdoc.appendChild(doctype);\r\n\t\t}\r\n\t\tif (qualifiedName){\r\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\r\n\t\t\tdoc.appendChild(root);\r\n\t\t}\r\n\t\treturn doc;\r\n\t},\r\n\t/**\r\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\r\n\t *\r\n\t * __This behavior is slightly different from the in the specs__:\r\n\t * - this implementation is not validating names or qualified names\r\n\t *   (when parsing XML strings, the SAX parser takes care of that)\r\n\t *\r\n\t * @param {string} qualifiedName\r\n\t * @param {string} [publicId]\r\n\t * @param {string} [systemId]\r\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\r\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\r\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\r\n\t *\r\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\r\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\r\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\r\n\t */\r\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\r\n\t\tvar node = new DocumentType();\r\n\t\tnode.name = qualifiedName;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.publicId = publicId || '';\r\n\t\tnode.systemId = systemId || '';\r\n\r\n\t\treturn node;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\r\n */\r\n\r\nfunction Node() {\r\n};\r\n\r\nNode.prototype = {\r\n\tfirstChild : null,\r\n\tlastChild : null,\r\n\tpreviousSibling : null,\r\n\tnextSibling : null,\r\n\tattributes : null,\r\n\tparentNode : null,\r\n\tchildNodes : null,\r\n\townerDocument : null,\r\n\tnodeValue : null,\r\n\tnamespaceURI : null,\r\n\tprefix : null,\r\n\tlocalName : null,\r\n\t// Modified in DOM Level 2:\r\n\tinsertBefore:function(newChild, refChild){//raises\r\n\t\treturn _insertBefore(this,newChild,refChild);\r\n\t},\r\n\treplaceChild:function(newChild, oldChild){//raises\r\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\r\n\t\tif(oldChild){\r\n\t\t\tthis.removeChild(oldChild);\r\n\t\t}\r\n\t},\r\n\tremoveChild:function(oldChild){\r\n\t\treturn _removeChild(this,oldChild);\r\n\t},\r\n\tappendChild:function(newChild){\r\n\t\treturn this.insertBefore(newChild,null);\r\n\t},\r\n\thasChildNodes:function(){\r\n\t\treturn this.firstChild != null;\r\n\t},\r\n\tcloneNode:function(deep){\r\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\r\n\t},\r\n\t// Modified in DOM Level 2:\r\n\tnormalize:function(){\r\n\t\tvar child = this.firstChild;\r\n\t\twhile(child){\r\n\t\t\tvar next = child.nextSibling;\r\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\r\n\t\t\t\tthis.removeChild(next);\r\n\t\t\t\tchild.appendData(next.data);\r\n\t\t\t}else{\r\n\t\t\t\tchild.normalize();\r\n\t\t\t\tchild = next;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n  \t// Introduced in DOM Level 2:\r\n\tisSupported:function(feature, version){\r\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\r\n\t},\r\n    // Introduced in DOM Level 2:\r\n    hasAttributes:function(){\r\n    \treturn this.attributes.length>0;\r\n    },\r\n\t/**\r\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\r\n\t * **The default namespace declarations are ignored by this method.**\r\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\r\n\t *\r\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\r\n\t *\r\n\t * @param {string | null} namespaceURI\r\n\t * @returns {string | null}\r\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\r\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\r\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\r\n\t * @see https://github.com/xmldom/xmldom/issues/322\r\n\t */\r\n    lookupPrefix:function(namespaceURI){\r\n    \tvar el = this;\r\n    \twhile(el){\r\n    \t\tvar map = el._nsMap;\r\n    \t\t//console.dir(map)\r\n    \t\tif(map){\r\n    \t\t\tfor(var n in map){\r\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\r\n\t\t\t\t\t\t\treturn n;\r\n\t\t\t\t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\r\n    \t}\r\n    \treturn null;\r\n    },\r\n    // Introduced in DOM Level 3:\r\n    lookupNamespaceURI:function(prefix){\r\n    \tvar el = this;\r\n    \twhile(el){\r\n    \t\tvar map = el._nsMap;\r\n    \t\t//console.dir(map)\r\n    \t\tif(map){\r\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\r\n    \t\t\t\treturn map[prefix] ;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\r\n    \t}\r\n    \treturn null;\r\n    },\r\n    // Introduced in DOM Level 3:\r\n    isDefaultNamespace:function(namespaceURI){\r\n    \tvar prefix = this.lookupPrefix(namespaceURI);\r\n    \treturn prefix == null;\r\n    }\r\n};\r\n\r\n\r\nfunction _xmlEncoder(c){\r\n\treturn c == '<' && '&lt;' ||\r\n         c == '>' && '&gt;' ||\r\n         c == '&' && '&amp;' ||\r\n         c == '\"' && '&quot;' ||\r\n         '&#'+c.charCodeAt()+';'\r\n}\r\n\r\n\r\ncopy(NodeType,Node);\r\ncopy(NodeType,Node.prototype);\r\n\r\n/**\r\n * @param callback return true for continue,false for break\r\n * @return boolean true: break visit;\r\n */\r\nfunction _visitNode(node,callback){\r\n\tif(callback(node)){\r\n\t\treturn true;\r\n\t}\r\n\tif(node = node.firstChild){\r\n\t\tdo{\r\n\t\t\tif(_visitNode(node,callback)){return true}\r\n        }while(node=node.nextSibling)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Document(){\r\n\tthis.ownerDocument = this;\r\n}\r\n\r\nfunction _onAddAttribute(doc,el,newAttr){\r\n\tdoc && doc._inc++;\r\n\tvar ns = newAttr.namespaceURI ;\r\n\tif(ns === NAMESPACE.XMLNS){\r\n\t\t//update namespace\r\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\r\n\t}\r\n}\r\n\r\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\r\n\tdoc && doc._inc++;\r\n\tvar ns = newAttr.namespaceURI ;\r\n\tif(ns === NAMESPACE.XMLNS){\r\n\t\t//update namespace\r\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\r\n\t}\r\n}\r\n\r\n/**\r\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\r\n * Passing `newChild` means it will be appended.\r\n * Otherwise it's assumed that an item has been removed,\r\n * and `el.firstNode` and it's `.nextSibling` are used\r\n * to walk the current list of child nodes.\r\n *\r\n * @param {Document} doc\r\n * @param {Node} el\r\n * @param {Node} [newChild]\r\n * @private\r\n */\r\nfunction _onUpdateChild (doc, el, newChild) {\r\n\tif(doc && doc._inc){\r\n\t\tdoc._inc++;\r\n\t\t//update childNodes\r\n\t\tvar cs = el.childNodes;\r\n\t\tif (newChild) {\r\n\t\t\tcs[cs.length++] = newChild;\r\n\t\t} else {\r\n\t\t\tvar child = el.firstChild;\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (child) {\r\n\t\t\t\tcs[i++] = child;\r\n\t\t\t\tchild = child.nextSibling;\r\n\t\t\t}\r\n\t\t\tcs.length = i;\r\n\t\t\tdelete cs[cs.length];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes the connections between `parentNode` and `child`\r\n * and any existing `child.previousSibling` or `child.nextSibling`.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n *\r\n * @param {Node} parentNode\r\n * @param {Node} child\r\n * @returns {Node} the child that was removed.\r\n * @private\r\n */\r\nfunction _removeChild (parentNode, child) {\r\n\tvar previous = child.previousSibling;\r\n\tvar next = child.nextSibling;\r\n\tif (previous) {\r\n\t\tprevious.nextSibling = next;\r\n\t} else {\r\n\t\tparentNode.firstChild = next;\r\n\t}\r\n\tif (next) {\r\n\t\tnext.previousSibling = previous;\r\n\t} else {\r\n\t\tparentNode.lastChild = previous;\r\n\t}\r\n\tchild.parentNode = null;\r\n\tchild.previousSibling = null;\r\n\tchild.nextSibling = null;\r\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\r\n\treturn child;\r\n}\r\n\r\n/**\r\n * Returns `true` if `node` can be a parent for insertion.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction hasValidParentNodeType(node) {\r\n\treturn (\r\n\t\tnode &&\r\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\r\n\t);\r\n}\r\n\r\n/**\r\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction hasInsertableNodeType(node) {\r\n\treturn (\r\n\t\tnode &&\r\n\t\t(isElementNode(node) ||\r\n\t\t\tisTextNode(node) ||\r\n\t\t\tisDocTypeNode(node) ||\r\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\r\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\r\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\r\n\t);\r\n}\r\n\r\n/**\r\n * Returns true if `node` is a DOCTYPE node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isDocTypeNode(node) {\r\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\r\n}\r\n\r\n/**\r\n * Returns true if the node is an element\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isElementNode(node) {\r\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\r\n}\r\n/**\r\n * Returns true if `node` is a text node\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction isTextNode(node) {\r\n\treturn node && node.nodeType === Node.TEXT_NODE;\r\n}\r\n\r\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Document} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction isElementInsertionPossible(doc, child) {\r\n\tvar parentChildNodes = doc.childNodes || [];\r\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\r\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\r\n}\r\n\r\n/**\r\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\r\n * according to the presence and position of a doctype node on the same level.\r\n *\r\n * @param {Node} doc The document node\r\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\r\n * @returns {boolean} `true` if an element can be inserted before child\r\n * @private\r\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction isElementReplacementPossible(doc, child) {\r\n\tvar parentChildNodes = doc.childNodes || [];\r\n\r\n\tfunction hasElementChildThatIsNotChild(node) {\r\n\t\treturn isElementNode(node) && node !== child;\r\n\t}\r\n\r\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\r\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\r\n}\r\n\r\n/**\r\n * @private\r\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\r\n *\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreInsertionValidity1to5(parent, node, child) {\r\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\r\n\tif (!hasValidParentNodeType(parent)) {\r\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\r\n\t}\r\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\r\n\t// not implemented!\r\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\r\n\tif (child && child.parentNode !== parent) {\r\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\r\n\t}\r\n\tif (\r\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\r\n\t\t!hasInsertableNodeType(node) ||\r\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\r\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\r\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\r\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\r\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\r\n\t) {\r\n\t\tthrow new DOMException(\r\n\t\t\tHIERARCHY_REQUEST_ERR,\r\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\r\n\tvar parentChildNodes = parent.childNodes || [];\r\n\tvar nodeChildNodes = node.childNodes || [];\r\n\r\n\t// DocumentFragment\r\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\r\n\t\t// If node has more than one element child or has a Text node child.\r\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\r\n\t\t}\r\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\r\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\r\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\r\n\t\t}\r\n\t}\r\n\t// Element\r\n\tif (isElementNode(node)) {\r\n\t\t// `parent` has an element child, `child` is a doctype,\r\n\t\t// or `child` is non-null and a doctype is following `child`.\r\n\t\tif (!isElementInsertionPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\r\n\t\t}\r\n\t}\r\n\t// DocumentType\r\n\tif (isDocTypeNode(node)) {\r\n\t\t// `parent` has a doctype child,\r\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\r\n\t\t}\r\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\r\n\t\t// `child` is non-null and an element is preceding `child`,\r\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\r\n\t\t}\r\n\t\t// or `child` is null and `parent` has an element child.\r\n\t\tif (!child && parentElementChild) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * Step 6 of the checks before inserting and before replacing a child are different.\r\n *\r\n * @param {Document} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n * @see https://dom.spec.whatwg.org/#concept-node-replace\r\n */\r\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\r\n\tvar parentChildNodes = parent.childNodes || [];\r\n\tvar nodeChildNodes = node.childNodes || [];\r\n\r\n\t// DocumentFragment\r\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\r\n\t\t// If `node` has more than one element child or has a Text node child.\r\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\r\n\t\t}\r\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\r\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\r\n\t\t}\r\n\t}\r\n\t// Element\r\n\tif (isElementNode(node)) {\r\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\r\n\t\tif (!isElementReplacementPossible(parent, child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\r\n\t\t}\r\n\t}\r\n\t// DocumentType\r\n\tif (isDocTypeNode(node)) {\r\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\r\n\t\t\treturn isDocTypeNode(node) && node !== child;\r\n\t\t}\r\n\r\n\t\t// `parent` has a doctype child that is not `child`,\r\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\r\n\t\t}\r\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\r\n\t\t// or an element is preceding `child`.\r\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\r\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {Node} parent the parent node to insert `node` into\r\n * @param {Node} node the node to insert\r\n * @param {Node=} child the node that should become the `nextSibling` of `node`\r\n * @returns {Node}\r\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\r\n * @throws DOMException if `child` is provided but is not a child of `parent`.\r\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\r\n */\r\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\r\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\r\n\tassertPreInsertionValidity1to5(parent, node, child);\r\n\r\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\r\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\r\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\r\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\r\n\t}\r\n\r\n\tvar cp = node.parentNode;\r\n\tif(cp){\r\n\t\tcp.removeChild(node);//remove and update\r\n\t}\r\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\r\n\t\tvar newFirst = node.firstChild;\r\n\t\tif (newFirst == null) {\r\n\t\t\treturn node;\r\n\t\t}\r\n\t\tvar newLast = node.lastChild;\r\n\t}else{\r\n\t\tnewFirst = newLast = node;\r\n\t}\r\n\tvar pre = child ? child.previousSibling : parent.lastChild;\r\n\r\n\tnewFirst.previousSibling = pre;\r\n\tnewLast.nextSibling = child;\r\n\r\n\r\n\tif(pre){\r\n\t\tpre.nextSibling = newFirst;\r\n\t}else{\r\n\t\tparent.firstChild = newFirst;\r\n\t}\r\n\tif(child == null){\r\n\t\tparent.lastChild = newLast;\r\n\t}else{\r\n\t\tchild.previousSibling = newLast;\r\n\t}\r\n\tdo{\r\n\t\tnewFirst.parentNode = parent;\r\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\r\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\r\n\t//console.log(parent.lastChild.nextSibling == null)\r\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\r\n\t\tnode.firstChild = node.lastChild = null;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\n/**\r\n * Appends `newChild` to `parentNode`.\r\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\r\n *\r\n * @see https://github.com/xmldom/xmldom/issues/135\r\n * @see https://github.com/xmldom/xmldom/issues/145\r\n * @param {Node} parentNode\r\n * @param {Node} newChild\r\n * @returns {Node}\r\n * @private\r\n */\r\nfunction _appendSingleChild (parentNode, newChild) {\r\n\tif (newChild.parentNode) {\r\n\t\tnewChild.parentNode.removeChild(newChild);\r\n\t}\r\n\tnewChild.parentNode = parentNode;\r\n\tnewChild.previousSibling = parentNode.lastChild;\r\n\tnewChild.nextSibling = null;\r\n\tif (newChild.previousSibling) {\r\n\t\tnewChild.previousSibling.nextSibling = newChild;\r\n\t} else {\r\n\t\tparentNode.firstChild = newChild;\r\n\t}\r\n\tparentNode.lastChild = newChild;\r\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\r\n\treturn newChild;\r\n}\r\n\r\nDocument.prototype = {\r\n\t//implementation : null,\r\n\tnodeName :  '#document',\r\n\tnodeType :  DOCUMENT_NODE,\r\n\t/**\r\n\t * The DocumentType node of the document.\r\n\t *\r\n\t * @readonly\r\n\t * @type DocumentType\r\n\t */\r\n\tdoctype :  null,\r\n\tdocumentElement :  null,\r\n\t_inc : 1,\r\n\r\n\tinsertBefore :  function(newChild, refChild){//raises\r\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\r\n\t\t\tvar child = newChild.firstChild;\r\n\t\t\twhile(child){\r\n\t\t\t\tvar next = child.nextSibling;\r\n\t\t\t\tthis.insertBefore(child,refChild);\r\n\t\t\t\tchild = next;\r\n\t\t\t}\r\n\t\t\treturn newChild;\r\n\t\t}\r\n\t\t_insertBefore(this, newChild, refChild);\r\n\t\tnewChild.ownerDocument = this;\r\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\r\n\t\t\tthis.documentElement = newChild;\r\n\t\t}\r\n\r\n\t\treturn newChild;\r\n\t},\r\n\tremoveChild :  function(oldChild){\r\n\t\tif(this.documentElement == oldChild){\r\n\t\t\tthis.documentElement = null;\r\n\t\t}\r\n\t\treturn _removeChild(this,oldChild);\r\n\t},\r\n\treplaceChild: function (newChild, oldChild) {\r\n\t\t//raises\r\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\r\n\t\tnewChild.ownerDocument = this;\r\n\t\tif (oldChild) {\r\n\t\t\tthis.removeChild(oldChild);\r\n\t\t}\r\n\t\tif (isElementNode(newChild)) {\r\n\t\t\tthis.documentElement = newChild;\r\n\t\t}\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\timportNode : function(importedNode,deep){\r\n\t\treturn importNode(this,importedNode,deep);\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tgetElementById :\tfunction(id){\r\n\t\tvar rtv = null;\r\n\t\t_visitNode(this.documentElement,function(node){\r\n\t\t\tif(node.nodeType == ELEMENT_NODE){\r\n\t\t\t\tif(node.getAttribute('id') == id){\r\n\t\t\t\t\trtv = node;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn rtv;\r\n\t},\r\n\r\n\t/**\r\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\r\n\t * of all child elements which have **all** of the given class name(s).\r\n\t *\r\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\r\n\t *\r\n\t *\r\n\t * Warning: This is a live LiveNodeList.\r\n\t * Changes in the DOM will reflect in the array as the changes occur.\r\n\t * If an element selected by this array no longer qualifies for the selector,\r\n\t * it will automatically be removed. Be aware of this for iteration purposes.\r\n\t *\r\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\r\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\r\n\t */\r\n\tgetElementsByClassName: function(classNames) {\r\n\t\tvar classNamesSet = toOrderedSet(classNames)\r\n\t\treturn new LiveNodeList(this, function(base) {\r\n\t\t\tvar ls = [];\r\n\t\t\tif (classNamesSet.length > 0) {\r\n\t\t\t\t_visitNode(base.documentElement, function(node) {\r\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\r\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\r\n\t\t\t\t\t\t// can be null if the attribute does not exist\r\n\t\t\t\t\t\tif (nodeClassNames) {\r\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\r\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\r\n\t\t\t\t\t\t\tif (!matches) {\r\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\r\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(matches) {\r\n\t\t\t\t\t\t\t\tls.push(node);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn ls;\r\n\t\t});\r\n\t},\r\n\r\n\t//document factory method:\r\n\tcreateElement :\tfunction(tagName){\r\n\t\tvar node = new Element();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = tagName;\r\n\t\tnode.tagName = tagName;\r\n\t\tnode.localName = tagName;\r\n\t\tnode.childNodes = new NodeList();\r\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\r\n\t\tattrs._ownerElement = node;\r\n\t\treturn node;\r\n\t},\r\n\tcreateDocumentFragment :\tfunction(){\r\n\t\tvar node = new DocumentFragment();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.childNodes = new NodeList();\r\n\t\treturn node;\r\n\t},\r\n\tcreateTextNode :\tfunction(data){\r\n\t\tvar node = new Text();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateComment :\tfunction(data){\r\n\t\tvar node = new Comment();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateCDATASection :\tfunction(data){\r\n\t\tvar node = new CDATASection();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.appendData(data)\r\n\t\treturn node;\r\n\t},\r\n\tcreateProcessingInstruction :\tfunction(target,data){\r\n\t\tvar node = new ProcessingInstruction();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.tagName = node.nodeName = node.target = target;\r\n\t\tnode.nodeValue = node.data = data;\r\n\t\treturn node;\r\n\t},\r\n\tcreateAttribute :\tfunction(name){\r\n\t\tvar node = new Attr();\r\n\t\tnode.ownerDocument\t= this;\r\n\t\tnode.name = name;\r\n\t\tnode.nodeName\t= name;\r\n\t\tnode.localName = name;\r\n\t\tnode.specified = true;\r\n\t\treturn node;\r\n\t},\r\n\tcreateEntityReference :\tfunction(name){\r\n\t\tvar node = new EntityReference();\r\n\t\tnode.ownerDocument\t= this;\r\n\t\tnode.nodeName\t= name;\r\n\t\treturn node;\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\r\n\t\tvar node = new Element();\r\n\t\tvar pl = qualifiedName.split(':');\r\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\r\n\t\tnode.childNodes = new NodeList();\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.tagName = qualifiedName;\r\n\t\tnode.namespaceURI = namespaceURI;\r\n\t\tif(pl.length == 2){\r\n\t\t\tnode.prefix = pl[0];\r\n\t\t\tnode.localName = pl[1];\r\n\t\t}else{\r\n\t\t\t//el.prefix = null;\r\n\t\t\tnode.localName = qualifiedName;\r\n\t\t}\r\n\t\tattrs._ownerElement = node;\r\n\t\treturn node;\r\n\t},\r\n\t// Introduced in DOM Level 2:\r\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\r\n\t\tvar node = new Attr();\r\n\t\tvar pl = qualifiedName.split(':');\r\n\t\tnode.ownerDocument = this;\r\n\t\tnode.nodeName = qualifiedName;\r\n\t\tnode.name = qualifiedName;\r\n\t\tnode.namespaceURI = namespaceURI;\r\n\t\tnode.specified = true;\r\n\t\tif(pl.length == 2){\r\n\t\t\tnode.prefix = pl[0];\r\n\t\t\tnode.localName = pl[1];\r\n\t\t}else{\r\n\t\t\t//el.prefix = null;\r\n\t\t\tnode.localName = qualifiedName;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n};\r\n_extends(Document,Node);\r\n\r\n\r\nfunction Element() {\r\n\tthis._nsMap = {};\r\n};\r\nElement.prototype = {\r\n\tnodeType : ELEMENT_NODE,\r\n\thasAttribute : function(name){\r\n\t\treturn this.getAttributeNode(name)!=null;\r\n\t},\r\n\tgetAttribute : function(name){\r\n\t\tvar attr = this.getAttributeNode(name);\r\n\t\treturn attr && attr.value || '';\r\n\t},\r\n\tgetAttributeNode : function(name){\r\n\t\treturn this.attributes.getNamedItem(name);\r\n\t},\r\n\tsetAttribute : function(name, value){\r\n\t\tvar attr = this.ownerDocument.createAttribute(name);\r\n\t\tattr.value = attr.nodeValue = \"\" + value;\r\n\t\tthis.setAttributeNode(attr)\r\n\t},\r\n\tremoveAttribute : function(name){\r\n\t\tvar attr = this.getAttributeNode(name)\r\n\t\tattr && this.removeAttributeNode(attr);\r\n\t},\r\n\r\n\t//four real opeartion method\r\n\tappendChild:function(newChild){\r\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\r\n\t\t\treturn this.insertBefore(newChild,null);\r\n\t\t}else{\r\n\t\t\treturn _appendSingleChild(this,newChild);\r\n\t\t}\r\n\t},\r\n\tsetAttributeNode : function(newAttr){\r\n\t\treturn this.attributes.setNamedItem(newAttr);\r\n\t},\r\n\tsetAttributeNodeNS : function(newAttr){\r\n\t\treturn this.attributes.setNamedItemNS(newAttr);\r\n\t},\r\n\tremoveAttributeNode : function(oldAttr){\r\n\t\t//console.log(this == oldAttr.ownerElement)\r\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\r\n\t},\r\n\t//get real attribute name,and remove it by removeAttributeNode\r\n\tremoveAttributeNS : function(namespaceURI, localName){\r\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\r\n\t\told && this.removeAttributeNode(old);\r\n\t},\r\n\r\n\thasAttributeNS : function(namespaceURI, localName){\r\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\r\n\t},\r\n\tgetAttributeNS : function(namespaceURI, localName){\r\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\r\n\t\treturn attr && attr.value || '';\r\n\t},\r\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\r\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\r\n\t\tattr.value = attr.nodeValue = \"\" + value;\r\n\t\tthis.setAttributeNode(attr)\r\n\t},\r\n\tgetAttributeNodeNS : function(namespaceURI, localName){\r\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\r\n\t},\r\n\r\n\tgetElementsByTagName : function(tagName){\r\n\t\treturn new LiveNodeList(this,function(base){\r\n\t\t\tvar ls = [];\r\n\t\t\t_visitNode(base,function(node){\r\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\r\n\t\t\t\t\tls.push(node);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ls;\r\n\t\t});\r\n\t},\r\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\r\n\t\treturn new LiveNodeList(this,function(base){\r\n\t\t\tvar ls = [];\r\n\t\t\t_visitNode(base,function(node){\r\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\r\n\t\t\t\t\tls.push(node);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ls;\r\n\r\n\t\t});\r\n\t}\r\n};\r\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\r\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\r\n\r\n\r\n_extends(Element,Node);\r\nfunction Attr() {\r\n};\r\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\r\n_extends(Attr,Node);\r\n\r\n\r\nfunction CharacterData() {\r\n};\r\nCharacterData.prototype = {\r\n\tdata : '',\r\n\tsubstringData : function(offset, count) {\r\n\t\treturn this.data.substring(offset, offset+count);\r\n\t},\r\n\tappendData: function(text) {\r\n\t\ttext = this.data+text;\r\n\t\tthis.nodeValue = this.data = text;\r\n\t\tthis.length = text.length;\r\n\t},\r\n\tinsertData: function(offset,text) {\r\n\t\tthis.replaceData(offset,0,text);\r\n\r\n\t},\r\n\tappendChild:function(newChild){\r\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\r\n\t},\r\n\tdeleteData: function(offset, count) {\r\n\t\tthis.replaceData(offset,count,\"\");\r\n\t},\r\n\treplaceData: function(offset, count, text) {\r\n\t\tvar start = this.data.substring(0,offset);\r\n\t\tvar end = this.data.substring(offset+count);\r\n\t\ttext = start + text + end;\r\n\t\tthis.nodeValue = this.data = text;\r\n\t\tthis.length = text.length;\r\n\t}\r\n}\r\n_extends(CharacterData,Node);\r\nfunction Text() {\r\n};\r\nText.prototype = {\r\n\tnodeName : \"#text\",\r\n\tnodeType : TEXT_NODE,\r\n\tsplitText : function(offset) {\r\n\t\tvar text = this.data;\r\n\t\tvar newText = text.substring(offset);\r\n\t\ttext = text.substring(0, offset);\r\n\t\tthis.data = this.nodeValue = text;\r\n\t\tthis.length = text.length;\r\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\r\n\t\tif(this.parentNode){\r\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\r\n\t\t}\r\n\t\treturn newNode;\r\n\t}\r\n}\r\n_extends(Text,CharacterData);\r\nfunction Comment() {\r\n};\r\nComment.prototype = {\r\n\tnodeName : \"#comment\",\r\n\tnodeType : COMMENT_NODE\r\n}\r\n_extends(Comment,CharacterData);\r\n\r\nfunction CDATASection() {\r\n};\r\nCDATASection.prototype = {\r\n\tnodeName : \"#cdata-section\",\r\n\tnodeType : CDATA_SECTION_NODE\r\n}\r\n_extends(CDATASection,CharacterData);\r\n\r\n\r\nfunction DocumentType() {\r\n};\r\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\r\n_extends(DocumentType,Node);\r\n\r\nfunction Notation() {\r\n};\r\nNotation.prototype.nodeType = NOTATION_NODE;\r\n_extends(Notation,Node);\r\n\r\nfunction Entity() {\r\n};\r\nEntity.prototype.nodeType = ENTITY_NODE;\r\n_extends(Entity,Node);\r\n\r\nfunction EntityReference() {\r\n};\r\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\r\n_extends(EntityReference,Node);\r\n\r\nfunction DocumentFragment() {\r\n};\r\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\r\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\r\n_extends(DocumentFragment,Node);\r\n\r\n\r\nfunction ProcessingInstruction() {\r\n}\r\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\r\n_extends(ProcessingInstruction,Node);\r\nfunction XMLSerializer(){}\r\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\r\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\r\n}\r\nNode.prototype.toString = nodeSerializeToString;\r\nfunction nodeSerializeToString(isHtml,nodeFilter){\r\n\tvar buf = [];\r\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\r\n\tvar prefix = refNode.prefix;\r\n\tvar uri = refNode.namespaceURI;\r\n\r\n\tif(uri && prefix == null){\r\n\t\t//console.log(prefix)\r\n\t\tvar prefix = refNode.lookupPrefix(uri);\r\n\t\tif(prefix == null){\r\n\t\t\t//isHTML = true;\r\n\t\t\tvar visibleNamespaces=[\r\n\t\t\t{namespace:uri,prefix:null}\r\n\t\t\t//{namespace:uri,prefix:''}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\r\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\r\n\tvar prefix = node.prefix || '';\r\n\tvar uri = node.namespaceURI;\r\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\r\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\r\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\r\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\r\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\r\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\r\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\r\n\tif (!uri) {\r\n\t\treturn false;\r\n\t}\r\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar i = visibleNamespaces.length\r\n\twhile (i--) {\r\n\t\tvar ns = visibleNamespaces[i];\r\n\t\t// get namespace prefix\r\n\t\tif (ns.prefix === prefix) {\r\n\t\t\treturn ns.namespace !== uri;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n/**\r\n * Well-formed constraint: No < in Attribute Values\r\n * > The replacement text of any entity referred to directly or indirectly\r\n * > in an attribute value must not contain a <.\r\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\r\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\r\n *\r\n * Literal whitespace other than space that appear in attribute values\r\n * are serialized as their entity references, so they will be preserved.\r\n * (In contrast to whitespace literals in the input which are normalized to spaces)\r\n * @see https://www.w3.org/TR/xml11/#AVNormalize\r\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\r\n */\r\nfunction addSerializedAttribute(buf, qualifiedName, value) {\r\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\r\n}\r\n\r\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\r\n\tif (!visibleNamespaces) {\r\n\t\tvisibleNamespaces = [];\r\n\t}\r\n\r\n\tif(nodeFilter){\r\n\t\tnode = nodeFilter(node);\r\n\t\tif(node){\r\n\t\t\tif(typeof node == 'string'){\r\n\t\t\t\tbuf.push(node);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//buf.sort.apply(attrs, attributeSorter);\r\n\t}\r\n\r\n\tswitch(node.nodeType){\r\n\tcase ELEMENT_NODE:\r\n\t\tvar attrs = node.attributes;\r\n\t\tvar len = attrs.length;\r\n\t\tvar child = node.firstChild;\r\n\t\tvar nodeName = node.tagName;\r\n\r\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\r\n\r\n\t\tvar prefixedNodeName = nodeName\r\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\r\n\t\t\tvar defaultNS\r\n\t\t\t// lookup current default ns from `xmlns` attribute\r\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\r\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\r\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!defaultNS) {\r\n\t\t\t\t// lookup current default ns in visibleNamespaces\r\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\r\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\r\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\r\n\t\t\t\t\t\tdefaultNS = namespace.namespace\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (defaultNS !== node.namespaceURI) {\r\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\r\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\r\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\r\n\t\t\t\t\t\tif (namespace.prefix) {\r\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuf.push('<', prefixedNodeName);\r\n\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\t// add namespaces for attributes\r\n\t\t\tvar attr = attrs.item(i);\r\n\t\t\tif (attr.prefix == 'xmlns') {\r\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n\t\t\t}else if(attr.nodeName == 'xmlns'){\r\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tvar attr = attrs.item(i);\r\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\r\n\t\t\t\tvar prefix = attr.prefix||'';\r\n\t\t\t\tvar uri = attr.namespaceURI;\r\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\r\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\r\n\t\t\t}\r\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\r\n\t\t}\r\n\r\n\t\t// add namespace for current node\r\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\r\n\t\t\tvar prefix = node.prefix||'';\r\n\t\t\tvar uri = node.namespaceURI;\r\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\r\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\r\n\t\t}\r\n\r\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\r\n\t\t\tbuf.push('>');\r\n\t\t\t//if is cdata child node\r\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\r\n\t\t\t\twhile(child){\r\n\t\t\t\t\tif(child.data){\r\n\t\t\t\t\t\tbuf.push(child.data);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild = child.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}else\r\n\t\t\t{\r\n\t\t\t\twhile(child){\r\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\t\t\tchild = child.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbuf.push('</',prefixedNodeName,'>');\r\n\t\t}else{\r\n\t\t\tbuf.push('/>');\r\n\t\t}\r\n\t\t// remove added visible namespaces\r\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\r\n\t\treturn;\r\n\tcase DOCUMENT_NODE:\r\n\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t\treturn;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\r\n\tcase TEXT_NODE:\r\n\t\t/**\r\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\r\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\r\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\r\n\t\t * `&amp;` and `&lt;` respectively.\r\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\r\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\r\n\t\t * when that string is not marking the end of a CDATA section.\r\n\t\t *\r\n\t\t * In the content of elements, character data is any string of characters\r\n\t\t * which does not contain the start-delimiter of any markup\r\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\r\n\t\t *\r\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\r\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\r\n\t\t */\r\n\t\treturn buf.push(node.data\r\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\r\n\t\t);\r\n\tcase CDATA_SECTION_NODE:\r\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\r\n\tcase COMMENT_NODE:\r\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\r\n\tcase DOCUMENT_TYPE_NODE:\r\n\t\tvar pubid = node.publicId;\r\n\t\tvar sysid = node.systemId;\r\n\t\tbuf.push('<!DOCTYPE ',node.name);\r\n\t\tif(pubid){\r\n\t\t\tbuf.push(' PUBLIC ', pubid);\r\n\t\t\tif (sysid && sysid!='.') {\r\n\t\t\t\tbuf.push(' ', sysid);\r\n\t\t\t}\r\n\t\t\tbuf.push('>');\r\n\t\t}else if(sysid && sysid!='.'){\r\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\r\n\t\t}else{\r\n\t\t\tvar sub = node.internalSubset;\r\n\t\t\tif(sub){\r\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\r\n\t\t\t}\r\n\t\t\tbuf.push(\">\");\r\n\t\t}\r\n\t\treturn;\r\n\tcase PROCESSING_INSTRUCTION_NODE:\r\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\r\n\tcase ENTITY_REFERENCE_NODE:\r\n\t\treturn buf.push( '&',node.nodeName,';');\r\n\t//case ENTITY_NODE:\r\n\t//case NOTATION_NODE:\r\n\tdefault:\r\n\t\tbuf.push('??',node.nodeName);\r\n\t}\r\n}\r\nfunction importNode(doc,node,deep){\r\n\tvar node2;\r\n\tswitch (node.nodeType) {\r\n\tcase ELEMENT_NODE:\r\n\t\tnode2 = node.cloneNode(false);\r\n\t\tnode2.ownerDocument = doc;\r\n\t\t//var attrs = node2.attributes;\r\n\t\t//var len = attrs.length;\r\n\t\t//for(var i=0;i<len;i++){\r\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\r\n\t\t//}\r\n\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\tbreak;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\tdeep = true;\r\n\t\tbreak;\r\n\t//case ENTITY_REFERENCE_NODE:\r\n\t//case PROCESSING_INSTRUCTION_NODE:\r\n\t////case TEXT_NODE:\r\n\t//case CDATA_SECTION_NODE:\r\n\t//case COMMENT_NODE:\r\n\t//\tdeep = false;\r\n\t//\tbreak;\r\n\t//case DOCUMENT_NODE:\r\n\t//case DOCUMENT_TYPE_NODE:\r\n\t//cannot be imported.\r\n\t//case ENTITY_NODE:\r\n\t//case NOTATION_NODE：\r\n\t//can not hit in level3\r\n\t//default:throw e;\r\n\t}\r\n\tif(!node2){\r\n\t\tnode2 = node.cloneNode(false);//false\r\n\t}\r\n\tnode2.ownerDocument = doc;\r\n\tnode2.parentNode = null;\r\n\tif(deep){\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t}\r\n\treturn node2;\r\n}\r\n//\r\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\r\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\r\nfunction cloneNode(doc,node,deep){\r\n\tvar node2 = new node.constructor();\r\n\tfor (var n in node) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\r\n\t\t\tvar v = node[n];\r\n\t\t\tif (typeof v != \"object\") {\r\n\t\t\t\tif (v != node2[n]) {\r\n\t\t\t\t\tnode2[n] = v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(node.childNodes){\r\n\t\tnode2.childNodes = new NodeList();\r\n\t}\r\n\tnode2.ownerDocument = doc;\r\n\tswitch (node2.nodeType) {\r\n\tcase ELEMENT_NODE:\r\n\t\tvar attrs\t= node.attributes;\r\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\r\n\t\tvar len = attrs.length\r\n\t\tattrs2._ownerElement = node2;\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\r\n\t\t}\r\n\t\tbreak;;\r\n\tcase ATTRIBUTE_NODE:\r\n\t\tdeep = true;\r\n\t}\r\n\tif(deep){\r\n\t\tvar child = node.firstChild;\r\n\t\twhile(child){\r\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\r\n\t\t\tchild = child.nextSibling;\r\n\t\t}\r\n\t}\r\n\treturn node2;\r\n}\r\n\r\nfunction __set__(object,key,value){\r\n\tobject[key] = value\r\n}\r\n//do dynamic\r\ntry{\r\n\tif(Object.defineProperty){\r\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\r\n\t\t\tget:function(){\r\n\t\t\t\t_updateLiveList(this);\r\n\t\t\t\treturn this.$$length;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tObject.defineProperty(Node.prototype,'textContent',{\r\n\t\t\tget:function(){\r\n\t\t\t\treturn getTextContent(this);\r\n\t\t\t},\r\n\r\n\t\t\tset:function(data){\r\n\t\t\t\tswitch(this.nodeType){\r\n\t\t\t\tcase ELEMENT_NODE:\r\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\t\t\t\twhile(this.firstChild){\r\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(data || String(data)){\r\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.data = data;\r\n\t\t\t\t\tthis.value = data;\r\n\t\t\t\t\tthis.nodeValue = data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfunction getTextContent(node){\r\n\t\t\tswitch(node.nodeType){\r\n\t\t\tcase ELEMENT_NODE:\r\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\r\n\t\t\t\tvar buf = [];\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t\twhile(node){\r\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\r\n\t\t\t\t\t\tbuf.push(getTextContent(node));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t\treturn buf.join('');\r\n\t\t\tdefault:\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t__set__ = function(object,key,value){\r\n\t\t\t//console.log(value)\r\n\t\t\tobject['$$'+key] = value\r\n\t\t}\r\n\t}\r\n}catch(e){//ie8\r\n}\r\n\r\n//if(typeof require == 'function'){\r\n\texports.DocumentType = DocumentType;\r\n\texports.DOMException = DOMException;\r\n\texports.DOMImplementation = DOMImplementation;\r\n\texports.Element = Element;\r\n\texports.Node = Node;\r\n\texports.NodeList = NodeList;\r\n\texports.XMLSerializer = XMLSerializer;\r\n//}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}